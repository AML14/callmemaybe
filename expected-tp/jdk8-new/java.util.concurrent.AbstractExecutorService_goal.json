[
  {
    "signature": "newTaskFor(java.lang.Runnable runnable, T value)",
    "name": "newTaskFor",
    "containingClass": {
      "qualifiedName": "java.util.concurrent.AbstractExecutorService",
      "name": "AbstractExecutorService",
      "isArray": false
    },
    "targetClass": "java.util.concurrent.AbstractExecutorService",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.concurrent.RunnableFuture<T>",
      "name": "java.util.concurrent.RunnableFuture<T>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Runnable",
          "name": "Runnable",
          "isArray": false
        },
        "name": "runnable"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "protocol": {
      "member": "newTaskFor(java.lang.Runnable runnable, T value)",
      "comment": "Returns a RunnableFuture for the given runnable and default value.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "newTaskFor(java.util.concurrent.Callable<T> callable)",
    "name": "newTaskFor",
    "containingClass": {
      "qualifiedName": "java.util.concurrent.AbstractExecutorService",
      "name": "AbstractExecutorService",
      "isArray": false
    },
    "targetClass": "java.util.concurrent.AbstractExecutorService",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.concurrent.RunnableFuture<T>",
      "name": "java.util.concurrent.RunnableFuture<T>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.concurrent.Callable",
          "name": "Callable",
          "isArray": false
        },
        "name": "callable"
      }
    ],
    "protocol": {
      "member": "newTaskFor(java.util.concurrent.Callable<T> callable)",
      "comment": "Returns a RunnableFuture for the given callable task.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "submit(java.lang.Runnable task)",
    "name": "submit",
    "containingClass": {
      "qualifiedName": "java.util.concurrent.AbstractExecutorService",
      "name": "AbstractExecutorService",
      "isArray": false
    },
    "targetClass": "java.util.concurrent.AbstractExecutorService",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.concurrent.Future<?>",
      "name": "java.util.concurrent.Future<?>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Runnable",
          "name": "Runnable",
          "isArray": false
        },
        "name": "task"
      }
    ],
    "protocol": {
      "member": "submit(java.lang.Runnable task)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "submit(java.lang.Runnable task, T result)",
    "name": "submit",
    "containingClass": {
      "qualifiedName": "java.util.concurrent.AbstractExecutorService",
      "name": "AbstractExecutorService",
      "isArray": false
    },
    "targetClass": "java.util.concurrent.AbstractExecutorService",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.concurrent.Future<T>",
      "name": "java.util.concurrent.Future<T>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Runnable",
          "name": "Runnable",
          "isArray": false
        },
        "name": "task"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "result"
      }
    ],
    "protocol": {
      "member": "submit(java.lang.Runnable task, T result)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "submit(java.util.concurrent.Callable<T> task)",
    "name": "submit",
    "containingClass": {
      "qualifiedName": "java.util.concurrent.AbstractExecutorService",
      "name": "AbstractExecutorService",
      "isArray": false
    },
    "targetClass": "java.util.concurrent.AbstractExecutorService",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.concurrent.Future<T>",
      "name": "java.util.concurrent.Future<T>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.concurrent.Callable",
          "name": "Callable",
          "isArray": false
        },
        "name": "task"
      }
    ],
    "protocol": {
      "member": "submit(java.util.concurrent.Callable<T> task)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "invokeAny(java.util.Collection<? extends java.util.concurrent.Callable<T>> tasks)",
    "name": "invokeAny",
    "containingClass": {
      "qualifiedName": "java.util.concurrent.AbstractExecutorService",
      "name": "AbstractExecutorService",
      "isArray": false
    },
    "targetClass": "java.util.concurrent.AbstractExecutorService",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "tasks"
      }
    ],
    "protocol": {
      "member": "invokeAny(java.util.Collection<? extends java.util.concurrent.Callable<T>> tasks)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "invokeAny(java.util.Collection<? extends java.util.concurrent.Callable<T>> tasks, long timeout, java.util.concurrent.TimeUnit unit)",
    "name": "invokeAny",
    "containingClass": {
      "qualifiedName": "java.util.concurrent.AbstractExecutorService",
      "name": "AbstractExecutorService",
      "isArray": false
    },
    "targetClass": "java.util.concurrent.AbstractExecutorService",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "tasks"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "timeout"
      },
      {
        "type": {
          "qualifiedName": "java.util.concurrent.TimeUnit",
          "name": "TimeUnit",
          "isArray": false
        },
        "name": "unit"
      }
    ],
    "protocol": {
      "member": "invokeAny(java.util.Collection<? extends java.util.concurrent.Callable<T>> tasks, long timeout, java.util.concurrent.TimeUnit unit)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "invokeAll(java.util.Collection<? extends java.util.concurrent.Callable<T>> tasks)",
    "name": "invokeAll",
    "containingClass": {
      "qualifiedName": "java.util.concurrent.AbstractExecutorService",
      "name": "AbstractExecutorService",
      "isArray": false
    },
    "targetClass": "java.util.concurrent.AbstractExecutorService",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List<java.util.concurrent.Future<T>>",
      "name": "java.util.List<java.util.concurrent.Future<T>>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "tasks"
      }
    ],
    "protocol": {
      "member": "invokeAll(java.util.Collection<? extends java.util.concurrent.Callable<T>> tasks)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "invokeAll(java.util.Collection<? extends java.util.concurrent.Callable<T>> tasks, long timeout, java.util.concurrent.TimeUnit unit)",
    "name": "invokeAll",
    "containingClass": {
      "qualifiedName": "java.util.concurrent.AbstractExecutorService",
      "name": "AbstractExecutorService",
      "isArray": false
    },
    "targetClass": "java.util.concurrent.AbstractExecutorService",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List<java.util.concurrent.Future<T>>",
      "name": "java.util.List<java.util.concurrent.Future<T>>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "tasks"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "timeout"
      },
      {
        "type": {
          "qualifiedName": "java.util.concurrent.TimeUnit",
          "name": "TimeUnit",
          "isArray": false
        },
        "name": "unit"
      }
    ],
    "protocol": {
      "member": "invokeAll(java.util.Collection<? extends java.util.concurrent.Callable<T>> tasks, long timeout, java.util.concurrent.TimeUnit unit)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  }
]