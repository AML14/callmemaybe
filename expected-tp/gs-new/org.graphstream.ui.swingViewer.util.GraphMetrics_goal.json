[
  {
    "signature": "org.graphstream.ui.swingViewer.util.GraphMetrics()",
    "name": "org.graphstream.ui.swingViewer.util.GraphMetrics",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.GraphMetrics",
      "name": "GraphMetrics",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.GraphMetrics",
    "isVarArgs": false,
    "parameters": [],
    "protocol": {
      "member": "org.graphstream.ui.swingViewer.util.GraphMetrics()",
      "comment": "New canvas metrics with default values.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setDefaults()",
    "name": "setDefaults",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.GraphMetrics",
      "name": "GraphMetrics",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.GraphMetrics",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "setDefaults()",
      "comment": "Set defaults value in the lo, hi and size fields to (-1) and (1) respectively.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getDiagonal()",
    "name": "getDiagonal",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.GraphMetrics",
      "name": "GraphMetrics",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.GraphMetrics",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getDiagonal()",
      "comment": "The graph diagonal (the overall width).",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getSize()",
    "name": "getSize",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.GraphMetrics",
      "name": "GraphMetrics",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.GraphMetrics",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.graphstream.ui.geom.Vector3",
      "name": "org.graphstream.ui.geom.Vector3",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getSize()",
      "comment": "The graph bounds.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getLowPoint()",
    "name": "getLowPoint",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.GraphMetrics",
      "name": "GraphMetrics",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.GraphMetrics",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.graphstream.ui.geom.Point3",
      "name": "org.graphstream.ui.geom.Point3",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getLowPoint()",
      "comment": "The graph lowest (bottom,left,front) point.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getHighPoint()",
    "name": "getHighPoint",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.GraphMetrics",
      "name": "GraphMetrics",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.GraphMetrics",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.graphstream.ui.geom.Point3",
      "name": "org.graphstream.ui.geom.Point3",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getHighPoint()",
      "comment": "The graph highest (top,right,back) point.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "graphWidthGU()",
    "name": "graphWidthGU",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.GraphMetrics",
      "name": "GraphMetrics",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.GraphMetrics",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "graphWidthGU()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "graphHeightGU()",
    "name": "graphHeightGU",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.GraphMetrics",
      "name": "GraphMetrics",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.GraphMetrics",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "graphHeightGU()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "graphDepthGU()",
    "name": "graphDepthGU",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.GraphMetrics",
      "name": "GraphMetrics",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.GraphMetrics",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "graphDepthGU()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "lengthToGu(double value, org.graphstream.ui.graphicGraph.stylesheet.StyleConstants$Units units)",
    "name": "lengthToGu",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.GraphMetrics",
      "name": "GraphMetrics",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.GraphMetrics",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "value"
      },
      {
        "type": {
          "qualifiedName": "org.graphstream.ui.graphicGraph.stylesheet.StyleConstants$Units",
          "name": "Units",
          "isArray": false
        },
        "name": "units"
      }
    ],
    "protocol": {
      "member": "lengthToGu(double value, org.graphstream.ui.graphicGraph.stylesheet.StyleConstants$Units units)",
      "comment": "Convert a value in given units to graph units.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "lengthToGu(org.graphstream.ui.graphicGraph.stylesheet.Value value)",
    "name": "lengthToGu",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.GraphMetrics",
      "name": "GraphMetrics",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.GraphMetrics",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.graphstream.ui.graphicGraph.stylesheet.Value",
          "name": "Value",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "protocol": {
      "member": "lengthToGu(org.graphstream.ui.graphicGraph.stylesheet.Value value)",
      "comment": "Convert a value in a given units to graph units.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "lengthToGu(org.graphstream.ui.graphicGraph.stylesheet.Values values, int index)",
    "name": "lengthToGu",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.GraphMetrics",
      "name": "GraphMetrics",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.GraphMetrics",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.graphstream.ui.graphicGraph.stylesheet.Values",
          "name": "Values",
          "isArray": false
        },
        "name": "values"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      }
    ],
    "protocol": {
      "member": "lengthToGu(org.graphstream.ui.graphicGraph.stylesheet.Values values, int index)",
      "comment": "Convert one of the given values in a given units to graph units.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "lengthToPx(double value, org.graphstream.ui.graphicGraph.stylesheet.StyleConstants$Units units)",
    "name": "lengthToPx",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.GraphMetrics",
      "name": "GraphMetrics",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.GraphMetrics",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "value"
      },
      {
        "type": {
          "qualifiedName": "org.graphstream.ui.graphicGraph.stylesheet.StyleConstants$Units",
          "name": "Units",
          "isArray": false
        },
        "name": "units"
      }
    ],
    "protocol": {
      "member": "lengthToPx(double value, org.graphstream.ui.graphicGraph.stylesheet.StyleConstants$Units units)",
      "comment": "Convert a value in a given units to pixels.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "lengthToPx(org.graphstream.ui.graphicGraph.stylesheet.Value value)",
    "name": "lengthToPx",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.GraphMetrics",
      "name": "GraphMetrics",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.GraphMetrics",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.graphstream.ui.graphicGraph.stylesheet.Value",
          "name": "Value",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "protocol": {
      "member": "lengthToPx(org.graphstream.ui.graphicGraph.stylesheet.Value value)",
      "comment": "Convert a value in a given units to pixels.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "lengthToPx(org.graphstream.ui.graphicGraph.stylesheet.Values values, int index)",
    "name": "lengthToPx",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.GraphMetrics",
      "name": "GraphMetrics",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.GraphMetrics",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.graphstream.ui.graphicGraph.stylesheet.Values",
          "name": "Values",
          "isArray": false
        },
        "name": "values"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      }
    ],
    "protocol": {
      "member": "lengthToPx(org.graphstream.ui.graphicGraph.stylesheet.Values values, int index)",
      "comment": "Convert one of the given values in a given units pixels.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "positionPixelToGu(int pixels, int index)",
    "name": "positionPixelToGu",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.GraphMetrics",
      "name": "GraphMetrics",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.GraphMetrics",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "pixels"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      }
    ],
    "protocol": {
      "member": "positionPixelToGu(int pixels, int index)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "toString()",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.GraphMetrics",
      "name": "GraphMetrics",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.GraphMetrics",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "toString()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setViewport(double viewportX, double viewportY, double viewportWidth, double viewportHeight)",
    "name": "setViewport",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.GraphMetrics",
      "name": "GraphMetrics",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.GraphMetrics",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "viewportX"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "viewportY"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "viewportWidth"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "viewportHeight"
      }
    ],
    "protocol": {
      "member": "setViewport(double viewportX, double viewportY, double viewportWidth, double viewportHeight)",
      "comment": "Set the output view port size in pixels.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setRatioPx2Gu(double ratio)",
    "name": "setRatioPx2Gu",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.GraphMetrics",
      "name": "GraphMetrics",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.GraphMetrics",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "ratio"
      }
    ],
    "protocol": {
      "member": "setRatioPx2Gu(double ratio)",
      "comment": "The ratio to pass by multiplication from pixels to graph units. This ratio must be larger than zero, else nothing is changed.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setBounds(double minx, double miny, double minz, double maxx, double maxy, double maxz)",
    "name": "setBounds",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.GraphMetrics",
      "name": "GraphMetrics",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.GraphMetrics",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "minx"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "miny"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "minz"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "maxx"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "maxy"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "maxz"
      }
    ],
    "protocol": {
      "member": "setBounds(double minx, double miny, double minz, double maxx, double maxy, double maxz)",
      "comment": "Set the graphic graph bounds (the lowest and highest points).",
      "kind": "FreeText",
      "condition": ""
    }
  }
]