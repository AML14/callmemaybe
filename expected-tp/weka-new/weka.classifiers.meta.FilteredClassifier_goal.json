[
  {
    "signature": "weka.classifiers.meta.FilteredClassifier()",
    "name": "weka.classifiers.meta.FilteredClassifier",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.FilteredClassifier",
      "name": "FilteredClassifier",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.FilteredClassifier",
    "isVarArgs": false,
    "parameters": [],
    "protocol": {
      "member": "weka.classifiers.meta.FilteredClassifier()",
      "comment": "Default constructor.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "globalInfo()",
    "name": "globalInfo",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.FilteredClassifier",
      "name": "FilteredClassifier",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.FilteredClassifier",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "globalInfo()",
      "comment": "Returns a string describing this classifier",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "defaultClassifierString()",
    "name": "defaultClassifierString",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.FilteredClassifier",
      "name": "FilteredClassifier",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.FilteredClassifier",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "defaultClassifierString()",
      "comment": "String describing default classifier.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "defaultFilterString()",
    "name": "defaultFilterString",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.FilteredClassifier",
      "name": "FilteredClassifier",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.FilteredClassifier",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "defaultFilterString()",
      "comment": "String describing default filter.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setDoNotCheckForModifiedClassAttribute(boolean flag)",
    "name": "setDoNotCheckForModifiedClassAttribute",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.FilteredClassifier",
      "name": "FilteredClassifier",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.FilteredClassifier",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "flag"
      }
    ],
    "protocol": {
      "member": "setDoNotCheckForModifiedClassAttribute(boolean flag)",
      "comment": "Use this method to determine whether classifier checks whether class attribute has been modified by filter.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "graphType()",
    "name": "graphType",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.FilteredClassifier",
      "name": "FilteredClassifier",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.FilteredClassifier",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "graphType()",
      "comment": "Returns the type of graph this classifier represents.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "graph()",
    "name": "graph",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.FilteredClassifier",
      "name": "FilteredClassifier",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.FilteredClassifier",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "graph()",
      "comment": "Returns graph describing the classifier (if possible).",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "generatePartition(weka.core.Instances data)",
    "name": "generatePartition",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.FilteredClassifier",
      "name": "FilteredClassifier",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.FilteredClassifier",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "weka.core.Instances",
          "name": "Instances",
          "isArray": false
        },
        "name": "data"
      }
    ],
    "protocol": {
      "member": "generatePartition(weka.core.Instances data)",
      "comment": "Builds the classifier to generate a partition. (If the base classifier supports this.)",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getMembershipValues(weka.core.Instance inst)",
    "name": "getMembershipValues",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.FilteredClassifier",
      "name": "FilteredClassifier",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.FilteredClassifier",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[]",
      "name": "double[]",
      "isArray": true
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "weka.core.Instance",
          "name": "Instance",
          "isArray": false
        },
        "name": "inst"
      }
    ],
    "protocol": {
      "member": "getMembershipValues(weka.core.Instance inst)",
      "comment": "Computes an array that has a value for each element in the partition. (If the base classifier supports this.)",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "numElements()",
    "name": "numElements",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.FilteredClassifier",
      "name": "FilteredClassifier",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.FilteredClassifier",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "numElements()",
      "comment": "Returns the number of elements in the partition. (If the base classifier supports this.)",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "initializeClassifier(weka.core.Instances data)",
    "name": "initializeClassifier",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.FilteredClassifier",
      "name": "FilteredClassifier",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.FilteredClassifier",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "weka.core.Instances",
          "name": "Instances",
          "isArray": false
        },
        "name": "data"
      }
    ],
    "protocol": {
      "member": "initializeClassifier(weka.core.Instances data)",
      "comment": "Initializes an iterative classifier. (If the base classifier supports this.)",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "next()",
    "name": "next",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.FilteredClassifier",
      "name": "FilteredClassifier",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.FilteredClassifier",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "next()",
      "comment": "Performs one iteration. (If the base classifier supports this.)",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "done()",
    "name": "done",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.FilteredClassifier",
      "name": "FilteredClassifier",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.FilteredClassifier",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "done()",
      "comment": "Signal end of iterating, useful for any house-keeping/cleanup (If the base classifier supports this.) @exception Exception if cleanup fails",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "listOptions()",
    "name": "listOptions",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.FilteredClassifier",
      "name": "FilteredClassifier",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.FilteredClassifier",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Enumeration<weka.core.Option>",
      "name": "java.util.Enumeration<weka.core.Option>",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "listOptions()",
      "comment": "Returns an enumeration describing the available options.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setOptions(java.lang.String[] options)",
    "name": "setOptions",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.FilteredClassifier",
      "name": "FilteredClassifier",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.FilteredClassifier",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Ljava.lang.String;",
          "name": "String[]",
          "isArray": true
        },
        "name": "options"
      }
    ],
    "protocol": {
      "member": "setOptions(java.lang.String[] options)",
      "comment": "Parses a given list of options.   -F <filter specification> Full class name of filter to use, followed by filter options. eg: \"wekamethod_0method_1method_2method_3 -V -R 1,2\"   -D If set, classifier is run in debug mode and may output additional info to the console   -W Full name of base classifier. (default: wekamethod_4method_5method_6)   Options specific to classifier wekamethod_4method_5method_6:   -U Use unpruned tree.   -C <pruning confidence> Set confidence threshold for pruning. (default 0method_10)   -M <minimum number of instances> Set minimum number of instances per leaf. (default 2)   -R Use reduced error pruning.   -N <number of folds> Set number of folds for reduced error pruning. One fold is used as pruning set. (default 3)   -B Use binary splits only.   -S Don't perform subtree raising.   -L Do not clean up after the tree has been built.   -A Laplace smoothing for predicted probabilities.   -Q <seed> Seed for random data shuffling (default 1).  <!-- options-end -->",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getOptions()",
    "name": "getOptions",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.FilteredClassifier",
      "name": "FilteredClassifier",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.FilteredClassifier",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String[]",
      "name": "java.lang.String[]",
      "isArray": true
    },
    "parameters": [],
    "protocol": {
      "member": "getOptions()",
      "comment": "Gets the current settings of the Classifier.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "filterTipText()",
    "name": "filterTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.FilteredClassifier",
      "name": "FilteredClassifier",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.FilteredClassifier",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "filterTipText()",
      "comment": "Returns the tip text for this property",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setFilter(weka.filters.Filter filter)",
    "name": "setFilter",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.FilteredClassifier",
      "name": "FilteredClassifier",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.FilteredClassifier",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "weka.filters.Filter",
          "name": "Filter",
          "isArray": false
        },
        "name": "filter"
      }
    ],
    "protocol": {
      "member": "setFilter(weka.filters.Filter filter)",
      "comment": "Sets the filter",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getFilter()",
    "name": "getFilter",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.FilteredClassifier",
      "name": "FilteredClassifier",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.FilteredClassifier",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "weka.filters.Filter",
      "name": "weka.filters.Filter",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getFilter()",
      "comment": "Gets the filter used.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getFilterSpec()",
    "name": "getFilterSpec",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.FilteredClassifier",
      "name": "FilteredClassifier",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.FilteredClassifier",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getFilterSpec()",
      "comment": "Gets the filter specification string, which contains the class name of the filter and any options to the filter",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getCapabilities()",
    "name": "getCapabilities",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.FilteredClassifier",
      "name": "FilteredClassifier",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.FilteredClassifier",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "weka.core.Capabilities",
      "name": "weka.core.Capabilities",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getCapabilities()",
      "comment": "Returns default capabilities of the classifier.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setUp(weka.core.Instances data)",
    "name": "setUp",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.FilteredClassifier",
      "name": "FilteredClassifier",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.FilteredClassifier",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "weka.core.Instances",
      "name": "weka.core.Instances",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "weka.core.Instances",
          "name": "Instances",
          "isArray": false
        },
        "name": "data"
      }
    ],
    "protocol": {
      "member": "setUp(weka.core.Instances data)",
      "comment": "Sets up the filter and runs checks.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "buildClassifier(weka.core.Instances data)",
    "name": "buildClassifier",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.FilteredClassifier",
      "name": "FilteredClassifier",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.FilteredClassifier",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "weka.core.Instances",
          "name": "Instances",
          "isArray": false
        },
        "name": "data"
      }
    ],
    "protocol": {
      "member": "buildClassifier(weka.core.Instances data)",
      "comment": "Build the classifier on the filtered data.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "filterInstance(weka.core.Instance instance)",
    "name": "filterInstance",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.FilteredClassifier",
      "name": "FilteredClassifier",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.FilteredClassifier",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "weka.core.Instance",
      "name": "weka.core.Instance",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "weka.core.Instance",
          "name": "Instance",
          "isArray": false
        },
        "name": "instance"
      }
    ],
    "protocol": {
      "member": "filterInstance(weka.core.Instance instance)",
      "comment": "Filters the instance so that it can subsequently be classified.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "distributionForInstance(weka.core.Instance instance)",
    "name": "distributionForInstance",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.FilteredClassifier",
      "name": "FilteredClassifier",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.FilteredClassifier",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[]",
      "name": "double[]",
      "isArray": true
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "weka.core.Instance",
          "name": "Instance",
          "isArray": false
        },
        "name": "instance"
      }
    ],
    "protocol": {
      "member": "distributionForInstance(weka.core.Instance instance)",
      "comment": "Classifies a given instance after filtering.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "batchSizeTipText()",
    "name": "batchSizeTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.FilteredClassifier",
      "name": "FilteredClassifier",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.FilteredClassifier",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "batchSizeTipText()",
      "comment": "Tool tip text for this property",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setBatchSize(java.lang.String size)",
    "name": "setBatchSize",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.FilteredClassifier",
      "name": "FilteredClassifier",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.FilteredClassifier",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "size"
      }
    ],
    "protocol": {
      "member": "setBatchSize(java.lang.String size)",
      "comment": "Set the batch size to use. Gets passed through to the base learner if it implements BatchPrecitor. Otherwise it is just ignored.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getBatchSize()",
    "name": "getBatchSize",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.FilteredClassifier",
      "name": "FilteredClassifier",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.FilteredClassifier",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getBatchSize()",
      "comment": "Gets the preferred batch size from the base learner if it implements BatchPredictor. Returns 1 as the preferred batch size otherwise.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "distributionsForInstances(weka.core.Instances insts)",
    "name": "distributionsForInstances",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.FilteredClassifier",
      "name": "FilteredClassifier",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.FilteredClassifier",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[][]",
      "name": "double[][]",
      "isArray": true
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "weka.core.Instances",
          "name": "Instances",
          "isArray": false
        },
        "name": "insts"
      }
    ],
    "protocol": {
      "member": "distributionsForInstances(weka.core.Instances insts)",
      "comment": "Batch scoring method. Calls the appropriate method for the base learner if it implements BatchPredictor. Otherwise it simply calls the method_0 method repeatedly.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "implementsMoreEfficientBatchPrediction()",
    "name": "implementsMoreEfficientBatchPrediction",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.FilteredClassifier",
      "name": "FilteredClassifier",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.FilteredClassifier",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "implementsMoreEfficientBatchPrediction()",
      "comment": "Returns true if the base classifier implements BatchPredictor and is able to generate batch predictions efficiently",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "toString()",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.FilteredClassifier",
      "name": "FilteredClassifier",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.FilteredClassifier",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "toString()",
      "comment": "Output a representation of this classifier",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getRevision()",
    "name": "getRevision",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.FilteredClassifier",
      "name": "FilteredClassifier",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.FilteredClassifier",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getRevision()",
      "comment": "Returns the revision string.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "main(java.lang.String[] argv)",
    "name": "main",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.FilteredClassifier",
      "name": "FilteredClassifier",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.FilteredClassifier",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Ljava.lang.String;",
          "name": "String[]",
          "isArray": true
        },
        "name": "argv"
      }
    ],
    "protocol": {
      "member": "main(java.lang.String[] argv)",
      "comment": "Main method for testing this class.",
      "kind": "FreeText",
      "condition": ""
    }
  }
]