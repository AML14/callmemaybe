[
  {
    "signature": "java.util.LinkedList()",
    "name": "java.util.LinkedList",
    "containingClass": {
      "qualifiedName": "java.util.LinkedList",
      "name": "LinkedList",
      "isArray": false
    },
    "targetClass": "java.util.LinkedList",
    "isVarArgs": false,
    "parameters": [],
    "protocol": {
      "member": "java.util.LinkedList()",
      "comment": "Constructs an empty list.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "java.util.LinkedList(java.util.Collection<? extends E> c)",
    "name": "java.util.LinkedList",
    "containingClass": {
      "qualifiedName": "java.util.LinkedList",
      "name": "LinkedList",
      "isArray": false
    },
    "targetClass": "java.util.LinkedList",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "c"
      }
    ],
    "protocol": {
      "member": "java.util.LinkedList(java.util.Collection<? extends E> c)",
      "comment": "Constructs a list containing the elements of the specified collection, in the order they are returned by the collection's iterator.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "linkLast(E e)",
    "name": "linkLast",
    "containingClass": {
      "qualifiedName": "java.util.LinkedList",
      "name": "LinkedList",
      "isArray": false
    },
    "targetClass": "java.util.LinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "e"
      }
    ],
    "protocol": {
      "member": "linkLast(E e)",
      "comment": "Links e as last element.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "linkBefore(E e, java.util.LinkedList$Node<E> succ)",
    "name": "linkBefore",
    "containingClass": {
      "qualifiedName": "java.util.LinkedList",
      "name": "LinkedList",
      "isArray": false
    },
    "targetClass": "java.util.LinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "e"
      },
      {
        "type": {
          "qualifiedName": "java.util.LinkedList$Node",
          "name": "Node",
          "isArray": false
        },
        "name": "succ"
      }
    ],
    "protocol": {
      "member": "linkBefore(E e, java.util.LinkedList$Node<E> succ)",
      "comment": "Inserts element e before non-null Node succ.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "unlink(java.util.LinkedList$Node<E> x)",
    "name": "unlink",
    "containingClass": {
      "qualifiedName": "java.util.LinkedList",
      "name": "LinkedList",
      "isArray": false
    },
    "targetClass": "java.util.LinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "E",
      "name": "E",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.LinkedList$Node",
          "name": "Node",
          "isArray": false
        },
        "name": "x"
      }
    ],
    "protocol": {
      "member": "unlink(java.util.LinkedList$Node<E> x)",
      "comment": "Unlinks non-null node x.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getFirst()",
    "name": "getFirst",
    "containingClass": {
      "qualifiedName": "java.util.LinkedList",
      "name": "LinkedList",
      "isArray": false
    },
    "targetClass": "java.util.LinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "E",
      "name": "E",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getFirst()",
      "comment": "Returns the first element in this list.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getLast()",
    "name": "getLast",
    "containingClass": {
      "qualifiedName": "java.util.LinkedList",
      "name": "LinkedList",
      "isArray": false
    },
    "targetClass": "java.util.LinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "E",
      "name": "E",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getLast()",
      "comment": "Returns the last element in this list.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "removeFirst()",
    "name": "removeFirst",
    "containingClass": {
      "qualifiedName": "java.util.LinkedList",
      "name": "LinkedList",
      "isArray": false
    },
    "targetClass": "java.util.LinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "E",
      "name": "E",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "removeFirst()",
      "comment": "Removes and returns the first element from this list.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "removeLast()",
    "name": "removeLast",
    "containingClass": {
      "qualifiedName": "java.util.LinkedList",
      "name": "LinkedList",
      "isArray": false
    },
    "targetClass": "java.util.LinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "E",
      "name": "E",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "removeLast()",
      "comment": "Removes and returns the last element from this list.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "addFirst(E e)",
    "name": "addFirst",
    "containingClass": {
      "qualifiedName": "java.util.LinkedList",
      "name": "LinkedList",
      "isArray": false
    },
    "targetClass": "java.util.LinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "e"
      }
    ],
    "protocol": {
      "member": "addFirst(E e)",
      "comment": "Inserts the specified element at the beginning of this list.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "addLast(E e)",
    "name": "addLast",
    "containingClass": {
      "qualifiedName": "java.util.LinkedList",
      "name": "LinkedList",
      "isArray": false
    },
    "targetClass": "java.util.LinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "e"
      }
    ],
    "protocol": {
      "member": "addLast(E e)",
      "comment": "Appends the specified element to the end of this list. This method is equivalent to method_0.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "contains(java.lang.Object o)",
    "name": "contains",
    "containingClass": {
      "qualifiedName": "java.util.LinkedList",
      "name": "LinkedList",
      "isArray": false
    },
    "targetClass": "java.util.LinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "o"
      }
    ],
    "protocol": {
      "member": "contains(java.lang.Object o)",
      "comment": "Returns true if this list contains the specified element. More formally, returns true if and only if this list contains at least one element e such that (o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;method_0.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "size()",
    "name": "size",
    "containingClass": {
      "qualifiedName": "java.util.LinkedList",
      "name": "LinkedList",
      "isArray": false
    },
    "targetClass": "java.util.LinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "size()",
      "comment": "Returns the number of elements in this list.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "add(E e)",
    "name": "add",
    "containingClass": {
      "qualifiedName": "java.util.LinkedList",
      "name": "LinkedList",
      "isArray": false
    },
    "targetClass": "java.util.LinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "e"
      }
    ],
    "protocol": {
      "member": "add(E e)",
      "comment": "Appends the specified element to the end of this list. This method is equivalent to method_0.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "remove(java.lang.Object o)",
    "name": "remove",
    "containingClass": {
      "qualifiedName": "java.util.LinkedList",
      "name": "LinkedList",
      "isArray": false
    },
    "targetClass": "java.util.LinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "o"
      }
    ],
    "protocol": {
      "member": "remove(java.lang.Object o)",
      "comment": "Removes the first occurrence of the specified element from this list, if it is present. If this list does not contain the element, it is unchanged. More formally, removes the element with the lowest index i such that (o==null&nbsp;?&nbsp;method_0==null&nbsp;:&nbsp;omethod_2(method_0)) (if such an element exists). Returns true if this list contained the specified element (or equivalently, if this list changed as a result of the call).",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "addAll(java.util.Collection<? extends E> c)",
    "name": "addAll",
    "containingClass": {
      "qualifiedName": "java.util.LinkedList",
      "name": "LinkedList",
      "isArray": false
    },
    "targetClass": "java.util.LinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "c"
      }
    ],
    "protocol": {
      "member": "addAll(java.util.Collection<? extends E> c)",
      "comment": "Appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator. The behavior of this operation is undefined if the specified collection is modified while the operation is in progress. (Note that this will occur if the specified collection is this list, and it's nonempty.)",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "addAll(int index, java.util.Collection<? extends E> c)",
    "name": "addAll",
    "containingClass": {
      "qualifiedName": "java.util.LinkedList",
      "name": "LinkedList",
      "isArray": false
    },
    "targetClass": "java.util.LinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      },
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "c"
      }
    ],
    "protocol": {
      "member": "addAll(int index, java.util.Collection<? extends E> c)",
      "comment": "Inserts all of the elements in the specified collection into this list, starting at the specified position. Shifts the element currently at that position (if any) and any subsequent elements to the right (increases their indices). The new elements will appear in the list in the order that they are returned by the specified collection's iterator.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "clear()",
    "name": "clear",
    "containingClass": {
      "qualifiedName": "java.util.LinkedList",
      "name": "LinkedList",
      "isArray": false
    },
    "targetClass": "java.util.LinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "clear()",
      "comment": "Removes all of the elements from this list. The list will be empty after this call returns.",
      "kind": "FreeText",
      "condition": "receiverObjectID.isEmpty()<-receiverObjectID.clear()"
    }
  },
  {
    "signature": "get(int index)",
    "name": "get",
    "containingClass": {
      "qualifiedName": "java.util.LinkedList",
      "name": "LinkedList",
      "isArray": false
    },
    "targetClass": "java.util.LinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "E",
      "name": "E",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      }
    ],
    "protocol": {
      "member": "get(int index)",
      "comment": "Returns the element at the specified position in this list.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "set(int index, E element)",
    "name": "set",
    "containingClass": {
      "qualifiedName": "java.util.LinkedList",
      "name": "LinkedList",
      "isArray": false
    },
    "targetClass": "java.util.LinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "E",
      "name": "E",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "element"
      }
    ],
    "protocol": {
      "member": "set(int index, E element)",
      "comment": "Replaces the element at the specified position in this list with the specified element.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "add(int index, E element)",
    "name": "add",
    "containingClass": {
      "qualifiedName": "java.util.LinkedList",
      "name": "LinkedList",
      "isArray": false
    },
    "targetClass": "java.util.LinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "element"
      }
    ],
    "protocol": {
      "member": "add(int index, E element)",
      "comment": "Inserts the specified element at the specified position in this list. Shifts the element currently at that position (if any) and any subsequent elements to the right (adds one to their indices).",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "remove(int index)",
    "name": "remove",
    "containingClass": {
      "qualifiedName": "java.util.LinkedList",
      "name": "LinkedList",
      "isArray": false
    },
    "targetClass": "java.util.LinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "E",
      "name": "E",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      }
    ],
    "protocol": {
      "member": "remove(int index)",
      "comment": "Removes the element at the specified position in this list. Shifts any subsequent elements to the left (subtracts one from their indices). Returns the element that was removed from the list.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "node(int index)",
    "name": "node",
    "containingClass": {
      "qualifiedName": "java.util.LinkedList",
      "name": "LinkedList",
      "isArray": false
    },
    "targetClass": "java.util.LinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.LinkedList$Node<E>",
      "name": "java.util.LinkedList$Node<E>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      }
    ],
    "protocol": {
      "member": "node(int index)",
      "comment": "Returns the (non-null) Node at the specified element index.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "indexOf(java.lang.Object o)",
    "name": "indexOf",
    "containingClass": {
      "qualifiedName": "java.util.LinkedList",
      "name": "LinkedList",
      "isArray": false
    },
    "targetClass": "java.util.LinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "o"
      }
    ],
    "protocol": {
      "member": "indexOf(java.lang.Object o)",
      "comment": "Returns the index of the first occurrence of the specified element in this list, or -1 if this list does not contain the element. More formally, returns the lowest index i such that (o==null&nbsp;?&nbsp;method_0==null&nbsp;:&nbsp;omethod_2(method_0)), or -1 if there is no such index.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "lastIndexOf(java.lang.Object o)",
    "name": "lastIndexOf",
    "containingClass": {
      "qualifiedName": "java.util.LinkedList",
      "name": "LinkedList",
      "isArray": false
    },
    "targetClass": "java.util.LinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "o"
      }
    ],
    "protocol": {
      "member": "lastIndexOf(java.lang.Object o)",
      "comment": "Returns the index of the last occurrence of the specified element in this list, or -1 if this list does not contain the element. More formally, returns the highest index i such that (o==null&nbsp;?&nbsp;method_0==null&nbsp;:&nbsp;omethod_2(method_0)), or -1 if there is no such index.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "peek()",
    "name": "peek",
    "containingClass": {
      "qualifiedName": "java.util.LinkedList",
      "name": "LinkedList",
      "isArray": false
    },
    "targetClass": "java.util.LinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "E",
      "name": "E",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "peek()",
      "comment": "Retrieves, but does not remove, the head (first element) of this list.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "element()",
    "name": "element",
    "containingClass": {
      "qualifiedName": "java.util.LinkedList",
      "name": "LinkedList",
      "isArray": false
    },
    "targetClass": "java.util.LinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "E",
      "name": "E",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "element()",
      "comment": "Retrieves, but does not remove, the head (first element) of this list.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "poll()",
    "name": "poll",
    "containingClass": {
      "qualifiedName": "java.util.LinkedList",
      "name": "LinkedList",
      "isArray": false
    },
    "targetClass": "java.util.LinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "E",
      "name": "E",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "poll()",
      "comment": "Retrieves and removes the head (first element) of this list.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "remove()",
    "name": "remove",
    "containingClass": {
      "qualifiedName": "java.util.LinkedList",
      "name": "LinkedList",
      "isArray": false
    },
    "targetClass": "java.util.LinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "E",
      "name": "E",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "remove()",
      "comment": "Retrieves and removes the head (first element) of this list.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "offer(E e)",
    "name": "offer",
    "containingClass": {
      "qualifiedName": "java.util.LinkedList",
      "name": "LinkedList",
      "isArray": false
    },
    "targetClass": "java.util.LinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "e"
      }
    ],
    "protocol": {
      "member": "offer(E e)",
      "comment": "Adds the specified element as the tail (last element) of this list.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "offerFirst(E e)",
    "name": "offerFirst",
    "containingClass": {
      "qualifiedName": "java.util.LinkedList",
      "name": "LinkedList",
      "isArray": false
    },
    "targetClass": "java.util.LinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "e"
      }
    ],
    "protocol": {
      "member": "offerFirst(E e)",
      "comment": "Inserts the specified element at the front of this list.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "offerLast(E e)",
    "name": "offerLast",
    "containingClass": {
      "qualifiedName": "java.util.LinkedList",
      "name": "LinkedList",
      "isArray": false
    },
    "targetClass": "java.util.LinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "e"
      }
    ],
    "protocol": {
      "member": "offerLast(E e)",
      "comment": "Inserts the specified element at the end of this list.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "peekFirst()",
    "name": "peekFirst",
    "containingClass": {
      "qualifiedName": "java.util.LinkedList",
      "name": "LinkedList",
      "isArray": false
    },
    "targetClass": "java.util.LinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "E",
      "name": "E",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "peekFirst()",
      "comment": "Retrieves, but does not remove, the first element of this list, or returns null if this list is empty.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "peekLast()",
    "name": "peekLast",
    "containingClass": {
      "qualifiedName": "java.util.LinkedList",
      "name": "LinkedList",
      "isArray": false
    },
    "targetClass": "java.util.LinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "E",
      "name": "E",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "peekLast()",
      "comment": "Retrieves, but does not remove, the last element of this list, or returns null if this list is empty.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "pollFirst()",
    "name": "pollFirst",
    "containingClass": {
      "qualifiedName": "java.util.LinkedList",
      "name": "LinkedList",
      "isArray": false
    },
    "targetClass": "java.util.LinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "E",
      "name": "E",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "pollFirst()",
      "comment": "Retrieves and removes the first element of this list, or returns null if this list is empty.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "pollLast()",
    "name": "pollLast",
    "containingClass": {
      "qualifiedName": "java.util.LinkedList",
      "name": "LinkedList",
      "isArray": false
    },
    "targetClass": "java.util.LinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "E",
      "name": "E",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "pollLast()",
      "comment": "Retrieves and removes the last element of this list, or returns null if this list is empty.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "push(E e)",
    "name": "push",
    "containingClass": {
      "qualifiedName": "java.util.LinkedList",
      "name": "LinkedList",
      "isArray": false
    },
    "targetClass": "java.util.LinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "e"
      }
    ],
    "protocol": {
      "member": "push(E e)",
      "comment": "Pushes an element onto the stack represented by this list. In other words, inserts the element at the front of this list. This method is equivalent to method_0.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "pop()",
    "name": "pop",
    "containingClass": {
      "qualifiedName": "java.util.LinkedList",
      "name": "LinkedList",
      "isArray": false
    },
    "targetClass": "java.util.LinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "E",
      "name": "E",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "pop()",
      "comment": "Pops an element from the stack represented by this list. In other words, removes and returns the first element of this list. This method is equivalent to method_0.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "removeFirstOccurrence(java.lang.Object o)",
    "name": "removeFirstOccurrence",
    "containingClass": {
      "qualifiedName": "java.util.LinkedList",
      "name": "LinkedList",
      "isArray": false
    },
    "targetClass": "java.util.LinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "o"
      }
    ],
    "protocol": {
      "member": "removeFirstOccurrence(java.lang.Object o)",
      "comment": "Removes the first occurrence of the specified element in this list (when traversing the list from head to tail). If the list does not contain the element, it is unchanged.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "removeLastOccurrence(java.lang.Object o)",
    "name": "removeLastOccurrence",
    "containingClass": {
      "qualifiedName": "java.util.LinkedList",
      "name": "LinkedList",
      "isArray": false
    },
    "targetClass": "java.util.LinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "o"
      }
    ],
    "protocol": {
      "member": "removeLastOccurrence(java.lang.Object o)",
      "comment": "Removes the last occurrence of the specified element in this list (when traversing the list from head to tail). If the list does not contain the element, it is unchanged.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "listIterator(int index)",
    "name": "listIterator",
    "containingClass": {
      "qualifiedName": "java.util.LinkedList",
      "name": "LinkedList",
      "isArray": false
    },
    "targetClass": "java.util.LinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.ListIterator<E>",
      "name": "java.util.ListIterator<E>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      }
    ],
    "protocol": {
      "member": "listIterator(int index)",
      "comment": "Returns a list-iterator of the elements in this list (in proper sequence), starting at the specified position in the list. Obeys the general contract of method_0. The list-iterator is fail-fast: if the list is structurally modified at any time after the Iterator is created, in any way except through the list-iterator's own remove or add methods, the list-iterator will throw a ConcurrentModificationException. Thus, in the face of concurrent modification, the iterator fails quickly and cleanly, rather than risking arbitrary, non-deterministic behavior at an undetermined time in the future.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "descendingIterator()",
    "name": "descendingIterator",
    "containingClass": {
      "qualifiedName": "java.util.LinkedList",
      "name": "LinkedList",
      "isArray": false
    },
    "targetClass": "java.util.LinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator<E>",
      "name": "java.util.Iterator<E>",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "descendingIterator()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "clone()",
    "name": "clone",
    "containingClass": {
      "qualifiedName": "java.util.LinkedList",
      "name": "LinkedList",
      "isArray": false
    },
    "targetClass": "java.util.LinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Object",
      "name": "java.lang.Object",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "clone()",
      "comment": "Returns a shallow copy of this LinkedList. (The elements themselves are not cloned.)",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "toArray()",
    "name": "toArray",
    "containingClass": {
      "qualifiedName": "java.util.LinkedList",
      "name": "LinkedList",
      "isArray": false
    },
    "targetClass": "java.util.LinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Object[]",
      "name": "java.lang.Object[]",
      "isArray": true
    },
    "parameters": [],
    "protocol": {
      "member": "toArray()",
      "comment": "Returns an array containing all of the elements in this list in proper sequence (from first to last element). The returned array will be \"safe\" in that no references to it are maintained by this list. (In other words, this method must allocate a new array). The caller is thus free to modify the returned array. This method acts as bridge between array-based and collection-based APIs.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "toArray(T[] a)",
    "name": "toArray",
    "containingClass": {
      "qualifiedName": "java.util.LinkedList",
      "name": "LinkedList",
      "isArray": false
    },
    "targetClass": "java.util.LinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T[]",
      "name": "T[]",
      "isArray": true
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Ljava.lang.Object;",
          "name": "Object[]",
          "isArray": true
        },
        "name": "a"
      }
    ],
    "protocol": {
      "member": "toArray(T[] a)",
      "comment": "Returns an array containing all of the elements in this list in proper sequence (from first to last element); the runtime type of the returned array is that of the specified array. If the list fits in the specified array, it is returned therein. Otherwise, a new array is allocated with the runtime type of the specified array and the size of this list. If the list fits in the specified array with room to spare (imethod_4., the array has more elements than the list), the element in the array immediately following the end of the list is set to null. (This is useful in determining the length of the list only if the caller knows that the list does not contain any null elements.) Like the method_0 method, this method acts as bridge between array-based and collection-based APIs. Further, this method allows precise control over the runtime type of the output array, and may, under certain circumstances, be used to save allocation costs. Suppose x is a list known to contain only strings. The following code can be used to dump the list into a newly allocated array of String}:  String[] y = method_1; Note that {@code method_2 is identical in function to method_0.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "spliterator()",
    "name": "spliterator",
    "containingClass": {
      "qualifiedName": "java.util.LinkedList",
      "name": "LinkedList",
      "isArray": false
    },
    "targetClass": "java.util.LinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Spliterator<E>",
      "name": "java.util.Spliterator<E>",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "spliterator()",
      "comment": "Creates a <a href=\"method_0method_1\">late-binding</a> and fail-fast Spliterator over the elements in this list. The Spliterator reports method_2 and method_3. Overriding implementations should document the reporting of additional characteristic values. @implNote The Spliterator additionally reports method_4 and implements trySplit to permit limited parallelism..",
      "kind": "FreeText",
      "condition": ""
    }
  }
]