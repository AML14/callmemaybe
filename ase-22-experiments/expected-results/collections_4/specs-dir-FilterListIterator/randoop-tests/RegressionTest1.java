import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest1 {

    public static boolean debug = false;

    @Test
    public void test0501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0501");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        int int6 = wildcardClassItor1.previousIndex();
        int int7 = wildcardClassItor1.previousIndex();
        boolean boolean8 = wildcardClassItor1.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass9 = wildcardClassItor1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0502");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor5.getPredicate();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate9 = wildcardClassItor8.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass12 = wildcardClassItor5.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate6);
        org.junit.Assert.assertNull(wildcardPredicate9);
    }

    @Test
    public void test0503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0503");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor6 = wildcardClassItor4.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor4.getListIterator();
        boolean boolean8 = wildcardClassItor4.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        boolean boolean12 = wildcardClassItor10.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor16 = wildcardClassItor14.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        int int21 = wildcardClassItor19.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        wildcardClassItor17.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor24 = wildcardClassItor17.getListIterator();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate28 = wildcardClassItor27.getPredicate();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor30 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor32 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor31.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor32);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor34 = wildcardClassItor32.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor35 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor36 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor37 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor36.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor37);
        int int39 = wildcardClassItor37.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor40 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor37);
        wildcardClassItor35.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor40);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor42 = wildcardClassItor35.getListIterator();
        wildcardClassItor32.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor35);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor44 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor35);
        boolean boolean45 = wildcardClassItor44.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor46 = wildcardClassItor44.getListIterator();
        wildcardClassItor27.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor44);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate48 = wildcardClassItor27.getPredicate();
        java.lang.Class<?> wildcardClass49 = wildcardClassItor27.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNotNull(wildcardItor6);
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(wildcardItor16);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor24);
        org.junit.Assert.assertNull(wildcardPredicate28);
        org.junit.Assert.assertNull(wildcardItor34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardItor46);
        org.junit.Assert.assertNull(wildcardPredicate48);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0504");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        boolean boolean4 = wildcardClassItor1.hasNext();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor1.getPredicate();
        int int6 = wildcardClassItor1.previousIndex();
        boolean boolean7 = wildcardClassItor1.hasPrevious();
        java.lang.Class<?> wildcardClass8 = wildcardClassItor1.getClass();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0505");
        org.apache.commons.collections4.iterators.FilterListIterator<java.util.Iterator<java.lang.Class<?>>> wildcardClassItorItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.util.Iterator<java.lang.Class<?>>>();
        int int1 = wildcardClassItorItor0.previousIndex();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
    }

    @Test
    public void test0506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0506");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        int int4 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        int int7 = wildcardClassItor6.previousIndex();
        int int8 = wildcardClassItor6.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor9 = wildcardClassItor6.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor10 = wildcardClassItor6.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor10);
        int int12 = wildcardClassItor1.previousIndex();
        boolean boolean13 = wildcardClassItor1.hasPrevious();
        int int14 = wildcardClassItor1.previousIndex();
        java.lang.Class<?> wildcardClass15 = wildcardClassItor1.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(wildcardItor9);
        org.junit.Assert.assertNotNull(wildcardItor10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0507");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor2.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass4 = wildcardClassItor2.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNotNull(wildcardItor3);
    }

    @Test
    public void test0508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0508");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor1.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass14 = wildcardClassItor1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertNotNull(wildcardItor13);
    }

    @Test
    public void test0509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0509");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass6 = wildcardClassItor1.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardItor5);
    }

    @Test
    public void test0510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0510");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
    }

    @Test
    public void test0511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0511");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor7);
        int int9 = typeItor8.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor11.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        int int14 = wildcardClassItor12.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor17 = wildcardClassItor10.getListIterator();
        int int18 = wildcardClassItor10.previousIndex();
        boolean boolean19 = wildcardClassItor10.hasNext();
        int int20 = wildcardClassItor10.nextIndex();
        typeItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int22 = wildcardClassItor10.nextIndex();
        boolean boolean23 = wildcardClassItor10.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor24 = wildcardClassItor10.getListIterator();
        boolean boolean25 = wildcardClassItor10.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass26 = wildcardClassItor10.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItor24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test0512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0512");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass5 = wildcardClassItor1.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test0513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0513");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        int int7 = wildcardClassItor5.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int10 = wildcardClassItor1.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass11 = wildcardClassItor1.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test0514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0514");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass4 = wildcardClassItor1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test0515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0515");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor7);
        int int9 = typeItor8.nextIndex();
        int int10 = typeItor8.nextIndex();
        int int11 = typeItor8.previousIndex();
        int int12 = typeItor8.previousIndex();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test0516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0516");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        boolean boolean18 = wildcardClassItor8.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor20.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        int int23 = wildcardClassItor21.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        wildcardClassItor19.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor26 = wildcardClassItor19.getListIterator();
        int int27 = wildcardClassItor19.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate28 = wildcardClassItor19.getPredicate();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        java.lang.Class<?> wildcardClass30 = wildcardClassItor8.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate28);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0517");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean5 = wildcardClassItor4.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int10 = wildcardClassItor8.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        boolean boolean12 = wildcardClassItor11.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        int int14 = wildcardClassItor11.previousIndex();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        java.lang.Class<?> wildcardClass16 = wildcardClassItor11.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0518");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate2 = wildcardClassItor1.getPredicate();
        int int3 = wildcardClassItor1.nextIndex();
        boolean boolean4 = wildcardClassItor1.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass5 = wildcardClassItor1.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardPredicate2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0519");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor5.getPredicate();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        boolean boolean14 = wildcardClassItor13.hasNext();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.lang.Class<?> wildcardClass16 = wildcardClassItor0.getClass();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate6);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0520");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor4.getListIterator();
        int int6 = wildcardClassItor4.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass7 = wildcardClassItor4.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test0521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0521");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        int int4 = wildcardClassItor1.nextIndex();
        boolean boolean5 = wildcardClassItor1.hasNext();
        boolean boolean6 = wildcardClassItor1.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0522");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(wildcardPredicate4);
    }

    @Test
    public void test0523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0523");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate19 = wildcardClassItor8.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor20 = wildcardClassItor8.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass21 = wildcardClassItor8.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertNull(wildcardPredicate19);
        org.junit.Assert.assertNotNull(wildcardItor20);
    }

    @Test
    public void test0524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0524");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate3 = wildcardClassItor1.getPredicate();
        int int4 = wildcardClassItor1.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass6 = wildcardClassItor1.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor5);
    }

    @Test
    public void test0525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0525");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor6 = wildcardClassItor4.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor4.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNotNull(wildcardItor6);
    }

    @Test
    public void test0526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0526");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        int int9 = wildcardClassItor0.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor10 = wildcardClassItor0.getListIterator();
        java.lang.Class<?> wildcardClass11 = wildcardItor10.getClass();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardItor10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0527");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        boolean boolean7 = wildcardClassItor0.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0528");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        boolean boolean7 = wildcardClassItor0.hasNext();
        int int8 = wildcardClassItor0.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass10 = wildcardClassItor0.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test0529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0529");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate9 = wildcardClassItor0.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int11 = wildcardClassItor10.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass12 = wildcardClassItor10.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test0530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0530");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor7);
        int int9 = typeItor8.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor11.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        int int14 = wildcardClassItor12.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor17 = wildcardClassItor10.getListIterator();
        int int18 = wildcardClassItor10.previousIndex();
        boolean boolean19 = wildcardClassItor10.hasNext();
        int int20 = wildcardClassItor10.nextIndex();
        typeItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int22 = typeItor8.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate23 = typeItor8.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor25 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor26 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor25.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        int int28 = wildcardClassItor26.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor29 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        wildcardClassItor24.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor29);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor31 = wildcardClassItor24.getListIterator();
        int int32 = wildcardClassItor24.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor33 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor34 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor33.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor34);
        int int36 = wildcardClassItor34.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor37 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor34);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate38 = wildcardClassItor37.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor39 = wildcardClassItor37.getListIterator();
        wildcardClassItor24.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor37);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor41 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor37);
        int int42 = wildcardClassItor41.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor43 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor41);
        typeItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor41);
        int int45 = wildcardClassItor41.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass46 = wildcardClassItor41.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate38);
        org.junit.Assert.assertNotNull(wildcardItor39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
    }

    @Test
    public void test0531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0531");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate2 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor3 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean4 = wildcardClassItor1.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass5 = wildcardClassItor1.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardPredicate2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0532");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean5 = wildcardClassItor4.hasNext();
        int int6 = wildcardClassItor4.previousIndex();
        boolean boolean7 = wildcardClassItor4.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        boolean boolean16 = wildcardClassItor13.hasPrevious();
        boolean boolean17 = wildcardClassItor13.hasPrevious();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor13.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0533");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int18 = wildcardClassItor8.previousIndex();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test0534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0534");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        boolean boolean1 = wildcardClassItor0.hasNext();
        int int2 = wildcardClassItor0.nextIndex();
        boolean boolean3 = wildcardClassItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass4 = wildcardClassItor0.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test0535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0535");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor7);
        int int9 = typeItor8.nextIndex();
        int int10 = typeItor8.previousIndex();
        boolean boolean11 = typeItor8.hasNext();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate12 = typeItor8.getPredicate();
        boolean boolean13 = typeItor8.hasPrevious();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = typeItor8.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor18 = wildcardClassItor15.getListIterator();
        typeItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor18);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.GenericDeclaration> genericDeclarationItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.GenericDeclaration>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor18);
        int int21 = genericDeclarationItor20.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            genericDeclarationItor20.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardPredicate12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardPredicate14);
        org.junit.Assert.assertNotNull(wildcardItor18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test0536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0536");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        int int7 = wildcardClassItor4.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor8 = wildcardClassItor4.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        int int17 = wildcardClassItor15.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        boolean boolean19 = wildcardClassItor18.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor21.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        int int24 = wildcardClassItor22.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor25 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        boolean boolean26 = wildcardClassItor25.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        int int28 = wildcardClassItor25.previousIndex();
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor30 = wildcardClassItor25.getListIterator();
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor33 = wildcardClassItor25.getListIterator();
        java.lang.Class<?> wildcardClass34 = wildcardItor33.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(wildcardItor8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor30);
        org.junit.Assert.assertNotNull(wildcardItor33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0537");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        int int7 = wildcardClassItor4.nextIndex();
        int int8 = wildcardClassItor4.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        int int11 = wildcardClassItor10.previousIndex();
        int int12 = wildcardClassItor10.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate13 = wildcardClassItor10.getPredicate();
        int int14 = wildcardClassItor10.previousIndex();
        boolean boolean15 = wildcardClassItor10.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor16.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor19 = wildcardClassItor17.getListIterator();
        boolean boolean20 = wildcardClassItor17.hasNext();
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        java.lang.Class<?> wildcardClass23 = wildcardClassItor17.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(wildcardPredicate13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardItor19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0538");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate9 = wildcardClassItor0.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int11 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate12 = wildcardClassItor10.getPredicate();
        int int13 = wildcardClassItor10.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass14 = wildcardClassItor10.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test0539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0539");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        boolean boolean19 = wildcardClassItor18.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor20.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        int int23 = wildcardClassItor21.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        boolean boolean25 = wildcardClassItor24.hasNext();
        int int26 = wildcardClassItor24.previousIndex();
        int int27 = wildcardClassItor24.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor28 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor29 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor28.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor29);
        boolean boolean31 = wildcardClassItor29.hasPrevious();
        int int32 = wildcardClassItor29.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor33 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor34 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor33);
        int int35 = wildcardClassItor34.previousIndex();
        int int36 = wildcardClassItor34.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor37 = wildcardClassItor34.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor38 = wildcardClassItor34.getListIterator();
        wildcardClassItor29.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor38);
        int int40 = wildcardClassItor29.previousIndex();
        boolean boolean41 = wildcardClassItor29.hasPrevious();
        wildcardClassItor24.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor29);
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor29);
        boolean boolean44 = wildcardClassItor18.hasPrevious();
        boolean boolean45 = wildcardClassItor18.hasPrevious();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(wildcardItor37);
        org.junit.Assert.assertNotNull(wildcardItor38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test0540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0540");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate9 = wildcardClassItor0.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate9);
    }

    @Test
    public void test0541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0541");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        int int6 = wildcardClassItor1.previousIndex();
        int int7 = wildcardClassItor1.previousIndex();
        boolean boolean8 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        int int17 = wildcardClassItor15.previousIndex();
        int int18 = wildcardClassItor15.nextIndex();
        int int19 = wildcardClassItor15.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        int int21 = wildcardClassItor20.previousIndex();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        int int23 = wildcardClassItor1.previousIndex();
        java.lang.Class<?> wildcardClass24 = wildcardClassItor1.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardItor13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0542");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.previousIndex();
        boolean boolean4 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor8 = wildcardClassItor5.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass12 = wildcardClassItor11.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardItor8);
    }

    @Test
    public void test0543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0543");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean5 = wildcardClassItor4.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int10 = wildcardClassItor8.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        boolean boolean12 = wildcardClassItor11.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        int int14 = wildcardClassItor11.previousIndex();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        boolean boolean16 = wildcardClassItor4.hasPrevious();
        int int17 = wildcardClassItor4.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor4.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test0544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0544");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.GenericDeclaration> genericDeclarationItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.GenericDeclaration>();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate1 = genericDeclarationItor0.getPredicate();
        org.junit.Assert.assertNull(wildcardPredicate1);
    }

    @Test
    public void test0545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0545");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        int int18 = wildcardClassItor16.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor21 = wildcardClassItor14.getListIterator();
        int int22 = wildcardClassItor14.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor23.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        int int26 = wildcardClassItor24.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate28 = wildcardClassItor27.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor29 = wildcardClassItor27.getListIterator();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        int int32 = wildcardClassItor31.nextIndex();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor31);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor34 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor35 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor36 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor35.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor36);
        int int38 = wildcardClassItor36.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor39 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor36);
        wildcardClassItor34.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor39);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor41 = wildcardClassItor34.getListIterator();
        int int42 = wildcardClassItor34.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate43 = wildcardClassItor34.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor44 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor34);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor45 = wildcardClassItor44.getListIterator();
        wildcardClassItor31.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor44);
        java.lang.Class<?> wildcardClass47 = wildcardClassItor31.getClass();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertNotNull(wildcardItor13);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate28);
        org.junit.Assert.assertNotNull(wildcardItor29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate43);
        org.junit.Assert.assertNotNull(wildcardItor45);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0546");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        int int7 = wildcardClassItor4.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor8 = wildcardClassItor4.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        int int17 = wildcardClassItor15.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        boolean boolean19 = wildcardClassItor18.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor21.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        int int24 = wildcardClassItor22.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor25 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        boolean boolean26 = wildcardClassItor25.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        int int28 = wildcardClassItor25.previousIndex();
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor30 = wildcardClassItor25.getListIterator();
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        int int33 = wildcardClassItor25.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor25.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(wildcardItor8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
    }

    @Test
    public void test0547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0547");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor7);
        int int9 = typeItor8.nextIndex();
        int int10 = typeItor8.previousIndex();
        boolean boolean11 = typeItor8.hasNext();
        int int12 = typeItor8.previousIndex();
        boolean boolean13 = typeItor8.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        boolean boolean17 = wildcardClassItor15.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor21 = wildcardClassItor19.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor23.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        int int26 = wildcardClassItor24.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        wildcardClassItor22.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor29 = wildcardClassItor22.getListIterator();
        wildcardClassItor19.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        wildcardClassItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor32 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate33 = wildcardClassItor22.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor34 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        int int35 = wildcardClassItor22.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate36 = wildcardClassItor22.getPredicate();
        typeItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass38 = wildcardClassItor22.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(wildcardItor21);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor29);
        org.junit.Assert.assertNull(wildcardPredicate33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(wildcardPredicate36);
    }

    @Test
    public void test0548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0548");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor1.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertNotNull(wildcardItor13);
    }

    @Test
    public void test0549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0549");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int19 = wildcardClassItor8.previousIndex();
        int int20 = wildcardClassItor8.nextIndex();
        int int21 = wildcardClassItor8.nextIndex();
        int int22 = wildcardClassItor8.previousIndex();
        java.lang.Class<?> wildcardClass23 = wildcardClassItor8.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0550");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean6 = wildcardClassItor5.hasNext();
        int int7 = wildcardClassItor5.nextIndex();
        boolean boolean8 = wildcardClassItor5.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass9 = wildcardClassItor5.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0551");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor6 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass8 = wildcardClassItor5.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertNotNull(wildcardItor6);
    }

    @Test
    public void test0552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0552");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate1 = wildcardClassItor0.getPredicate();
        boolean boolean2 = wildcardClassItor0.hasNext();
        boolean boolean3 = wildcardClassItor0.hasNext();
        int int4 = wildcardClassItor0.nextIndex();
        org.junit.Assert.assertNull(wildcardPredicate1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test0553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0553");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        boolean boolean1 = wildcardClassItor0.hasNext();
        int int2 = wildcardClassItor0.nextIndex();
        boolean boolean3 = wildcardClassItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass4 = wildcardClassItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test0554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0554");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        int int4 = wildcardClassItor1.nextIndex();
        int int5 = wildcardClassItor1.previousIndex();
        boolean boolean6 = wildcardClassItor1.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor8 = wildcardClassItor1.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass9 = wildcardClassItor1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertNull(wildcardItor8);
    }

    @Test
    public void test0555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0555");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int9 = wildcardClassItor8.previousIndex();
        int int10 = wildcardClassItor8.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor8.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor12 = wildcardClassItor8.getListIterator();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        boolean boolean14 = wildcardClassItor4.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor4.getListIterator();
        int int16 = wildcardClassItor4.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass17 = wildcardClassItor4.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNull(wildcardPredicate6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertNotNull(wildcardItor12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test0556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0556");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor6 = wildcardClassItor4.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor4.getListIterator();
        boolean boolean8 = wildcardClassItor4.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        boolean boolean12 = wildcardClassItor10.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor16 = wildcardClassItor14.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        int int21 = wildcardClassItor19.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        wildcardClassItor17.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor24 = wildcardClassItor17.getListIterator();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate28 = wildcardClassItor27.getPredicate();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor30 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor32 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor31.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor32);
        int int34 = wildcardClassItor32.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor35 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor32);
        wildcardClassItor30.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor35);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor37 = wildcardClassItor30.getListIterator();
        int int38 = wildcardClassItor30.previousIndex();
        boolean boolean39 = wildcardClassItor30.hasNext();
        int int40 = wildcardClassItor30.nextIndex();
        boolean boolean41 = wildcardClassItor30.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor42 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor30);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor43 = wildcardClassItor30.getListIterator();
        int int44 = wildcardClassItor30.previousIndex();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor30);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate46 = wildcardClassItor30.getPredicate();
        boolean boolean47 = wildcardClassItor30.hasPrevious();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNotNull(wildcardItor6);
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(wildcardItor16);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor24);
        org.junit.Assert.assertNull(wildcardPredicate28);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardItor43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test0557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0557");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>();
        boolean boolean1 = typeItor0.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor3 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor3.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        int int6 = wildcardClassItor4.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate8 = wildcardClassItor7.getPredicate();
        wildcardClassItor2.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor11.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        int int14 = wildcardClassItor12.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        boolean boolean16 = wildcardClassItor15.hasNext();
        wildcardClassItor2.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        typeItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        int int19 = typeItor0.previousIndex();
        int int20 = typeItor0.previousIndex();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate8);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
    }

    @Test
    public void test0558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0558");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor6 = wildcardClassItor4.getListIterator();
        int int7 = wildcardClassItor4.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        int int9 = wildcardClassItor4.previousIndex();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNotNull(wildcardItor6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test0559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0559");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = wildcardClassItor13.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int18 = wildcardClassItor17.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        boolean boolean20 = wildcardClassItor17.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor21 = wildcardClassItor17.getListIterator();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate14);
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItor21);
    }

    @Test
    public void test0560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0560");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor6 = wildcardClassItor4.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor4.getListIterator();
        int int8 = wildcardClassItor4.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor4.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNotNull(wildcardItor6);
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test0561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0561");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        boolean boolean9 = wildcardClassItor0.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        int int13 = wildcardClassItor11.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = wildcardClassItor11.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor11.getListIterator();
        boolean boolean16 = wildcardClassItor11.hasNext();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor17 = wildcardClassItor11.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate18 = wildcardClassItor11.getPredicate();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor20 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor20);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate14);
        org.junit.Assert.assertNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(wildcardItor17);
        org.junit.Assert.assertNull(wildcardPredicate18);
        org.junit.Assert.assertNotNull(wildcardItor20);
    }

    @Test
    public void test0562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0562");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        int int1 = wildcardClassItor0.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor3 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor2.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor3);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor3.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int10 = wildcardClassItor8.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor6.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor6.getListIterator();
        wildcardClassItor3.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor6.getListIterator();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int17 = wildcardClassItor6.nextIndex();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor13);
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test0563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0563");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        boolean boolean9 = wildcardClassItor0.hasNext();
        int int10 = wildcardClassItor0.nextIndex();
        boolean boolean11 = wildcardClassItor0.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor0.getListIterator();
        int int14 = wildcardClassItor0.previousIndex();
        boolean boolean15 = wildcardClassItor0.hasPrevious();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItor13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0564");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor5.getPredicate();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        boolean boolean14 = wildcardClassItor13.hasNext();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate6);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0565");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int6 = wildcardClassItor5.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate7 = wildcardClassItor5.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor8 = wildcardClassItor5.getListIterator();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(wildcardPredicate7);
        org.junit.Assert.assertNotNull(wildcardItor8);
    }

    @Test
    public void test0566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0566");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor4.getPredicate();
        boolean boolean7 = wildcardClassItor4.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        int int11 = wildcardClassItor9.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor9.getListIterator();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.lang.Class<?> wildcardClass15 = wildcardClassItor9.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNull(wildcardPredicate6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(wildcardItor13);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0567");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor7);
        int int9 = typeItor8.nextIndex();
        int int10 = typeItor8.nextIndex();
        java.lang.Class<?> wildcardClass11 = typeItor8.getClass();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0568");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        boolean boolean1 = wildcardClassItor0.hasNext();
        int int2 = wildcardClassItor0.previousIndex();
        java.lang.Class<?> wildcardClass3 = wildcardClassItor0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0569");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        boolean boolean18 = wildcardClassItor8.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor8.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0570");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        int int4 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        int int7 = wildcardClassItor6.previousIndex();
        int int8 = wildcardClassItor6.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor9 = wildcardClassItor6.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor10 = wildcardClassItor6.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate13 = wildcardClassItor1.getPredicate();
        boolean boolean14 = wildcardClassItor1.hasPrevious();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(wildcardItor9);
        org.junit.Assert.assertNotNull(wildcardItor10);
        org.junit.Assert.assertNull(wildcardPredicate13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0571");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor6 = wildcardClassItor4.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor4.getListIterator();
        boolean boolean8 = wildcardClassItor4.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        boolean boolean12 = wildcardClassItor10.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor16 = wildcardClassItor14.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        int int21 = wildcardClassItor19.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        wildcardClassItor17.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor24 = wildcardClassItor17.getListIterator();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate28 = wildcardClassItor27.getPredicate();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        boolean boolean30 = wildcardClassItor4.hasPrevious();
        boolean boolean31 = wildcardClassItor4.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor4.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNotNull(wildcardItor6);
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(wildcardItor16);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor24);
        org.junit.Assert.assertNull(wildcardPredicate28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test0572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0572");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate19 = wildcardClassItor8.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        int int21 = wildcardClassItor20.nextIndex();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass23 = wildcardClassItor8.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertNull(wildcardPredicate19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test0573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0573");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate3 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        int int5 = wildcardClassItor1.previousIndex();
        int int6 = wildcardClassItor1.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass7 = wildcardClassItor1.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate3);
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }

    @Test
    public void test0574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0574");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate2 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor3 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass4 = wildcardClassItor1.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardPredicate2);
    }

    @Test
    public void test0575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0575");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
    }

    @Test
    public void test0576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0576");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate9 = wildcardClassItor0.getPredicate();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass10 = wildcardClassItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate9);
    }

    @Test
    public void test0577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0577");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        int int11 = wildcardClassItor9.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor14 = wildcardClassItor7.getListIterator();
        boolean boolean15 = wildcardClassItor7.hasPrevious();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        boolean boolean17 = wildcardClassItor5.hasNext();
        java.lang.Class<?> wildcardClass18 = wildcardClassItor5.getClass();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0578");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = wildcardClassItor13.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int18 = wildcardClassItor17.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        int int20 = wildcardClassItor17.previousIndex();
        boolean boolean21 = wildcardClassItor17.hasNext();
        int int22 = wildcardClassItor17.nextIndex();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate14);
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test0579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0579");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.previousIndex();
        int int4 = wildcardClassItor1.previousIndex();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test0580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0580");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate3 = wildcardClassItor1.getPredicate();
        int int4 = wildcardClassItor1.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor6.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        boolean boolean9 = wildcardClassItor7.hasPrevious();
        int int10 = wildcardClassItor7.nextIndex();
        int int11 = wildcardClassItor7.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        java.lang.Class<?> wildcardClass14 = wildcardClassItor7.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0581");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean5 = wildcardClassItor4.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        int int7 = wildcardClassItor4.previousIndex();
        boolean boolean8 = wildcardClassItor4.hasNext();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor9 = wildcardClassItor4.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor9);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass11 = wildcardClassItor10.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardItor9);
    }

    @Test
    public void test0582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0582");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        boolean boolean5 = wildcardClassItor1.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass8 = wildcardClassItor6.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0583");
        org.apache.commons.collections4.iterators.FilterListIterator<java.io.Serializable> serializableItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.io.Serializable>();
        boolean boolean1 = serializableItor0.hasPrevious();
        boolean boolean2 = serializableItor0.hasPrevious();
        boolean boolean3 = serializableItor0.hasPrevious();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test0584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0584");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor5.getPredicate();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass9 = wildcardClassItor8.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate6);
    }

    @Test
    public void test0585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0585");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor6 = wildcardClassItor4.getListIterator();
        int int7 = wildcardClassItor4.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        int int9 = wildcardClassItor4.previousIndex();
        boolean boolean10 = wildcardClassItor4.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass11 = wildcardClassItor4.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNotNull(wildcardItor6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0586");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor4 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor1.getPredicate();
        int int6 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int10 = wildcardClassItor8.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate11 = wildcardClassItor8.getPredicate();
        boolean boolean12 = wildcardClassItor8.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor8.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor13);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor13);
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertNull(wildcardItor4);
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(wildcardItor13);
    }

    @Test
    public void test0587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0587");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int19 = wildcardClassItor8.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor20 = wildcardClassItor8.getListIterator();
        int int21 = wildcardClassItor8.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate23 = wildcardClassItor22.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor24 = wildcardClassItor22.getListIterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate23);
        org.junit.Assert.assertNotNull(wildcardItor24);
    }

    @Test
    public void test0588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0588");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor4 = wildcardClassItor1.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass5 = wildcardClassItor1.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(wildcardItor4);
    }

    @Test
    public void test0589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0589");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor4 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor1.getPredicate();
        int int6 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int10 = wildcardClassItor8.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate11 = wildcardClassItor8.getPredicate();
        boolean boolean12 = wildcardClassItor8.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor8.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor13);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.GenericDeclaration> genericDeclarationItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.GenericDeclaration>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.lang.Class<?> wildcardClass16 = wildcardClassItor1.getClass();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertNull(wildcardItor4);
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(wildcardItor13);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0590");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int18 = wildcardClassItor8.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass19 = wildcardClassItor8.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test0591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0591");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        int int18 = wildcardClassItor16.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor21 = wildcardClassItor14.getListIterator();
        int int22 = wildcardClassItor14.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor23.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        int int26 = wildcardClassItor24.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate28 = wildcardClassItor27.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor29 = wildcardClassItor27.getListIterator();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        int int32 = wildcardClassItor31.nextIndex();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor31);
        boolean boolean34 = wildcardClassItor1.hasPrevious();
        int int35 = wildcardClassItor1.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass36 = wildcardClassItor1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertNotNull(wildcardItor13);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate28);
        org.junit.Assert.assertNotNull(wildcardItor29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
    }

    @Test
    public void test0592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0592");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        int int6 = wildcardClassItor1.previousIndex();
        int int7 = wildcardClassItor1.previousIndex();
        int int8 = wildcardClassItor1.previousIndex();
        boolean boolean9 = wildcardClassItor1.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0593");
        java.util.ListIterator<java.lang.Class<?>> wildcardClassItor0 = null;
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>(wildcardClassItor0);
        boolean boolean2 = wildcardClassItor1.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass3 = wildcardClassItor1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0594");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor4 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass7 = wildcardClassItor6.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertNull(wildcardItor4);
        org.junit.Assert.assertNull(wildcardPredicate5);
    }

    @Test
    public void test0595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0595");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        boolean boolean8 = wildcardClassItor5.hasPrevious();
        boolean boolean9 = wildcardClassItor5.hasPrevious();
        boolean boolean10 = wildcardClassItor5.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass11 = wildcardClassItor5.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0596");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate1 = wildcardClassItor0.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor2 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor3 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        int int7 = wildcardClassItor5.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        wildcardClassItor3.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor10 = wildcardClassItor3.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor10);
        int int12 = typeItor11.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        int int17 = wildcardClassItor15.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor20 = wildcardClassItor13.getListIterator();
        int int21 = wildcardClassItor13.previousIndex();
        boolean boolean22 = wildcardClassItor13.hasNext();
        int int23 = wildcardClassItor13.nextIndex();
        typeItor11.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int25 = wildcardClassItor13.nextIndex();
        int int26 = wildcardClassItor13.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor28 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor28);
        int int30 = wildcardClassItor13.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor32 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor31.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor32);
        boolean boolean34 = wildcardClassItor32.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor35 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor36 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor35.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor36);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor38 = wildcardClassItor36.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor39 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor40 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor41 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor40.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor41);
        int int43 = wildcardClassItor41.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor44 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor41);
        wildcardClassItor39.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor44);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor46 = wildcardClassItor39.getListIterator();
        wildcardClassItor36.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor39);
        wildcardClassItor32.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor39);
        int int49 = wildcardClassItor39.previousIndex();
        int int50 = wildcardClassItor39.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor51 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor39);
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor39);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.lang.Class<?> wildcardClass54 = wildcardClassItor0.getClass();
        org.junit.Assert.assertNull(wildcardPredicate1);
        org.junit.Assert.assertNull(wildcardItor2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(wildcardItor38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0597");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        int int5 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor1.getPredicate();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate6);
    }

    @Test
    public void test0598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0598");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        boolean boolean16 = wildcardClassItor14.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor17.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor20 = wildcardClassItor18.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor22.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor23);
        int int25 = wildcardClassItor23.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor26 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor23);
        wildcardClassItor21.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor28 = wildcardClassItor21.getListIterator();
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        int int32 = wildcardClassItor21.previousIndex();
        int int33 = wildcardClassItor21.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor34 = wildcardClassItor21.getListIterator();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor34);
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor4.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(wildcardItor20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(wildcardItor34);
    }

    @Test
    public void test0599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0599");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        int int7 = wildcardClassItor5.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int10 = wildcardClassItor1.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test0600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0600");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        boolean boolean9 = wildcardClassItor0.hasNext();
        int int10 = wildcardClassItor0.nextIndex();
        boolean boolean11 = wildcardClassItor0.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        boolean boolean13 = wildcardClassItor0.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor14 = wildcardClassItor0.getListIterator();
        int int15 = wildcardClassItor0.previousIndex();
        java.lang.Class<?> wildcardClass16 = wildcardClassItor0.getClass();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardItor14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0601");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean5 = wildcardClassItor4.hasNext();
        int int6 = wildcardClassItor4.previousIndex();
        int int7 = wildcardClassItor4.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        boolean boolean11 = wildcardClassItor9.hasPrevious();
        int int12 = wildcardClassItor9.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int15 = wildcardClassItor14.previousIndex();
        int int16 = wildcardClassItor14.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor17 = wildcardClassItor14.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor18 = wildcardClassItor14.getListIterator();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor18);
        int int20 = wildcardClassItor9.previousIndex();
        boolean boolean21 = wildcardClassItor9.hasPrevious();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor23 = wildcardClassItor9.getListIterator();
        boolean boolean24 = wildcardClassItor9.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass25 = wildcardClassItor9.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(wildcardItor17);
        org.junit.Assert.assertNotNull(wildcardItor18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItor23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test0602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0602");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        int int4 = wildcardClassItor1.nextIndex();
        boolean boolean5 = wildcardClassItor1.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass6 = wildcardClassItor1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0603");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        int int6 = wildcardClassItor1.previousIndex();
        int int7 = wildcardClassItor1.previousIndex();
        boolean boolean8 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int15 = wildcardClassItor14.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass16 = wildcardClassItor14.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardItor13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test0604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0604");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor5.getPredicate();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate6);
    }

    @Test
    public void test0605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0605");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = wildcardClassItor13.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        boolean boolean17 = wildcardClassItor0.hasNext();
        boolean boolean18 = wildcardClassItor0.hasNext();
        int int19 = wildcardClassItor0.previousIndex();
        boolean boolean20 = wildcardClassItor0.hasPrevious();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate14);
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test0606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0606");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int9 = wildcardClassItor8.previousIndex();
        int int10 = wildcardClassItor8.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor8.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor12 = wildcardClassItor8.getListIterator();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        boolean boolean14 = wildcardClassItor4.hasPrevious();
        int int15 = wildcardClassItor4.nextIndex();
        int int16 = wildcardClassItor4.previousIndex();
        java.lang.Class<?> wildcardClass17 = wildcardClassItor4.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNull(wildcardPredicate6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertNotNull(wildcardItor12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0607");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        boolean boolean5 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor1.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor8 = wildcardClassItor1.getListIterator();
        int int9 = wildcardClassItor1.nextIndex();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardPredicate6);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertNull(wildcardItor8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test0608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0608");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate3 = wildcardClassItor1.getPredicate();
        int int4 = wildcardClassItor1.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor6.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        boolean boolean9 = wildcardClassItor7.hasPrevious();
        int int10 = wildcardClassItor7.nextIndex();
        int int11 = wildcardClassItor7.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        java.lang.Class<?> wildcardClass14 = wildcardClassItor1.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0609");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor4 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor1.getPredicate();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass6 = wildcardPredicate5.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertNull(wildcardItor4);
        org.junit.Assert.assertNull(wildcardPredicate5);
    }

    @Test
    public void test0610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0610");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor3 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        boolean boolean4 = wildcardClassItor3.hasPrevious();
        boolean boolean5 = wildcardClassItor3.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor3.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0611");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor4.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass14 = wildcardClassItor4.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertNotNull(wildcardItor13);
    }

    @Test
    public void test0612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0612");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor5.getPredicate();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass9 = wildcardClassItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate6);
    }

    @Test
    public void test0613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0613");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate2 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor3 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass4 = wildcardClassItor3.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardPredicate2);
    }

    @Test
    public void test0614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0614");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.previousIndex();
        boolean boolean4 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor8 = wildcardClassItor5.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor8);
        int int10 = wildcardClassItor1.nextIndex();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardItor8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test0615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0615");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        int int1 = wildcardClassItor0.nextIndex();
        boolean boolean2 = wildcardClassItor0.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor3 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass4 = wildcardClassItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0616");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        int int6 = wildcardClassItor1.previousIndex();
        int int7 = wildcardClassItor1.previousIndex();
        boolean boolean8 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        int int17 = wildcardClassItor15.previousIndex();
        int int18 = wildcardClassItor15.nextIndex();
        int int19 = wildcardClassItor15.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        int int21 = wildcardClassItor20.previousIndex();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        int int23 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate25 = wildcardClassItor24.getPredicate();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardItor13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate25);
    }

    @Test
    public void test0617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0617");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor7);
        int int9 = typeItor8.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor11.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        int int14 = wildcardClassItor12.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor17 = wildcardClassItor10.getListIterator();
        int int18 = wildcardClassItor10.previousIndex();
        boolean boolean19 = wildcardClassItor10.hasNext();
        int int20 = wildcardClassItor10.nextIndex();
        typeItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int22 = wildcardClassItor10.nextIndex();
        boolean boolean23 = wildcardClassItor10.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor24 = wildcardClassItor10.getListIterator();
        java.lang.Class<?> wildcardClass25 = wildcardItor24.getClass();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItor24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0618");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.io.Serializable> serializableItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.io.Serializable>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int5 = serializableItor4.previousIndex();
        int int6 = serializableItor4.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            serializableItor4.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test0619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0619");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        boolean boolean5 = wildcardClassItor1.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor6 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor1.getListIterator();
        int int8 = wildcardClassItor1.nextIndex();
        boolean boolean9 = wildcardClassItor1.hasNext();
        int int10 = wildcardClassItor1.previousIndex();
        java.lang.Class<?> wildcardClass11 = wildcardClassItor1.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardItor6);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0620");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor4.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
    }

    @Test
    public void test0621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0621");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor3 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int4 = wildcardClassItor3.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor3.getPredicate();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(wildcardPredicate5);
    }

    @Test
    public void test0622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0622");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int18 = wildcardClassItor8.previousIndex();
        int int19 = wildcardClassItor8.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor21 = wildcardClassItor20.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor20.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(wildcardItor21);
    }

    @Test
    public void test0623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0623");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int19 = wildcardClassItor8.previousIndex();
        int int20 = wildcardClassItor8.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor21 = wildcardClassItor8.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.io.Serializable> serializableItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.io.Serializable>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        // The following exception was thrown during execution in test generation
        try {
            serializableItor22.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(wildcardItor21);
    }

    @Test
    public void test0624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0624");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        boolean boolean14 = wildcardClassItor13.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        int int17 = wildcardClassItor16.previousIndex();
        int int18 = wildcardClassItor16.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate19 = wildcardClassItor16.getPredicate();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        java.lang.Class<?> wildcardClass21 = wildcardClassItor13.getClass();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate19);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0625");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor4 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        boolean boolean8 = wildcardClassItor6.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor12 = wildcardClassItor10.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        int int17 = wildcardClassItor15.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor20 = wildcardClassItor13.getListIterator();
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        wildcardClassItor6.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int24 = wildcardClassItor13.previousIndex();
        int int25 = wildcardClassItor13.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor26 = wildcardClassItor13.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int28 = wildcardClassItor1.previousIndex();
        int int29 = wildcardClassItor1.nextIndex();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertNull(wildcardItor4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardItor12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(wildcardItor26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
    }

    @Test
    public void test0626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0626");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        boolean boolean18 = wildcardClassItor8.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor20.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        int int23 = wildcardClassItor21.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        wildcardClassItor19.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor26 = wildcardClassItor19.getListIterator();
        int int27 = wildcardClassItor19.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate28 = wildcardClassItor19.getPredicate();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        boolean boolean30 = wildcardClassItor19.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor32 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor31);
        int int33 = wildcardClassItor32.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor34 = wildcardClassItor32.getListIterator();
        int int35 = wildcardClassItor32.nextIndex();
        wildcardClassItor19.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor32);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass37 = wildcardClassItor32.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
    }

    @Test
    public void test0627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0627");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor3 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        boolean boolean4 = wildcardClassItor3.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor8 = wildcardClassItor6.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        int int13 = wildcardClassItor11.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor16 = wildcardClassItor9.getListIterator();
        wildcardClassItor6.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor18 = wildcardClassItor6.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor20.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        int int23 = wildcardClassItor21.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        wildcardClassItor19.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor26 = wildcardClassItor19.getListIterator();
        int int27 = wildcardClassItor19.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor28 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor29 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor28.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor29);
        int int31 = wildcardClassItor29.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor32 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor29);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate33 = wildcardClassItor32.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor34 = wildcardClassItor32.getListIterator();
        wildcardClassItor19.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor32);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor36 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor32);
        int int37 = wildcardClassItor36.nextIndex();
        wildcardClassItor6.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor36);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor39 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor40 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor41 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor40.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor41);
        int int43 = wildcardClassItor41.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor44 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor41);
        wildcardClassItor39.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor44);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor46 = wildcardClassItor39.getListIterator();
        int int47 = wildcardClassItor39.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate48 = wildcardClassItor39.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor49 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor39);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor50 = wildcardClassItor49.getListIterator();
        wildcardClassItor36.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor49);
        wildcardClassItor3.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor49);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate53 = wildcardClassItor3.getPredicate();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(wildcardItor8);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor16);
        org.junit.Assert.assertNotNull(wildcardItor18);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate33);
        org.junit.Assert.assertNotNull(wildcardItor34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate48);
        org.junit.Assert.assertNotNull(wildcardItor50);
        org.junit.Assert.assertNull(wildcardPredicate53);
    }

    @Test
    public void test0628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0628");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        int int1 = wildcardClassItor0.nextIndex();
        boolean boolean2 = wildcardClassItor0.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor3 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        java.lang.Class<?> wildcardClass4 = wildcardClassItor0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0629");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor5.getPredicate();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        int int11 = wildcardClassItor9.previousIndex();
        int int12 = wildcardClassItor9.nextIndex();
        int int13 = wildcardClassItor9.previousIndex();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        boolean boolean15 = wildcardClassItor9.hasPrevious();
        int int16 = wildcardClassItor9.previousIndex();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate6);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test0630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0630");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor7);
        int int9 = typeItor8.nextIndex();
        int int10 = typeItor8.previousIndex();
        boolean boolean11 = typeItor8.hasNext();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate12 = typeItor8.getPredicate();
        boolean boolean13 = typeItor8.hasNext();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = typeItor8.getPredicate();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardPredicate12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardPredicate14);
    }

    @Test
    public void test0631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0631");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.previousIndex();
        boolean boolean4 = wildcardClassItor1.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor6.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int9 = wildcardClassItor7.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor12 = wildcardClassItor5.getListIterator();
        int int13 = wildcardClassItor5.previousIndex();
        boolean boolean14 = wildcardClassItor5.hasNext();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate16 = wildcardClassItor5.getPredicate();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass17 = wildcardClassItor5.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(wildcardPredicate16);
    }

    @Test
    public void test0632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0632");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean5 = wildcardClassItor4.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        java.lang.Class<?> wildcardClass7 = wildcardClassItor4.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0633");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor6 = wildcardClassItor4.getListIterator();
        int int7 = wildcardClassItor4.previousIndex();
        boolean boolean8 = wildcardClassItor4.hasPrevious();
        java.lang.Class<?> wildcardClass9 = wildcardClassItor4.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNotNull(wildcardItor6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0634");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.previousIndex();
        boolean boolean4 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor1.getPredicate();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass6 = wildcardClassItor1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(wildcardPredicate5);
    }

    @Test
    public void test0635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0635");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor3 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int5 = wildcardClassItor0.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor0.getPredicate();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(wildcardPredicate6);
    }

    @Test
    public void test0636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0636");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        int int6 = wildcardClassItor1.previousIndex();
        int int7 = wildcardClassItor1.previousIndex();
        int int8 = wildcardClassItor1.previousIndex();
        boolean boolean9 = wildcardClassItor1.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor10 = wildcardClassItor1.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(wildcardItor10);
    }

    @Test
    public void test0637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0637");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        boolean boolean19 = wildcardClassItor18.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        int int22 = wildcardClassItor21.previousIndex();
        int int23 = wildcardClassItor21.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate24 = wildcardClassItor21.getPredicate();
        int int25 = wildcardClassItor21.nextIndex();
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass27 = wildcardClassItor18.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(wildcardPredicate24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    }

    @Test
    public void test0638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0638");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate3 = wildcardClassItor1.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor4 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor6.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int9 = wildcardClassItor7.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        int int16 = wildcardClassItor14.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        wildcardClassItor12.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor19 = wildcardClassItor12.getListIterator();
        boolean boolean20 = wildcardClassItor12.hasPrevious();
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass23 = wildcardClassItor1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate3);
        org.junit.Assert.assertNotNull(wildcardItor4);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test0639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0639");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        int int4 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        int int7 = wildcardClassItor6.previousIndex();
        int int8 = wildcardClassItor6.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor9 = wildcardClassItor6.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor10 = wildcardClassItor6.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int12 = wildcardClassItor1.previousIndex();
        boolean boolean13 = wildcardClassItor1.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass14 = wildcardClassItor1.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(wildcardItor9);
        org.junit.Assert.assertNotNull(wildcardItor10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0640");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        int int11 = wildcardClassItor9.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor14 = wildcardClassItor7.getListIterator();
        boolean boolean15 = wildcardClassItor7.hasPrevious();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int17 = wildcardClassItor7.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor18 = wildcardClassItor7.getListIterator();
        int int19 = wildcardClassItor7.nextIndex();
        java.lang.Class<?> wildcardClass20 = wildcardClassItor7.getClass();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(wildcardItor18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0641");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = wildcardClassItor13.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        boolean boolean17 = wildcardClassItor13.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor13.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate14);
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0642");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor4.getListIterator();
        int int14 = wildcardClassItor4.nextIndex();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertNotNull(wildcardItor13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test0643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0643");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor0.previousIndex();
        boolean boolean3 = wildcardClassItor0.hasPrevious();
        java.lang.Class<?> wildcardClass4 = wildcardClassItor0.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0644");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        int int7 = wildcardClassItor4.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor8 = wildcardClassItor4.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor9 = wildcardClassItor4.getListIterator();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(wildcardItor8);
        org.junit.Assert.assertNotNull(wildcardItor9);
    }

    @Test
    public void test0645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0645");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass5 = wildcardClassItor1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(wildcardPredicate4);
    }

    @Test
    public void test0646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0646");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate9 = wildcardClassItor0.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        boolean boolean12 = wildcardClassItor10.hasPrevious();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0647");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        boolean boolean19 = wildcardClassItor18.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        int int22 = wildcardClassItor21.previousIndex();
        int int23 = wildcardClassItor21.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate24 = wildcardClassItor21.getPredicate();
        int int25 = wildcardClassItor21.nextIndex();
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass27 = wildcardClassItor21.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(wildcardPredicate24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    }

    @Test
    public void test0648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0648");
        org.apache.commons.collections4.iterators.FilterListIterator<java.util.Iterator<java.lang.Class<?>>> wildcardClassItorItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.util.Iterator<java.lang.Class<?>>>();
        int int1 = wildcardClassItorItor0.nextIndex();
        int int2 = wildcardClassItorItor0.nextIndex();
        boolean boolean3 = wildcardClassItorItor0.hasPrevious();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test0649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0649");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor4.getPredicate();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor4.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNull(wildcardPredicate6);
    }

    @Test
    public void test0650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0650");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int19 = wildcardClassItor8.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor20 = wildcardClassItor8.getListIterator();
        int int21 = wildcardClassItor8.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor8.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
    }

    @Test
    public void test0651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0651");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        int int7 = wildcardClassItor4.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor8 = wildcardClassItor4.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        int int17 = wildcardClassItor15.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        boolean boolean19 = wildcardClassItor18.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor21.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        int int24 = wildcardClassItor22.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor25 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        boolean boolean26 = wildcardClassItor25.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        int int28 = wildcardClassItor25.previousIndex();
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor30 = wildcardClassItor25.getListIterator();
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor33 = wildcardClassItor25.getListIterator();
        java.lang.Class<?> wildcardClass34 = wildcardClassItor25.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(wildcardItor8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor30);
        org.junit.Assert.assertNotNull(wildcardItor33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0652");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        boolean boolean9 = wildcardClassItor0.hasNext();
        int int10 = wildcardClassItor0.nextIndex();
        boolean boolean11 = wildcardClassItor0.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        boolean boolean13 = wildcardClassItor0.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor14 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate15 = wildcardClassItor0.getPredicate();
        java.lang.Class<?> wildcardClass16 = wildcardClassItor0.getClass();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardItor14);
        org.junit.Assert.assertNull(wildcardPredicate15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0653");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        boolean boolean9 = wildcardClassItor0.hasNext();
        int int10 = wildcardClassItor0.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test0654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0654");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        boolean boolean5 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor1.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor8 = wildcardClassItor1.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardPredicate6);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertNull(wildcardItor8);
    }

    @Test
    public void test0655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0655");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        boolean boolean9 = wildcardClassItor0.hasNext();
        int int10 = wildcardClassItor0.nextIndex();
        boolean boolean11 = wildcardClassItor0.hasPrevious();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate12 = wildcardClassItor0.getPredicate();
        int int13 = wildcardClassItor0.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass14 = wildcardClassItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardPredicate12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test0656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0656");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = wildcardClassItor13.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int18 = wildcardClassItor17.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass20 = wildcardClassItor17.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate14);
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test0657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0657");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = wildcardClassItor13.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        boolean boolean17 = wildcardClassItor0.hasNext();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor18 = wildcardClassItor0.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate14);
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItor18);
    }

    @Test
    public void test0658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0658");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = wildcardClassItor13.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int17 = wildcardClassItor13.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass18 = wildcardClassItor13.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate14);
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test0659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0659");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate9 = wildcardClassItor0.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass11 = wildcardClassItor10.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate9);
    }

    @Test
    public void test0660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0660");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor7);
        int int9 = typeItor8.nextIndex();
        int int10 = typeItor8.previousIndex();
        boolean boolean11 = typeItor8.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor12.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor17.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        int int20 = wildcardClassItor18.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        wildcardClassItor16.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor23 = wildcardClassItor16.getListIterator();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor25 = wildcardClassItor16.getListIterator();
        typeItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass27 = wildcardClassItor16.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor23);
        org.junit.Assert.assertNotNull(wildcardItor25);
    }

    @Test
    public void test0661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0661");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        int int7 = wildcardClassItor5.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate10 = wildcardClassItor1.getPredicate();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate10);
    }

    @Test
    public void test0662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0662");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate9 = wildcardClassItor0.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int11 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate12 = wildcardClassItor10.getPredicate();
        boolean boolean13 = wildcardClassItor10.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass14 = wildcardClassItor10.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0663");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        int int6 = wildcardClassItor1.previousIndex();
        int int7 = wildcardClassItor1.previousIndex();
        int int8 = wildcardClassItor1.previousIndex();
        boolean boolean9 = wildcardClassItor1.hasNext();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate10 = wildcardClassItor1.getPredicate();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(wildcardPredicate10);
    }

    @Test
    public void test0664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0664");
        java.util.ListIterator<java.lang.Class<?>> wildcardClassItor0 = null;
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.GenericDeclaration> genericDeclarationItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.GenericDeclaration>(wildcardClassItor0);
    }

    @Test
    public void test0665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0665");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor2 = wildcardClassItor1.getListIterator();
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        boolean boolean19 = wildcardClassItor8.hasPrevious();
        org.junit.Assert.assertNotNull(wildcardItor2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0666");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        int int5 = wildcardClassItor1.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test0667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0667");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        int int4 = wildcardClassItor1.nextIndex();
        int int5 = wildcardClassItor1.previousIndex();
        boolean boolean6 = wildcardClassItor1.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor1.getListIterator();
        boolean boolean8 = wildcardClassItor1.hasNext();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate9 = wildcardClassItor1.getPredicate();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass10 = wildcardPredicate9.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardPredicate9);
    }

    @Test
    public void test0668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0668");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = wildcardClassItor13.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        boolean boolean17 = wildcardClassItor0.hasNext();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor18 = wildcardClassItor0.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass19 = wildcardClassItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate14);
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItor18);
    }

    @Test
    public void test0669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0669");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor5.getPredicate();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        boolean boolean14 = wildcardClassItor13.hasNext();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass16 = wildcardClassItor13.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate6);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0670");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean5 = wildcardClassItor4.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass6 = wildcardClassItor4.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0671");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        int int4 = wildcardClassItor1.nextIndex();
        int int5 = wildcardClassItor1.previousIndex();
        boolean boolean6 = wildcardClassItor1.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass7 = wildcardClassItor1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0672");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate3 = wildcardClassItor1.getPredicate();
        boolean boolean4 = wildcardClassItor1.hasPrevious();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0673");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int10 = wildcardClassItor8.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor6.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor6.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor13);
        int int15 = typeItor14.nextIndex();
        int int16 = typeItor14.previousIndex();
        boolean boolean17 = typeItor14.hasNext();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate18 = typeItor14.getPredicate();
        boolean boolean19 = typeItor14.hasPrevious();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate20 = typeItor14.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor21.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor24 = wildcardClassItor21.getListIterator();
        typeItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor24);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor24);
        boolean boolean27 = wildcardClassItor4.hasPrevious();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(wildcardPredicate18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(wildcardPredicate20);
        org.junit.Assert.assertNotNull(wildcardItor24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test0674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0674");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor6 = wildcardClassItor4.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor4.getListIterator();
        boolean boolean8 = wildcardClassItor4.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        boolean boolean12 = wildcardClassItor10.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor16 = wildcardClassItor14.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        int int21 = wildcardClassItor19.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        wildcardClassItor17.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor24 = wildcardClassItor17.getListIterator();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate28 = wildcardClassItor27.getPredicate();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor30 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        int int31 = wildcardClassItor30.nextIndex();
        int int32 = wildcardClassItor30.previousIndex();
        java.lang.Class<?> wildcardClass33 = wildcardClassItor30.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNotNull(wildcardItor6);
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(wildcardItor16);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor24);
        org.junit.Assert.assertNull(wildcardPredicate28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0675");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor0.previousIndex();
        boolean boolean3 = wildcardClassItor0.hasPrevious();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test0676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0676");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        boolean boolean17 = wildcardClassItor15.hasPrevious();
        int int18 = wildcardClassItor15.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        int int21 = wildcardClassItor20.previousIndex();
        int int22 = wildcardClassItor20.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor23 = wildcardClassItor20.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor24 = wildcardClassItor20.getListIterator();
        wildcardClassItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor24);
        int int26 = wildcardClassItor15.previousIndex();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate28 = wildcardClassItor13.getPredicate();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(wildcardItor23);
        org.junit.Assert.assertNotNull(wildcardItor24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate28);
    }

    @Test
    public void test0677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0677");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        boolean boolean10 = wildcardClassItor9.hasNext();
        int int11 = wildcardClassItor9.previousIndex();
        boolean boolean12 = wildcardClassItor9.hasNext();
        int int13 = wildcardClassItor9.nextIndex();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        int int15 = wildcardClassItor1.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass16 = wildcardClassItor1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test0678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0678");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int19 = wildcardClassItor18.nextIndex();
        boolean boolean20 = wildcardClassItor18.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass22 = wildcardClassItor18.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test0679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0679");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean5 = wildcardClassItor4.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int10 = wildcardClassItor8.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        boolean boolean12 = wildcardClassItor11.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        int int14 = wildcardClassItor11.previousIndex();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        boolean boolean16 = wildcardClassItor11.hasPrevious();
        int int17 = wildcardClassItor11.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass18 = wildcardClassItor11.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test0680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0680");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        int int11 = wildcardClassItor9.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor14 = wildcardClassItor7.getListIterator();
        boolean boolean15 = wildcardClassItor7.hasPrevious();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int17 = wildcardClassItor7.nextIndex();
        boolean boolean18 = wildcardClassItor7.hasNext();
        int int19 = wildcardClassItor7.nextIndex();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test0681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0681");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        boolean boolean18 = wildcardClassItor8.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor20.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        int int23 = wildcardClassItor21.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        wildcardClassItor19.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor26 = wildcardClassItor19.getListIterator();
        int int27 = wildcardClassItor19.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate28 = wildcardClassItor19.getPredicate();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        boolean boolean30 = wildcardClassItor19.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass31 = wildcardClassItor19.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0682");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate3 = wildcardClassItor1.getPredicate();
        int int4 = wildcardClassItor1.previousIndex();
        int int5 = wildcardClassItor1.previousIndex();
        boolean boolean6 = wildcardClassItor1.hasPrevious();
        java.lang.Class<?> wildcardClass7 = wildcardClassItor1.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0683");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = wildcardClassItor13.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int18 = wildcardClassItor17.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        int int20 = wildcardClassItor17.previousIndex();
        boolean boolean21 = wildcardClassItor17.hasNext();
        boolean boolean22 = wildcardClassItor17.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor17.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate14);
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test0684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0684");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        boolean boolean7 = wildcardClassItor0.hasNext();
        int int8 = wildcardClassItor0.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test0685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0685");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = wildcardClassItor13.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int18 = wildcardClassItor17.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        int int20 = wildcardClassItor17.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor21.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate14);
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
    }

    @Test
    public void test0686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0686");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor6 = wildcardClassItor4.getListIterator();
        int int7 = wildcardClassItor4.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        int int9 = wildcardClassItor4.previousIndex();
        int int10 = wildcardClassItor4.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor4.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNotNull(wildcardItor6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test0687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0687");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor4 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        boolean boolean8 = wildcardClassItor6.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor12 = wildcardClassItor10.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        int int17 = wildcardClassItor15.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor20 = wildcardClassItor13.getListIterator();
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        wildcardClassItor6.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int24 = wildcardClassItor13.previousIndex();
        int int25 = wildcardClassItor13.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor26 = wildcardClassItor13.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertNull(wildcardItor4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardItor12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(wildcardItor26);
    }

    @Test
    public void test0688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0688");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor4 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate7 = wildcardClassItor1.getPredicate();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertNull(wildcardItor4);
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNull(wildcardPredicate7);
    }

    @Test
    public void test0689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0689");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean5 = wildcardClassItor4.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        int int7 = wildcardClassItor4.previousIndex();
        boolean boolean8 = wildcardClassItor4.hasNext();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor9 = wildcardClassItor4.getListIterator();
        int int10 = wildcardClassItor4.nextIndex();
        int int11 = wildcardClassItor4.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor4.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardItor9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test0690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0690");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        boolean boolean9 = wildcardClassItor0.hasNext();
        int int10 = wildcardClassItor0.nextIndex();
        boolean boolean11 = wildcardClassItor0.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor0.getListIterator();
        int int14 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor16.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        int int19 = wildcardClassItor17.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        wildcardClassItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor22 = wildcardClassItor15.getListIterator();
        int int23 = wildcardClassItor15.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor25 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor24.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        int int27 = wildcardClassItor25.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor28 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate29 = wildcardClassItor28.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor30 = wildcardClassItor28.getListIterator();
        wildcardClassItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor28);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor32 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor28);
        int int33 = wildcardClassItor32.nextIndex();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor32);
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor32.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItor13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate29);
        org.junit.Assert.assertNotNull(wildcardItor30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
    }

    @Test
    public void test0691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0691");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int19 = wildcardClassItor18.nextIndex();
        boolean boolean20 = wildcardClassItor18.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor21.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor24 = wildcardClassItor22.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor25 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor26 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor26.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        int int29 = wildcardClassItor27.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor30 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        wildcardClassItor25.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor30);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor32 = wildcardClassItor25.getListIterator();
        wildcardClassItor22.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor34 = wildcardClassItor25.getListIterator();
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor36 = wildcardClassItor25.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor25.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardItor24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor32);
        org.junit.Assert.assertNotNull(wildcardItor34);
        org.junit.Assert.assertNotNull(wildcardItor36);
    }

    @Test
    public void test0692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0692");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor4.getPredicate();
        boolean boolean7 = wildcardClassItor4.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        int int11 = wildcardClassItor9.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor9.getListIterator();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate15 = wildcardClassItor9.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor16 = wildcardClassItor9.getListIterator();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNull(wildcardPredicate6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(wildcardItor13);
        org.junit.Assert.assertNull(wildcardPredicate15);
        org.junit.Assert.assertNull(wildcardItor16);
    }

    @Test
    public void test0693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0693");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        int int1 = wildcardClassItor0.nextIndex();
        boolean boolean2 = wildcardClassItor0.hasPrevious();
        boolean boolean3 = wildcardClassItor0.hasNext();
        int int4 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int6 = typeItor5.nextIndex();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test0694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0694");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor4.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
    }

    @Test
    public void test0695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0695");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate1 = wildcardClassItor0.getPredicate();
        boolean boolean2 = wildcardClassItor0.hasNext();
        boolean boolean3 = wildcardClassItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardPredicate1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test0696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0696");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.previousIndex();
        boolean boolean4 = wildcardClassItor1.hasNext();
        boolean boolean5 = wildcardClassItor1.hasPrevious();
        boolean boolean6 = wildcardClassItor1.hasNext();
        boolean boolean7 = wildcardClassItor1.hasPrevious();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0697");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor4.getPredicate();
        int int7 = wildcardClassItor4.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate8 = wildcardClassItor4.getPredicate();
        java.util.ListIterator<java.lang.Class<?>> wildcardClassItor9 = null;
        wildcardClassItor4.setListIterator(wildcardClassItor9);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNull(wildcardPredicate6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(wildcardPredicate8);
    }

    @Test
    public void test0698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0698");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        int int4 = wildcardClassItor1.nextIndex();
        boolean boolean5 = wildcardClassItor1.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0699");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        int int4 = wildcardClassItor1.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor1.getPredicate();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass7 = wildcardClassItor1.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(wildcardItor5);
        org.junit.Assert.assertNull(wildcardPredicate6);
    }

    @Test
    public void test0700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0700");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate9 = wildcardClassItor0.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int11 = wildcardClassItor10.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor10.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test0701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0701");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        boolean boolean17 = wildcardClassItor15.hasPrevious();
        int int18 = wildcardClassItor15.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        int int21 = wildcardClassItor20.previousIndex();
        int int22 = wildcardClassItor20.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor23 = wildcardClassItor20.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor24 = wildcardClassItor20.getListIterator();
        wildcardClassItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor24);
        int int26 = wildcardClassItor15.previousIndex();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        boolean boolean28 = wildcardClassItor13.hasPrevious();
        boolean boolean29 = wildcardClassItor13.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor30 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor30.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor31);
        int int33 = wildcardClassItor31.previousIndex();
        int int34 = wildcardClassItor31.nextIndex();
        int int35 = wildcardClassItor31.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor36 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor31);
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor36);
        java.lang.Class<?> wildcardClass38 = wildcardClassItor36.getClass();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(wildcardItor23);
        org.junit.Assert.assertNotNull(wildcardItor24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0702");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate19 = wildcardClassItor8.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int21 = wildcardClassItor8.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor22.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor23);
        int int25 = wildcardClassItor23.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor26 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor23);
        boolean boolean27 = wildcardClassItor26.hasNext();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        java.lang.Class<?> wildcardClass29 = wildcardClassItor26.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertNull(wildcardPredicate19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0703");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        boolean boolean17 = wildcardClassItor15.hasPrevious();
        int int18 = wildcardClassItor15.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        int int21 = wildcardClassItor20.previousIndex();
        int int22 = wildcardClassItor20.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor23 = wildcardClassItor20.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor24 = wildcardClassItor20.getListIterator();
        wildcardClassItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor24);
        int int26 = wildcardClassItor15.previousIndex();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        boolean boolean28 = wildcardClassItor13.hasPrevious();
        boolean boolean29 = wildcardClassItor13.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor30 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor30.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor31);
        int int33 = wildcardClassItor31.previousIndex();
        int int34 = wildcardClassItor31.nextIndex();
        int int35 = wildcardClassItor31.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor36 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor31);
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor36);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor38 = wildcardClassItor36.getListIterator();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(wildcardItor23);
        org.junit.Assert.assertNotNull(wildcardItor24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor38);
    }

    @Test
    public void test0704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0704");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int9 = wildcardClassItor8.previousIndex();
        int int10 = wildcardClassItor8.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor8.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor12 = wildcardClassItor8.getListIterator();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        boolean boolean14 = wildcardClassItor4.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor4.getListIterator();
        boolean boolean16 = wildcardClassItor4.hasNext();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNull(wildcardPredicate6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertNotNull(wildcardItor12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test0705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0705");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate19 = wildcardClassItor8.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        int int21 = wildcardClassItor20.nextIndex();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass23 = wildcardClassItor20.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertNull(wildcardPredicate19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test0706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0706");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate9 = wildcardClassItor0.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int11 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate12 = wildcardClassItor10.getPredicate();
        int int13 = wildcardClassItor10.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = wildcardClassItor10.getPredicate();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate15 = wildcardClassItor10.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor16.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        boolean boolean19 = wildcardClassItor17.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor20.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor23 = wildcardClassItor21.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor25 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor26 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor25.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        int int28 = wildcardClassItor26.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor29 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        wildcardClassItor24.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor29);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor31 = wildcardClassItor24.getListIterator();
        wildcardClassItor21.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        wildcardClassItor17.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor34 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        boolean boolean35 = wildcardClassItor34.hasPrevious();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate36 = wildcardClassItor34.getPredicate();
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor34);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor38 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor39 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor38);
        int int40 = wildcardClassItor39.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor41 = wildcardClassItor39.getListIterator();
        int int42 = wildcardClassItor39.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor43 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor44 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor43);
        int int45 = wildcardClassItor44.previousIndex();
        int int46 = wildcardClassItor44.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor47 = wildcardClassItor44.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor48 = wildcardClassItor44.getListIterator();
        wildcardClassItor39.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor44);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor50 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor39);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor51 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor52 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor53 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor52.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor53);
        int int55 = wildcardClassItor53.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor56 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor53);
        wildcardClassItor51.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor56);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor58 = wildcardClassItor51.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor59 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor58);
        int int60 = typeItor59.nextIndex();
        int int61 = typeItor59.previousIndex();
        boolean boolean62 = typeItor59.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor63 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor64 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor63.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor64);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor66 = wildcardClassItor64.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor67 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor68 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor69 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor68.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor69);
        int int71 = wildcardClassItor69.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor72 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor69);
        wildcardClassItor67.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor72);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor74 = wildcardClassItor67.getListIterator();
        wildcardClassItor64.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor67);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor76 = wildcardClassItor67.getListIterator();
        typeItor59.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor67);
        wildcardClassItor50.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor67);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate79 = wildcardClassItor50.getPredicate();
        wildcardClassItor34.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor50);
        int int81 = wildcardClassItor34.nextIndex();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(wildcardPredicate14);
        org.junit.Assert.assertNull(wildcardPredicate15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(wildcardItor23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(wildcardPredicate36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(wildcardItor47);
        org.junit.Assert.assertNotNull(wildcardItor48);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(wildcardItor66);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor74);
        org.junit.Assert.assertNotNull(wildcardItor76);
        org.junit.Assert.assertNull(wildcardPredicate79);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
    }

    @Test
    public void test0707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0707");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor7.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate9 = wildcardClassItor7.getPredicate();
        int int10 = wildcardClassItor7.previousIndex();
        int int11 = wildcardClassItor7.previousIndex();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass14 = wildcardClassItor1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test0708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0708");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        boolean boolean18 = wildcardClassItor8.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor20.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        int int23 = wildcardClassItor21.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        wildcardClassItor19.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor26 = wildcardClassItor19.getListIterator();
        int int27 = wildcardClassItor19.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate28 = wildcardClassItor19.getPredicate();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        boolean boolean30 = wildcardClassItor19.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor32 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor31);
        int int33 = wildcardClassItor32.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor34 = wildcardClassItor32.getListIterator();
        int int35 = wildcardClassItor32.nextIndex();
        wildcardClassItor19.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor32);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass37 = wildcardClassItor19.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
    }

    @Test
    public void test0709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0709");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor1.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor6 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor1.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNull(wildcardItor6);
        org.junit.Assert.assertNull(wildcardItor7);
    }

    @Test
    public void test0710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0710");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean5 = wildcardClassItor4.hasNext();
        int int6 = wildcardClassItor4.previousIndex();
        boolean boolean7 = wildcardClassItor4.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        boolean boolean16 = wildcardClassItor13.hasPrevious();
        boolean boolean17 = wildcardClassItor13.hasPrevious();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.lang.Class<?> wildcardClass19 = wildcardClassItor13.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0711");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor4.getListIterator();
        int int6 = wildcardClassItor4.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int9 = wildcardClassItor8.previousIndex();
        int int10 = wildcardClassItor8.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate11 = wildcardClassItor8.getPredicate();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        int int17 = wildcardClassItor15.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor20 = wildcardClassItor13.getListIterator();
        int int21 = wildcardClassItor13.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor22.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor23);
        int int25 = wildcardClassItor23.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor26 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor23);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate27 = wildcardClassItor26.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor28 = wildcardClassItor26.getListIterator();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        boolean boolean30 = wildcardClassItor13.hasNext();
        boolean boolean31 = wildcardClassItor13.hasNext();
        int int32 = wildcardClassItor13.nextIndex();
        boolean boolean33 = wildcardClassItor13.hasNext();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor34 = wildcardClassItor13.getListIterator();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        boolean boolean36 = wildcardClassItor8.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass37 = wildcardClassItor8.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate11);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate27);
        org.junit.Assert.assertNotNull(wildcardItor28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardItor34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test0712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0712");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        int int4 = wildcardClassItor1.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass5 = wildcardClassItor1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test0713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0713");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        boolean boolean9 = wildcardClassItor0.hasNext();
        int int10 = wildcardClassItor0.nextIndex();
        boolean boolean11 = wildcardClassItor0.hasPrevious();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate12 = wildcardClassItor0.getPredicate();
        int int13 = wildcardClassItor0.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int15 = wildcardClassItor14.nextIndex();
        java.lang.Class<?> wildcardClass16 = wildcardClassItor14.getClass();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardPredicate12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0714");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate1 = wildcardClassItor0.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        boolean boolean3 = wildcardClassItor0.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass4 = wildcardClassItor0.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardPredicate1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test0715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0715");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor7);
        int int9 = typeItor8.nextIndex();
        int int10 = typeItor8.nextIndex();
        int int11 = typeItor8.nextIndex();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test0716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0716");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean5 = wildcardClassItor4.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        int int7 = wildcardClassItor4.previousIndex();
        boolean boolean8 = wildcardClassItor4.hasNext();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor9 = wildcardClassItor4.getListIterator();
        int int10 = wildcardClassItor4.nextIndex();
        int int11 = wildcardClassItor4.previousIndex();
        int int12 = wildcardClassItor4.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass13 = wildcardClassItor4.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardItor9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test0717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0717");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int19 = wildcardClassItor18.nextIndex();
        boolean boolean20 = wildcardClassItor18.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor21.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor24 = wildcardClassItor22.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor25 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor26 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor26.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        int int29 = wildcardClassItor27.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor30 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        wildcardClassItor25.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor30);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor32 = wildcardClassItor25.getListIterator();
        wildcardClassItor22.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor34 = wildcardClassItor25.getListIterator();
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor36 = wildcardClassItor25.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor37 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor37.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardItor24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor32);
        org.junit.Assert.assertNotNull(wildcardItor34);
        org.junit.Assert.assertNotNull(wildcardItor36);
    }

    @Test
    public void test0718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0718");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        boolean boolean9 = wildcardClassItor0.hasNext();
        int int10 = wildcardClassItor0.nextIndex();
        boolean boolean11 = wildcardClassItor0.hasPrevious();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate12 = wildcardClassItor0.getPredicate();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass13 = wildcardClassItor0.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardPredicate12);
    }

    @Test
    public void test0719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0719");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor5.getPredicate();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor9 = wildcardClassItor8.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor10 = wildcardClassItor8.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor8.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate6);
        org.junit.Assert.assertNotNull(wildcardItor9);
        org.junit.Assert.assertNotNull(wildcardItor10);
    }

    @Test
    public void test0720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0720");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        int int4 = wildcardClassItor1.previousIndex();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test0721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0721");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor7);
        int int9 = typeItor8.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor11.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        int int14 = wildcardClassItor12.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor17 = wildcardClassItor10.getListIterator();
        int int18 = wildcardClassItor10.previousIndex();
        boolean boolean19 = wildcardClassItor10.hasNext();
        int int20 = wildcardClassItor10.nextIndex();
        typeItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int22 = typeItor8.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate23 = typeItor8.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor25 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor26 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor25.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        int int28 = wildcardClassItor26.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor29 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        wildcardClassItor24.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor29);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor31 = wildcardClassItor24.getListIterator();
        int int32 = wildcardClassItor24.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor33 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor34 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor33.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor34);
        int int36 = wildcardClassItor34.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor37 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor34);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate38 = wildcardClassItor37.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor39 = wildcardClassItor37.getListIterator();
        wildcardClassItor24.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor37);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor41 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor37);
        int int42 = wildcardClassItor41.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor43 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor41);
        typeItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor41);
        boolean boolean45 = typeItor8.hasPrevious();
        int int46 = typeItor8.previousIndex();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate38);
        org.junit.Assert.assertNotNull(wildcardItor39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
    }

    @Test
    public void test0722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0722");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = wildcardClassItor13.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        boolean boolean17 = wildcardClassItor0.hasNext();
        boolean boolean18 = wildcardClassItor0.hasNext();
        int int19 = wildcardClassItor0.nextIndex();
        boolean boolean20 = wildcardClassItor0.hasNext();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor21 = wildcardClassItor0.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass22 = wildcardClassItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate14);
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItor21);
    }

    @Test
    public void test0723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0723");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate2 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor3 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor4 = wildcardClassItor1.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass5 = wildcardClassItor1.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardPredicate2);
        org.junit.Assert.assertNotNull(wildcardItor4);
    }

    @Test
    public void test0724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0724");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        boolean boolean9 = wildcardClassItor0.hasNext();
        int int10 = wildcardClassItor0.nextIndex();
        boolean boolean11 = wildcardClassItor0.hasPrevious();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate12 = wildcardClassItor0.getPredicate();
        int int13 = wildcardClassItor0.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = wildcardClassItor0.getPredicate();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass15 = wildcardClassItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardPredicate12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(wildcardPredicate14);
    }

    @Test
    public void test0725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0725");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        int int11 = wildcardClassItor9.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor14 = wildcardClassItor7.getListIterator();
        boolean boolean15 = wildcardClassItor7.hasPrevious();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        boolean boolean17 = wildcardClassItor5.hasNext();
        boolean boolean18 = wildcardClassItor5.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor20 = wildcardClassItor5.getListIterator();
        java.lang.Class<?> wildcardClass21 = wildcardClassItor5.getClass();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardItor20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0726");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor5.getPredicate();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate9 = wildcardClassItor8.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        boolean boolean12 = wildcardClassItor5.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        int int16 = wildcardClassItor14.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        int int21 = wildcardClassItor19.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        boolean boolean23 = wildcardClassItor22.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor25 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor26 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor25.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        int int28 = wildcardClassItor26.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor29 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        boolean boolean30 = wildcardClassItor29.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor29);
        int int32 = wildcardClassItor29.previousIndex();
        wildcardClassItor22.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor29);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor34 = wildcardClassItor29.getListIterator();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor29);
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor29);
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor29.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate6);
        org.junit.Assert.assertNull(wildcardPredicate9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor34);
    }

    @Test
    public void test0727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0727");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor4 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor1.getPredicate();
        int int6 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int10 = wildcardClassItor8.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate11 = wildcardClassItor8.getPredicate();
        boolean boolean12 = wildcardClassItor8.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor8.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor13);
        int int15 = wildcardClassItor1.nextIndex();
        java.lang.Class<?> wildcardClass16 = wildcardClassItor1.getClass();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertNull(wildcardItor4);
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(wildcardItor13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0728");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor7);
        int int9 = typeItor8.nextIndex();
        int int10 = typeItor8.previousIndex();
        boolean boolean11 = typeItor8.hasNext();
        int int12 = typeItor8.previousIndex();
        boolean boolean13 = typeItor8.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        boolean boolean17 = wildcardClassItor15.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor21 = wildcardClassItor19.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor23.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        int int26 = wildcardClassItor24.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        wildcardClassItor22.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor29 = wildcardClassItor22.getListIterator();
        wildcardClassItor19.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        wildcardClassItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor32 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate33 = wildcardClassItor22.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor34 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        int int35 = wildcardClassItor22.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate36 = wildcardClassItor22.getPredicate();
        typeItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        boolean boolean38 = typeItor8.hasPrevious();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(wildcardItor21);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor29);
        org.junit.Assert.assertNull(wildcardPredicate33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(wildcardPredicate36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test0729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0729");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate7 = wildcardClassItor0.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        boolean boolean11 = wildcardClassItor9.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor12.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor17.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        int int20 = wildcardClassItor18.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        wildcardClassItor16.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor23 = wildcardClassItor16.getListIterator();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor26 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        int int27 = wildcardClassItor16.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor28 = wildcardClassItor16.getListIterator();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        int int30 = wildcardClassItor16.nextIndex();
        boolean boolean31 = wildcardClassItor16.hasNext();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test0730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0730");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        int int5 = wildcardClassItor1.previousIndex();
        int int6 = wildcardClassItor1.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test0731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0731");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean5 = wildcardClassItor4.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        int int7 = wildcardClassItor4.previousIndex();
        boolean boolean8 = wildcardClassItor4.hasNext();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor9 = wildcardClassItor4.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor9);
        int int11 = wildcardClassItor10.nextIndex();
        boolean boolean12 = wildcardClassItor10.hasNext();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardItor9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0732");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor4 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int7 = wildcardClassItor1.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertNull(wildcardItor4);
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test0733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0733");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        int int5 = wildcardClassItor1.previousIndex();
        boolean boolean6 = wildcardClassItor1.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0734");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        boolean boolean10 = wildcardClassItor9.hasNext();
        int int11 = wildcardClassItor9.previousIndex();
        boolean boolean12 = wildcardClassItor9.hasNext();
        int int13 = wildcardClassItor9.nextIndex();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        int int15 = wildcardClassItor9.nextIndex();
        boolean boolean16 = wildcardClassItor9.hasNext();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate17 = wildcardClassItor9.getPredicate();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(wildcardPredicate17);
    }

    @Test
    public void test0735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0735");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        int int4 = wildcardClassItor1.nextIndex();
        boolean boolean5 = wildcardClassItor1.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor6.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int9 = wildcardClassItor7.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor7.getListIterator();
        int int12 = wildcardClassItor7.previousIndex();
        int int13 = wildcardClassItor7.previousIndex();
        boolean boolean14 = wildcardClassItor7.hasPrevious();
        boolean boolean15 = wildcardClassItor7.hasNext();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Object> objItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Object>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor18 = wildcardClassItor7.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor7.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardItor18);
    }

    @Test
    public void test0736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0736");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor5.getPredicate();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        boolean boolean14 = wildcardClassItor13.hasNext();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate16 = wildcardClassItor13.getPredicate();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate6);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(wildcardPredicate16);
    }

    @Test
    public void test0737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0737");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean5 = wildcardClassItor4.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int10 = wildcardClassItor8.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        boolean boolean12 = wildcardClassItor11.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        int int14 = wildcardClassItor11.previousIndex();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        java.lang.Class<?> wildcardClass16 = wildcardClassItor4.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0738");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor6 = wildcardClassItor4.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor4.getListIterator();
        boolean boolean8 = wildcardClassItor4.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        boolean boolean12 = wildcardClassItor10.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor16 = wildcardClassItor14.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        int int21 = wildcardClassItor19.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        wildcardClassItor17.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor24 = wildcardClassItor17.getListIterator();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate28 = wildcardClassItor27.getPredicate();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor30 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor32 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor31.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor32);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor34 = wildcardClassItor32.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor35 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor36 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor37 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor36.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor37);
        int int39 = wildcardClassItor37.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor40 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor37);
        wildcardClassItor35.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor40);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor42 = wildcardClassItor35.getListIterator();
        wildcardClassItor32.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor35);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor44 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor35);
        boolean boolean45 = wildcardClassItor44.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor46 = wildcardClassItor44.getListIterator();
        wildcardClassItor27.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor44);
        java.lang.Class<?> wildcardClass48 = wildcardClassItor27.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNotNull(wildcardItor6);
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(wildcardItor16);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor24);
        org.junit.Assert.assertNull(wildcardPredicate28);
        org.junit.Assert.assertNull(wildcardItor34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardItor46);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0739");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate19 = wildcardClassItor8.getPredicate();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass20 = wildcardClassItor8.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertNull(wildcardPredicate19);
    }

    @Test
    public void test0740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0740");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        int int7 = wildcardClassItor4.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor8 = wildcardClassItor4.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Object> objItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Object>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        boolean boolean10 = wildcardClassItor4.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor4.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(wildcardItor8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0741");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate3 = wildcardClassItor1.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor4 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor6.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int9 = wildcardClassItor7.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        int int16 = wildcardClassItor14.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        wildcardClassItor12.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor19 = wildcardClassItor12.getListIterator();
        boolean boolean20 = wildcardClassItor12.hasPrevious();
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        boolean boolean23 = wildcardClassItor10.hasNext();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate3);
        org.junit.Assert.assertNotNull(wildcardItor4);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test0742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0742");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = wildcardClassItor13.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        boolean boolean17 = wildcardClassItor0.hasNext();
        boolean boolean18 = wildcardClassItor0.hasNext();
        int int19 = wildcardClassItor0.nextIndex();
        boolean boolean20 = wildcardClassItor0.hasNext();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor21 = wildcardClassItor0.getListIterator();
        java.lang.Class<?> wildcardClass22 = wildcardItor21.getClass();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate14);
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItor21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0743");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        boolean boolean7 = wildcardClassItor0.hasNext();
        int int8 = wildcardClassItor0.nextIndex();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test0744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0744");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor8 = wildcardClassItor6.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        int int13 = wildcardClassItor11.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor16 = wildcardClassItor9.getListIterator();
        wildcardClassItor6.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor18 = wildcardClassItor6.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor18);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        boolean boolean21 = wildcardClassItor1.hasNext();
        boolean boolean22 = wildcardClassItor1.hasPrevious();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardItor8);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor16);
        org.junit.Assert.assertNotNull(wildcardItor18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test0745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0745");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor7);
        java.lang.Class<?> wildcardClass9 = typeItor8.getClass();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0746");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int19 = wildcardClassItor8.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor20 = wildcardClassItor8.getListIterator();
        int int21 = wildcardClassItor8.previousIndex();
        int int22 = wildcardClassItor8.previousIndex();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
    }

    @Test
    public void test0747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0747");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor4.getPredicate();
        int int7 = wildcardClassItor4.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate8 = wildcardClassItor4.getPredicate();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass9 = wildcardClassItor4.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNull(wildcardPredicate6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(wildcardPredicate8);
    }

    @Test
    public void test0748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0748");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor4 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate7 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor9.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        int int16 = wildcardClassItor14.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        wildcardClassItor12.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor19 = wildcardClassItor12.getListIterator();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        boolean boolean22 = wildcardClassItor9.hasPrevious();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertNull(wildcardItor4);
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNull(wildcardPredicate7);
        org.junit.Assert.assertNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test0749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0749");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        int int11 = wildcardClassItor9.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor14 = wildcardClassItor7.getListIterator();
        boolean boolean15 = wildcardClassItor7.hasPrevious();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int17 = wildcardClassItor7.nextIndex();
        boolean boolean18 = wildcardClassItor7.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass20 = wildcardClassItor19.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0750");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor3 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor3.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        int int6 = wildcardClassItor4.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor8 = wildcardClassItor4.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        boolean boolean14 = wildcardClassItor13.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int16 = wildcardClassItor13.previousIndex();
        boolean boolean17 = wildcardClassItor13.hasNext();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor18 = wildcardClassItor13.getListIterator();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass21 = wildcardClassItor13.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(wildcardItor8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItor18);
    }

    @Test
    public void test0751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0751");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor4 = wildcardClassItor1.getListIterator();
        boolean boolean5 = wildcardClassItor1.hasNext();
        java.util.ListIterator<java.lang.Class<?>> wildcardClassItor6 = null;
        wildcardClassItor1.setListIterator(wildcardClassItor6);
        java.lang.Class<?> wildcardClass8 = wildcardClassItor1.getClass();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertNull(wildcardItor4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0752");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        boolean boolean14 = wildcardClassItor13.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        int int17 = wildcardClassItor16.previousIndex();
        int int18 = wildcardClassItor16.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate19 = wildcardClassItor16.getPredicate();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass21 = wildcardClassItor13.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate19);
    }

    @Test
    public void test0753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0753");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        int int6 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Object> objItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Object>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }

    @Test
    public void test0754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0754");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor5.getPredicate();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass9 = wildcardClassItor0.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate6);
    }

    @Test
    public void test0755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0755");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate19 = wildcardClassItor18.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        int int21 = wildcardClassItor18.previousIndex();
        int int22 = wildcardClassItor18.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.GenericDeclaration> genericDeclarationItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.GenericDeclaration>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate24 = wildcardClassItor18.getPredicate();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertNull(wildcardPredicate19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(wildcardPredicate24);
    }

    @Test
    public void test0756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0756");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate19 = wildcardClassItor18.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        int int21 = wildcardClassItor18.previousIndex();
        int int22 = wildcardClassItor18.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.GenericDeclaration> genericDeclarationItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.GenericDeclaration>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor18.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertNull(wildcardPredicate19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test0757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0757");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int19 = wildcardClassItor18.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate20 = wildcardClassItor18.getPredicate();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass21 = wildcardClassItor18.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate20);
    }

    @Test
    public void test0758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0758");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor4 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass6 = wildcardClassItor1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(wildcardItor4);
        org.junit.Assert.assertNotNull(wildcardItor5);
    }

    @Test
    public void test0759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0759");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        int int6 = wildcardClassItor1.previousIndex();
        int int7 = wildcardClassItor1.previousIndex();
        int int8 = wildcardClassItor1.previousIndex();
        boolean boolean9 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate10 = wildcardClassItor1.getPredicate();
        int int11 = wildcardClassItor1.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass12 = wildcardClassItor1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(wildcardPredicate10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test0760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0760");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor2 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<java.lang.Class<?>> wildcardClassItor3 = null;
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>(wildcardClassItor3);
        wildcardClassItor1.setListIterator(wildcardClassItor3);
        java.lang.Class<?> wildcardClass6 = wildcardClassItor1.getClass();
        org.junit.Assert.assertNotNull(wildcardItor2);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0761");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        int int18 = wildcardClassItor16.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor21 = wildcardClassItor14.getListIterator();
        int int22 = wildcardClassItor14.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor23.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        int int26 = wildcardClassItor24.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate28 = wildcardClassItor27.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor29 = wildcardClassItor27.getListIterator();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        int int32 = wildcardClassItor31.nextIndex();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor31);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor34 = wildcardClassItor31.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass35 = wildcardClassItor31.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertNotNull(wildcardItor13);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate28);
        org.junit.Assert.assertNotNull(wildcardItor29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(wildcardItor34);
    }

    @Test
    public void test0762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0762");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        int int4 = wildcardClassItor1.nextIndex();
        int int5 = wildcardClassItor1.previousIndex();
        boolean boolean6 = wildcardClassItor1.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0763");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int5 = annotatedElementItor4.previousIndex();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
    }

    @Test
    public void test0764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0764");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = wildcardClassItor13.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int18 = wildcardClassItor17.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        int int20 = wildcardClassItor17.previousIndex();
        boolean boolean21 = wildcardClassItor17.hasNext();
        boolean boolean22 = wildcardClassItor17.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        boolean boolean24 = annotatedElementItor23.hasPrevious();
        int int25 = annotatedElementItor23.nextIndex();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate14);
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    }

    @Test
    public void test0765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0765");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = wildcardClassItor13.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor17.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate14);
        org.junit.Assert.assertNotNull(wildcardItor15);
    }

    @Test
    public void test0766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0766");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean5 = wildcardClassItor4.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int10 = wildcardClassItor8.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        boolean boolean12 = wildcardClassItor11.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        int int14 = wildcardClassItor11.previousIndex();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass16 = wildcardClassItor4.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test0767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0767");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        boolean boolean9 = wildcardClassItor0.hasNext();
        int int10 = wildcardClassItor0.nextIndex();
        boolean boolean11 = wildcardClassItor0.hasPrevious();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate12 = wildcardClassItor0.getPredicate();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardPredicate12);
    }

    @Test
    public void test0768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0768");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        int int11 = wildcardClassItor9.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor14 = wildcardClassItor7.getListIterator();
        boolean boolean15 = wildcardClassItor7.hasPrevious();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        boolean boolean17 = wildcardClassItor5.hasNext();
        boolean boolean18 = wildcardClassItor5.hasNext();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate19 = wildcardClassItor5.getPredicate();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(wildcardPredicate19);
    }

    @Test
    public void test0769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0769");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        int int5 = wildcardClassItor1.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor6 = wildcardClassItor1.getListIterator();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor6);
    }

    @Test
    public void test0770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0770");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor4.getPredicate();
        int int7 = wildcardClassItor4.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate8 = wildcardClassItor4.getPredicate();
        int int9 = wildcardClassItor4.nextIndex();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNull(wildcardPredicate6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(wildcardPredicate8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test0771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0771");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        int int1 = wildcardClassItor0.nextIndex();
        boolean boolean2 = wildcardClassItor0.hasPrevious();
        int int3 = wildcardClassItor0.nextIndex();
        boolean boolean4 = wildcardClassItor0.hasNext();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0772");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor1.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor6 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor1.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass8 = wildcardClassItor1.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNull(wildcardItor6);
        org.junit.Assert.assertNull(wildcardItor7);
    }

    @Test
    public void test0773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0773");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate7 = wildcardClassItor0.getPredicate();
        java.lang.Class<?> wildcardClass8 = wildcardClassItor0.getClass();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0774");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate1 = wildcardClassItor0.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor2 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Object> objItor3 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Object>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor2);
        boolean boolean4 = objItor3.hasPrevious();
        org.junit.Assert.assertNull(wildcardPredicate1);
        org.junit.Assert.assertNull(wildcardItor2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0775");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor7);
        int int9 = typeItor8.nextIndex();
        int int10 = typeItor8.previousIndex();
        boolean boolean11 = typeItor8.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor12.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor17.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        int int20 = wildcardClassItor18.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        wildcardClassItor16.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor23 = wildcardClassItor16.getListIterator();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor25 = wildcardClassItor16.getListIterator();
        typeItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        int int27 = wildcardClassItor16.nextIndex();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor23);
        org.junit.Assert.assertNotNull(wildcardItor25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test0776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0776");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        java.lang.Class<?> wildcardClass6 = wildcardClassItor1.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardItor5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0777");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        boolean boolean9 = wildcardClassItor0.hasNext();
        int int10 = wildcardClassItor0.nextIndex();
        boolean boolean11 = wildcardClassItor0.hasPrevious();
        boolean boolean12 = wildcardClassItor0.hasPrevious();
        int int13 = wildcardClassItor0.previousIndex();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test0778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0778");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate19 = wildcardClassItor8.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass21 = wildcardClassItor8.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertNull(wildcardPredicate19);
    }

    @Test
    public void test0779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0779");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        boolean boolean5 = wildcardClassItor1.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean7 = wildcardClassItor1.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0780");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int19 = wildcardClassItor8.previousIndex();
        int int20 = wildcardClassItor8.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor21 = wildcardClassItor8.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.io.Serializable> serializableItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.io.Serializable>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int23 = serializableItor22.previousIndex();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(wildcardItor21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
    }

    @Test
    public void test0781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0781");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor6.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int9 = wildcardClassItor7.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        boolean boolean11 = wildcardClassItor10.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int13 = wildcardClassItor10.previousIndex();
        boolean boolean14 = wildcardClassItor10.hasNext();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor10.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor17 = wildcardClassItor1.getListIterator();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertNotNull(wildcardItor17);
    }

    @Test
    public void test0782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0782");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        boolean boolean8 = wildcardClassItor5.hasPrevious();
        boolean boolean9 = wildcardClassItor5.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor5.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0783");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor6 = wildcardClassItor4.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor15);
        int int17 = typeItor16.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor19.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        int int22 = wildcardClassItor20.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor23);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor25 = wildcardClassItor18.getListIterator();
        int int26 = wildcardClassItor18.previousIndex();
        boolean boolean27 = wildcardClassItor18.hasNext();
        int int28 = wildcardClassItor18.nextIndex();
        typeItor16.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        int int30 = wildcardClassItor18.nextIndex();
        int int31 = wildcardClassItor18.nextIndex();
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass33 = wildcardClassItor7.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNotNull(wildcardItor6);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
    }

    @Test
    public void test0784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0784");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        boolean boolean7 = wildcardClassItor0.hasNext();
        int int8 = wildcardClassItor0.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor9.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test0785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0785");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate3 = wildcardClassItor1.getPredicate();
        int int4 = wildcardClassItor1.previousIndex();
        int int5 = wildcardClassItor1.previousIndex();
        boolean boolean6 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        boolean boolean10 = wildcardClassItor8.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor11.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor14 = wildcardClassItor12.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor16.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        int int19 = wildcardClassItor17.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        wildcardClassItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor22 = wildcardClassItor15.getListIterator();
        wildcardClassItor12.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor25 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate26 = wildcardClassItor15.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        int int28 = wildcardClassItor27.nextIndex();
        wildcardClassItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        boolean boolean30 = wildcardClassItor15.hasPrevious();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(wildcardItor14);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor22);
        org.junit.Assert.assertNull(wildcardPredicate26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0786");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        boolean boolean6 = wildcardClassItor1.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass7 = wildcardClassItor1.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0787");
        org.apache.commons.collections4.iterators.FilterListIterator<java.io.Serializable> serializableItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.io.Serializable>();
        boolean boolean1 = serializableItor0.hasPrevious();
        boolean boolean2 = serializableItor0.hasNext();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate3 = serializableItor0.getPredicate();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass4 = wildcardPredicate3.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(wildcardPredicate3);
    }

    @Test
    public void test0788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0788");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate3 = wildcardClassItor1.getPredicate();
        int int4 = wildcardClassItor1.previousIndex();
        int int5 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.GenericDeclaration> genericDeclarationItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.GenericDeclaration>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
    }

    @Test
    public void test0789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0789");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        boolean boolean19 = wildcardClassItor18.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor20.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        int int23 = wildcardClassItor21.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        boolean boolean25 = wildcardClassItor24.hasNext();
        int int26 = wildcardClassItor24.previousIndex();
        int int27 = wildcardClassItor24.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor28 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor29 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor28.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor29);
        boolean boolean31 = wildcardClassItor29.hasPrevious();
        int int32 = wildcardClassItor29.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor33 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor34 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor33);
        int int35 = wildcardClassItor34.previousIndex();
        int int36 = wildcardClassItor34.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor37 = wildcardClassItor34.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor38 = wildcardClassItor34.getListIterator();
        wildcardClassItor29.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor38);
        int int40 = wildcardClassItor29.previousIndex();
        boolean boolean41 = wildcardClassItor29.hasPrevious();
        wildcardClassItor24.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor29);
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor29);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate44 = wildcardClassItor29.getPredicate();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(wildcardItor37);
        org.junit.Assert.assertNotNull(wildcardItor38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(wildcardPredicate44);
    }

    @Test
    public void test0790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0790");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        java.util.ListIterator<java.lang.Class<?>> wildcardClassItor13 = null;
        wildcardClassItor1.setListIterator(wildcardClassItor13);
        boolean boolean15 = wildcardClassItor1.hasNext();
        int int16 = wildcardClassItor1.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass17 = wildcardClassItor1.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test0791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0791");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate9 = wildcardClassItor0.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor10.getListIterator();
        int int12 = wildcardClassItor10.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass13 = wildcardClassItor10.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate9);
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test0792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0792");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean5 = wildcardClassItor4.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        int int7 = wildcardClassItor4.previousIndex();
        int int8 = wildcardClassItor4.nextIndex();
        int int9 = wildcardClassItor4.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass10 = wildcardClassItor4.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test0793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0793");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        boolean boolean9 = wildcardClassItor0.hasNext();
        int int10 = wildcardClassItor0.nextIndex();
        boolean boolean11 = wildcardClassItor0.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        boolean boolean13 = wildcardClassItor0.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor14 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate15 = wildcardClassItor0.getPredicate();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass16 = wildcardClassItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardItor14);
        org.junit.Assert.assertNull(wildcardPredicate15);
    }

    @Test
    public void test0794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0794");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor5.getPredicate();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        boolean boolean14 = wildcardClassItor13.hasNext();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int16 = wildcardClassItor0.previousIndex();
        java.lang.Class<?> wildcardClass17 = wildcardClassItor0.getClass();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate6);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0795");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Object> objItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Object>();
        // The following exception was thrown during execution in test generation
        try {
            objItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
    }

    @Test
    public void test0796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0796");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor4.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate7 = wildcardClassItor6.getPredicate();
        java.lang.Class<?> wildcardClass8 = wildcardClassItor6.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor5);
        org.junit.Assert.assertNull(wildcardPredicate7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0797");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int18 = wildcardClassItor8.previousIndex();
        int int19 = wildcardClassItor8.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor21 = wildcardClassItor20.getListIterator();
        java.lang.Class<?> wildcardClass22 = wildcardClassItor20.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(wildcardItor21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0798");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor7);
        int int9 = typeItor8.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor11.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        int int14 = wildcardClassItor12.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor17 = wildcardClassItor10.getListIterator();
        int int18 = wildcardClassItor10.previousIndex();
        boolean boolean19 = wildcardClassItor10.hasNext();
        int int20 = wildcardClassItor10.nextIndex();
        typeItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int22 = wildcardClassItor10.nextIndex();
        boolean boolean23 = wildcardClassItor10.hasPrevious();
        int int24 = wildcardClassItor10.previousIndex();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
    }

    @Test
    public void test0799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0799");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        int int7 = wildcardClassItor4.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor8 = wildcardClassItor4.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Object> objItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Object>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        boolean boolean10 = wildcardClassItor4.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass11 = wildcardClassItor4.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(wildcardItor8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0800");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Object> objItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Object>();
        int int1 = objItor0.previousIndex();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
    }

    @Test
    public void test0801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0801");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor4 = wildcardClassItor1.getListIterator();
        int int5 = wildcardClassItor1.nextIndex();
        boolean boolean6 = wildcardClassItor1.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        int int11 = wildcardClassItor9.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor14 = wildcardClassItor7.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor14);
        int int16 = typeItor15.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        int int21 = wildcardClassItor19.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        wildcardClassItor17.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor24 = wildcardClassItor17.getListIterator();
        int int25 = wildcardClassItor17.previousIndex();
        boolean boolean26 = wildcardClassItor17.hasNext();
        int int27 = wildcardClassItor17.nextIndex();
        typeItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        int int29 = wildcardClassItor17.nextIndex();
        int int30 = wildcardClassItor17.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor32 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor31);
        wildcardClassItor17.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor32);
        int int34 = wildcardClassItor17.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor35 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor36 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor35.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor36);
        boolean boolean38 = wildcardClassItor36.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor39 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor40 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor39.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor40);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor42 = wildcardClassItor40.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor43 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor44 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor45 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor44.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor45);
        int int47 = wildcardClassItor45.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor48 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor45);
        wildcardClassItor43.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor48);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor50 = wildcardClassItor43.getListIterator();
        wildcardClassItor40.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor43);
        wildcardClassItor36.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor43);
        int int53 = wildcardClassItor43.previousIndex();
        int int54 = wildcardClassItor43.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor55 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor43);
        wildcardClassItor17.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor43);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor43);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass58 = wildcardClassItor1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(wildcardItor4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(wildcardItor42);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
    }

    @Test
    public void test0802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0802");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate9 = wildcardClassItor0.getPredicate();
        int int10 = wildcardClassItor0.previousIndex();
        java.lang.Class<?> wildcardClass11 = wildcardClassItor0.getClass();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0803");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        boolean boolean6 = wildcardClassItor1.hasNext();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor8 = wildcardClassItor1.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass9 = wildcardClassItor1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertNull(wildcardItor8);
    }

    @Test
    public void test0804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0804");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        boolean boolean9 = wildcardClassItor0.hasNext();
        int int10 = wildcardClassItor0.nextIndex();
        boolean boolean11 = wildcardClassItor0.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor0.getListIterator();
        boolean boolean14 = wildcardClassItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass15 = wildcardClassItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItor13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0805");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        boolean boolean18 = wildcardClassItor8.hasPrevious();
        int int19 = wildcardClassItor8.previousIndex();
        int int20 = wildcardClassItor8.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor21 = wildcardClassItor8.getListIterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor21);
    }

    @Test
    public void test0806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0806");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate2 = wildcardClassItor1.getPredicate();
        boolean boolean3 = wildcardClassItor1.hasNext();
        org.junit.Assert.assertNull(wildcardPredicate2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test0807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0807");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor7);
        int int9 = typeItor8.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor11.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        int int14 = wildcardClassItor12.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor17 = wildcardClassItor10.getListIterator();
        int int18 = wildcardClassItor10.previousIndex();
        boolean boolean19 = wildcardClassItor10.hasNext();
        int int20 = wildcardClassItor10.nextIndex();
        typeItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int22 = typeItor8.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate23 = typeItor8.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor25 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor26 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor25.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        int int28 = wildcardClassItor26.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor29 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        wildcardClassItor24.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor29);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor31 = wildcardClassItor24.getListIterator();
        int int32 = wildcardClassItor24.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor33 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor34 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor33.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor34);
        int int36 = wildcardClassItor34.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor37 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor34);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate38 = wildcardClassItor37.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor39 = wildcardClassItor37.getListIterator();
        wildcardClassItor24.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor37);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor41 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor37);
        int int42 = wildcardClassItor41.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor43 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor41);
        typeItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor41);
        int int45 = wildcardClassItor41.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass46 = wildcardClassItor41.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate38);
        org.junit.Assert.assertNotNull(wildcardItor39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
    }

    @Test
    public void test0808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0808");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        int int7 = wildcardClassItor4.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor8 = wildcardClassItor4.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        int int17 = wildcardClassItor15.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        boolean boolean19 = wildcardClassItor18.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor21.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        int int24 = wildcardClassItor22.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor25 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        boolean boolean26 = wildcardClassItor25.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        int int28 = wildcardClassItor25.previousIndex();
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor30 = wildcardClassItor25.getListIterator();
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor33 = wildcardClassItor25.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor25.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(wildcardItor8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor30);
        org.junit.Assert.assertNotNull(wildcardItor33);
    }

    @Test
    public void test0809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0809");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor4.getListIterator();
        int int6 = wildcardClassItor4.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int9 = wildcardClassItor8.previousIndex();
        int int10 = wildcardClassItor8.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate11 = wildcardClassItor8.getPredicate();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int13 = wildcardClassItor4.previousIndex();
        int int14 = wildcardClassItor4.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor4.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test0810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0810");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean5 = wildcardClassItor4.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        int int7 = wildcardClassItor4.previousIndex();
        java.lang.Class<?> wildcardClass8 = wildcardClassItor4.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0811");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean5 = wildcardClassItor4.hasNext();
        int int6 = wildcardClassItor4.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor4.getListIterator();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
    }

    @Test
    public void test0812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0812");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        java.util.ListIterator<java.lang.Class<?>> wildcardClassItor13 = null;
        wildcardClassItor1.setListIterator(wildcardClassItor13);
        int int15 = wildcardClassItor1.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test0813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0813");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        int int11 = wildcardClassItor9.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor14 = wildcardClassItor7.getListIterator();
        boolean boolean15 = wildcardClassItor7.hasPrevious();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int17 = wildcardClassItor7.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate18 = wildcardClassItor7.getPredicate();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(wildcardPredicate18);
    }

    @Test
    public void test0814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0814");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        int int4 = wildcardClassItor1.nextIndex();
        int int5 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.lang.Class<?> wildcardClass7 = wildcardClassItor1.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0815");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        boolean boolean2 = wildcardClassItor1.hasPrevious();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0816");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        int int11 = wildcardClassItor9.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor14 = wildcardClassItor7.getListIterator();
        boolean boolean15 = wildcardClassItor7.hasPrevious();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        boolean boolean17 = wildcardClassItor5.hasNext();
        boolean boolean18 = wildcardClassItor5.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass20 = wildcardClassItor19.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0817");
        java.util.ListIterator<java.lang.Class<?>> wildcardClassItor0 = null;
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>(wildcardClassItor0);
        boolean boolean2 = wildcardClassItor1.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor3 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor3);
        int int5 = wildcardClassItor4.previousIndex();
        int int6 = wildcardClassItor4.previousIndex();
        boolean boolean7 = wildcardClassItor4.hasNext();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate8 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = wildcardClassItor13.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        int int16 = wildcardClassItor13.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        java.lang.Class<?> wildcardClass20 = wildcardClassItor4.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(wildcardPredicate8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate14);
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0818");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        int int18 = wildcardClassItor16.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor21 = wildcardClassItor14.getListIterator();
        int int22 = wildcardClassItor14.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor23.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        int int26 = wildcardClassItor24.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate28 = wildcardClassItor27.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor29 = wildcardClassItor27.getListIterator();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        int int32 = wildcardClassItor31.nextIndex();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor31);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor34 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor35 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor34.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor35);
        int int37 = wildcardClassItor35.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate38 = wildcardClassItor35.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor39 = wildcardClassItor35.getListIterator();
        boolean boolean40 = wildcardClassItor35.hasNext();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor41 = wildcardClassItor35.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor42 = wildcardClassItor35.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate43 = wildcardClassItor35.getPredicate();
        boolean boolean44 = wildcardClassItor35.hasPrevious();
        boolean boolean45 = wildcardClassItor35.hasPrevious();
        wildcardClassItor31.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor35);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass47 = wildcardClassItor31.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertNotNull(wildcardItor13);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate28);
        org.junit.Assert.assertNotNull(wildcardItor29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate38);
        org.junit.Assert.assertNull(wildcardItor39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(wildcardItor41);
        org.junit.Assert.assertNull(wildcardItor42);
        org.junit.Assert.assertNull(wildcardPredicate43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test0819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0819");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean5 = wildcardClassItor4.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        int int7 = wildcardClassItor4.previousIndex();
        boolean boolean8 = wildcardClassItor4.hasNext();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor9 = wildcardClassItor4.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor9);
        int int11 = wildcardClassItor10.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass13 = wildcardClassItor10.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardItor9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test0820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0820");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean5 = wildcardClassItor4.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int10 = wildcardClassItor8.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        boolean boolean12 = wildcardClassItor11.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        int int14 = wildcardClassItor11.previousIndex();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        boolean boolean16 = wildcardClassItor4.hasPrevious();
        java.lang.Class<?> wildcardClass17 = wildcardClassItor4.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0821");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        int int14 = wildcardClassItor4.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor4.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test0822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0822");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        int int5 = wildcardClassItor1.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass6 = wildcardClassItor1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
    }

    @Test
    public void test0823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0823");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = wildcardClassItor13.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        boolean boolean17 = wildcardClassItor0.hasNext();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor18 = wildcardClassItor0.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass19 = wildcardClassItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate14);
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItor18);
    }

    @Test
    public void test0824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0824");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.io.Serializable> serializableItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.io.Serializable>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor6.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int9 = wildcardClassItor7.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor12 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor12);
        int int14 = typeItor13.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor16.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        int int19 = wildcardClassItor17.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        wildcardClassItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor22 = wildcardClassItor15.getListIterator();
        int int23 = wildcardClassItor15.previousIndex();
        boolean boolean24 = wildcardClassItor15.hasNext();
        int int25 = wildcardClassItor15.nextIndex();
        typeItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        boolean boolean27 = wildcardClassItor15.hasNext();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test0825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0825");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate1 = wildcardClassItor0.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor2 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Object> objItor3 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Object>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor2);
        // The following exception was thrown during execution in test generation
        try {
            objItor3.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardPredicate1);
        org.junit.Assert.assertNull(wildcardItor2);
    }

    @Test
    public void test0826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0826");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        int int4 = wildcardClassItor1.nextIndex();
        java.lang.Class<?> wildcardClass5 = wildcardClassItor1.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0827");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.previousIndex();
        boolean boolean4 = wildcardClassItor1.hasNext();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor6.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int9 = wildcardClassItor7.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate11 = wildcardClassItor10.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor12 = wildcardClassItor10.getListIterator();
        int int13 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor16.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        int int19 = wildcardClassItor17.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate21 = wildcardClassItor20.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        int int23 = wildcardClassItor20.nextIndex();
        int int24 = wildcardClassItor20.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor25 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor26 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        int int27 = wildcardClassItor26.previousIndex();
        int int28 = wildcardClassItor26.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate29 = wildcardClassItor26.getPredicate();
        int int30 = wildcardClassItor26.previousIndex();
        boolean boolean31 = wildcardClassItor26.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor32 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor33 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor32.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor33);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor35 = wildcardClassItor33.getListIterator();
        boolean boolean36 = wildcardClassItor33.hasNext();
        wildcardClassItor26.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor33);
        wildcardClassItor20.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor33);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor39 = wildcardClassItor20.getListIterator();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor39);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate11);
        org.junit.Assert.assertNotNull(wildcardItor12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNull(wildcardPredicate29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(wildcardItor35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardItor39);
    }

    @Test
    public void test0828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0828");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        boolean boolean18 = wildcardClassItor8.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor20.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        int int23 = wildcardClassItor21.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        wildcardClassItor19.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor26 = wildcardClassItor19.getListIterator();
        int int27 = wildcardClassItor19.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate28 = wildcardClassItor19.getPredicate();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        int int30 = wildcardClassItor8.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass31 = wildcardClassItor8.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
    }

    @Test
    public void test0829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0829");
        java.util.ListIterator<java.lang.Class<?>> wildcardClassItor0 = null;
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>(wildcardClassItor0);
        boolean boolean2 = wildcardClassItor1.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass3 = wildcardClassItor1.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0830");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = wildcardClassItor13.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int17 = wildcardClassItor13.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        int int21 = wildcardClassItor19.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate23 = wildcardClassItor22.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        int int25 = wildcardClassItor22.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor26 = wildcardClassItor22.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor28 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor27.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor28);
        int int30 = wildcardClassItor28.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor28);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor32 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor33 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor32.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor33);
        int int35 = wildcardClassItor33.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor36 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor33);
        boolean boolean37 = wildcardClassItor36.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor38 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor36);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor39 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor40 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor39.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor40);
        int int42 = wildcardClassItor40.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor43 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor40);
        boolean boolean44 = wildcardClassItor43.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor45 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor43);
        int int46 = wildcardClassItor43.previousIndex();
        wildcardClassItor36.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor43);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor48 = wildcardClassItor43.getListIterator();
        wildcardClassItor28.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor43);
        wildcardClassItor22.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor43);
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor43);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass52 = wildcardClassItor43.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate14);
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(wildcardItor26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor48);
    }

    @Test
    public void test0831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0831");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor3 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        boolean boolean4 = wildcardClassItor3.hasPrevious();
        boolean boolean5 = wildcardClassItor3.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor3.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0832");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor4 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate7 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor9.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        int int16 = wildcardClassItor14.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        wildcardClassItor12.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor19 = wildcardClassItor12.getListIterator();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        int int24 = wildcardClassItor23.previousIndex();
        int int25 = wildcardClassItor23.previousIndex();
        boolean boolean26 = wildcardClassItor23.hasNext();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate27 = wildcardClassItor23.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor28 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor29 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor28.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor29);
        int int31 = wildcardClassItor29.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor32 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor29);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate33 = wildcardClassItor32.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor34 = wildcardClassItor32.getListIterator();
        int int35 = wildcardClassItor32.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor36 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor32);
        wildcardClassItor23.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor36);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor23);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor39 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor40 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor39.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor40);
        int int42 = wildcardClassItor40.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor43 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor40);
        boolean boolean44 = wildcardClassItor43.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor45 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor43);
        int int46 = wildcardClassItor43.previousIndex();
        boolean boolean47 = wildcardClassItor43.hasNext();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor48 = wildcardClassItor43.getListIterator();
        int int49 = wildcardClassItor43.nextIndex();
        int int50 = wildcardClassItor43.previousIndex();
        int int51 = wildcardClassItor43.previousIndex();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor43);
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertNull(wildcardItor4);
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNull(wildcardPredicate7);
        org.junit.Assert.assertNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor19);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(wildcardPredicate27);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate33);
        org.junit.Assert.assertNotNull(wildcardItor34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardItor48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
    }

    @Test
    public void test0833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0833");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate1 = wildcardClassItor0.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor2 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor3 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        int int7 = wildcardClassItor5.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        wildcardClassItor3.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor10 = wildcardClassItor3.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor10);
        int int12 = typeItor11.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        int int17 = wildcardClassItor15.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor20 = wildcardClassItor13.getListIterator();
        int int21 = wildcardClassItor13.previousIndex();
        boolean boolean22 = wildcardClassItor13.hasNext();
        int int23 = wildcardClassItor13.nextIndex();
        typeItor11.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int25 = wildcardClassItor13.nextIndex();
        int int26 = wildcardClassItor13.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor28 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor28);
        int int30 = wildcardClassItor13.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor32 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor31.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor32);
        boolean boolean34 = wildcardClassItor32.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor35 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor36 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor35.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor36);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor38 = wildcardClassItor36.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor39 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor40 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor41 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor40.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor41);
        int int43 = wildcardClassItor41.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor44 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor41);
        wildcardClassItor39.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor44);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor46 = wildcardClassItor39.getListIterator();
        wildcardClassItor36.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor39);
        wildcardClassItor32.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor39);
        int int49 = wildcardClassItor39.previousIndex();
        int int50 = wildcardClassItor39.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor51 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor39);
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor39);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor54 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor55 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor56 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor55.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor56);
        int int58 = wildcardClassItor56.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor59 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor56);
        wildcardClassItor54.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor59);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor61 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor62 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor63 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor62.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor63);
        int int65 = wildcardClassItor63.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor66 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor63);
        wildcardClassItor61.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor66);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor68 = wildcardClassItor61.getListIterator();
        boolean boolean69 = wildcardClassItor61.hasPrevious();
        wildcardClassItor59.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor61);
        boolean boolean71 = wildcardClassItor61.hasNext();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor61);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass73 = wildcardClassItor13.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardPredicate1);
        org.junit.Assert.assertNull(wildcardItor2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(wildcardItor38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test0834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0834");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        int int5 = wildcardClassItor1.nextIndex();
        boolean boolean6 = wildcardClassItor1.hasNext();
        boolean boolean7 = wildcardClassItor1.hasNext();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate8 = wildcardClassItor1.getPredicate();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(wildcardPredicate8);
    }

    @Test
    public void test0835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0835");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate2 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor3 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean4 = wildcardClassItor1.hasPrevious();
        boolean boolean5 = wildcardClassItor1.hasNext();
        org.junit.Assert.assertNull(wildcardPredicate2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0836");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        boolean boolean19 = wildcardClassItor18.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor20.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        int int23 = wildcardClassItor21.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        boolean boolean25 = wildcardClassItor24.hasNext();
        int int26 = wildcardClassItor24.previousIndex();
        int int27 = wildcardClassItor24.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor28 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor29 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor28.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor29);
        boolean boolean31 = wildcardClassItor29.hasPrevious();
        int int32 = wildcardClassItor29.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor33 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor34 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor33);
        int int35 = wildcardClassItor34.previousIndex();
        int int36 = wildcardClassItor34.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor37 = wildcardClassItor34.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor38 = wildcardClassItor34.getListIterator();
        wildcardClassItor29.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor38);
        int int40 = wildcardClassItor29.previousIndex();
        boolean boolean41 = wildcardClassItor29.hasPrevious();
        wildcardClassItor24.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor29);
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor29);
        boolean boolean44 = wildcardClassItor18.hasPrevious();
        int int45 = wildcardClassItor18.nextIndex();
        java.lang.Class<?> wildcardClass46 = wildcardClassItor18.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(wildcardItor37);
        org.junit.Assert.assertNotNull(wildcardItor38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0837");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        int int7 = wildcardClassItor4.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor8 = wildcardClassItor4.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        int int17 = wildcardClassItor15.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        boolean boolean19 = wildcardClassItor18.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor21.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        int int24 = wildcardClassItor22.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor25 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        boolean boolean26 = wildcardClassItor25.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        int int28 = wildcardClassItor25.previousIndex();
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor30 = wildcardClassItor25.getListIterator();
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor33 = wildcardClassItor25.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor25.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(wildcardItor8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor30);
        org.junit.Assert.assertNotNull(wildcardItor33);
    }

    @Test
    public void test0838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0838");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate19 = wildcardClassItor18.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        int int21 = wildcardClassItor18.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor18.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertNull(wildcardPredicate19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
    }

    @Test
    public void test0839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0839");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor4 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate7 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor9.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        int int16 = wildcardClassItor14.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        wildcardClassItor12.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor19 = wildcardClassItor12.getListIterator();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass22 = wildcardClassItor9.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertNull(wildcardItor4);
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNull(wildcardPredicate7);
        org.junit.Assert.assertNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor19);
    }

    @Test
    public void test0840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0840");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean5 = wildcardClassItor4.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        int int7 = wildcardClassItor4.previousIndex();
        int int8 = wildcardClassItor4.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor9 = wildcardClassItor4.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor9);
        java.lang.Class<?> wildcardClass11 = wildcardClassItor10.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(wildcardItor9);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0841");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate1 = wildcardClassItor0.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor2 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Object> objItor3 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Object>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor2);
        boolean boolean4 = objItor3.hasNext();
        org.junit.Assert.assertNull(wildcardPredicate1);
        org.junit.Assert.assertNull(wildcardItor2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0842");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor4 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate7 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor9.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        int int16 = wildcardClassItor14.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        wildcardClassItor12.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor19 = wildcardClassItor12.getListIterator();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor22 = wildcardClassItor9.getListIterator();
        boolean boolean23 = wildcardClassItor9.hasPrevious();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate24 = wildcardClassItor9.getPredicate();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertNull(wildcardItor4);
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNull(wildcardPredicate7);
        org.junit.Assert.assertNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor19);
        org.junit.Assert.assertNotNull(wildcardItor22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(wildcardPredicate24);
    }

    @Test
    public void test0843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0843");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        int int1 = wildcardClassItor0.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor2 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.GenericDeclaration> genericDeclarationItor3 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.GenericDeclaration>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor2);
        int int4 = genericDeclarationItor3.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = genericDeclarationItor3.getPredicate();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(wildcardItor2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
    }

    @Test
    public void test0844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0844");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        boolean boolean13 = wildcardClassItor1.hasNext();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0845");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate9 = wildcardClassItor0.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int11 = wildcardClassItor10.previousIndex();
        int int12 = wildcardClassItor10.previousIndex();
        int int13 = wildcardClassItor10.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor14.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test0846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0846");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor0.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        boolean boolean7 = wildcardClassItor5.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor9.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        int int16 = wildcardClassItor14.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        wildcardClassItor12.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor19 = wildcardClassItor12.getListIterator();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        int int23 = wildcardClassItor12.previousIndex();
        int int24 = wildcardClassItor12.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor25 = wildcardClassItor12.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor26 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(wildcardItor25);
    }

    @Test
    public void test0847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0847");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor6 = wildcardClassItor4.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor4.getListIterator();
        int int8 = wildcardClassItor4.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor9 = wildcardClassItor4.getListIterator();
        boolean boolean10 = wildcardClassItor4.hasPrevious();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNotNull(wildcardItor6);
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(wildcardItor9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0848");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        int int4 = wildcardClassItor1.nextIndex();
        boolean boolean5 = wildcardClassItor1.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor6.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int9 = wildcardClassItor7.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor7.getListIterator();
        int int12 = wildcardClassItor7.previousIndex();
        int int13 = wildcardClassItor7.previousIndex();
        boolean boolean14 = wildcardClassItor7.hasPrevious();
        boolean boolean15 = wildcardClassItor7.hasNext();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        boolean boolean17 = wildcardClassItor7.hasPrevious();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0849");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor7);
        int int9 = typeItor8.nextIndex();
        int int10 = typeItor8.previousIndex();
        boolean boolean11 = typeItor8.hasNext();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate12 = typeItor8.getPredicate();
        boolean boolean13 = typeItor8.hasPrevious();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = typeItor8.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor18 = wildcardClassItor15.getListIterator();
        typeItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor18);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor21.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        int int24 = wildcardClassItor22.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor25 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        wildcardClassItor20.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor27 = wildcardClassItor20.getListIterator();
        int int28 = wildcardClassItor20.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor29 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor30 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor29.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor30);
        int int32 = wildcardClassItor30.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor33 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor30);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate34 = wildcardClassItor33.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor35 = wildcardClassItor33.getListIterator();
        wildcardClassItor20.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor33);
        typeItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor33);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardPredicate12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardPredicate14);
        org.junit.Assert.assertNotNull(wildcardItor18);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate34);
        org.junit.Assert.assertNotNull(wildcardItor35);
    }

    @Test
    public void test0850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0850");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        int int18 = wildcardClassItor16.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor21 = wildcardClassItor14.getListIterator();
        int int22 = wildcardClassItor14.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor23.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        int int26 = wildcardClassItor24.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate28 = wildcardClassItor27.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor29 = wildcardClassItor27.getListIterator();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        int int32 = wildcardClassItor31.nextIndex();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor31);
        boolean boolean34 = wildcardClassItor1.hasPrevious();
        int int35 = wildcardClassItor1.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass36 = wildcardClassItor1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertNotNull(wildcardItor13);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate28);
        org.junit.Assert.assertNotNull(wildcardItor29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
    }

    @Test
    public void test0851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0851");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean5 = wildcardClassItor4.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        int int7 = wildcardClassItor4.previousIndex();
        boolean boolean8 = wildcardClassItor4.hasNext();
        boolean boolean9 = wildcardClassItor4.hasPrevious();
        java.lang.Class<?> wildcardClass10 = wildcardClassItor4.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0852");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        boolean boolean13 = wildcardClassItor4.hasPrevious();
        int int14 = wildcardClassItor4.nextIndex();
        int int15 = wildcardClassItor4.nextIndex();
        boolean boolean16 = wildcardClassItor4.hasPrevious();
        int int17 = wildcardClassItor4.previousIndex();
        java.lang.Class<?> wildcardClass18 = wildcardClassItor4.getClass();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0853");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.previousIndex();
        boolean boolean4 = wildcardClassItor1.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0854");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        boolean boolean10 = wildcardClassItor9.hasNext();
        int int11 = wildcardClassItor9.previousIndex();
        boolean boolean12 = wildcardClassItor9.hasNext();
        int int13 = wildcardClassItor9.nextIndex();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        int int15 = wildcardClassItor9.nextIndex();
        int int16 = wildcardClassItor9.nextIndex();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test0855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0855");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        int int6 = wildcardClassItor1.previousIndex();
        int int7 = wildcardClassItor1.previousIndex();
        boolean boolean8 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.lang.Class<?> wildcardClass13 = wildcardClassItor9.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0856");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        boolean boolean5 = wildcardClassItor1.hasPrevious();
        int int6 = wildcardClassItor1.previousIndex();
        boolean boolean7 = wildcardClassItor1.hasPrevious();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0857");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor4 = wildcardClassItor1.getListIterator();
        boolean boolean5 = wildcardClassItor1.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(wildcardItor4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0858");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean5 = wildcardClassItor4.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass7 = wildcardClassItor4.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0859");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        boolean boolean7 = wildcardClassItor5.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass8 = wildcardClassItor5.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0860");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor5.getPredicate();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        int int8 = wildcardClassItor5.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass9 = wildcardClassItor5.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test0861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0861");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.previousIndex();
        boolean boolean4 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor1.getPredicate();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(wildcardPredicate5);
    }

    @Test
    public void test0862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0862");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = wildcardClassItor13.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int18 = wildcardClassItor17.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        int int20 = wildcardClassItor17.previousIndex();
        boolean boolean21 = wildcardClassItor17.hasNext();
        int int22 = wildcardClassItor17.nextIndex();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate14);
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test0863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0863");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate7 = wildcardClassItor6.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor8 = wildcardClassItor6.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor6.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNull(wildcardPredicate7);
        org.junit.Assert.assertNotNull(wildcardItor8);
    }

    @Test
    public void test0864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0864");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        boolean boolean6 = wildcardClassItor1.hasNext();
        int int7 = wildcardClassItor1.nextIndex();
        int int8 = wildcardClassItor1.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test0865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0865");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int9 = wildcardClassItor8.previousIndex();
        int int10 = wildcardClassItor8.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor8.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor12 = wildcardClassItor8.getListIterator();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        boolean boolean14 = wildcardClassItor4.hasNext();
        java.lang.Class<?> wildcardClass15 = wildcardClassItor4.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNull(wildcardPredicate6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertNotNull(wildcardItor12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0866");
        org.apache.commons.collections4.iterators.FilterListIterator<java.util.Iterator<java.lang.Class<?>>> wildcardClassItorItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.util.Iterator<java.lang.Class<?>>>();
        int int1 = wildcardClassItorItor0.nextIndex();
        int int2 = wildcardClassItorItor0.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItorItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test0867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0867");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = wildcardClassItor13.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int18 = wildcardClassItor17.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        int int22 = wildcardClassItor19.nextIndex();
        int int23 = wildcardClassItor19.nextIndex();
        wildcardClassItor17.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate25 = wildcardClassItor17.getPredicate();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate14);
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(wildcardPredicate25);
    }

    @Test
    public void test0868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0868");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor7);
        int int9 = typeItor8.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor11.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        int int14 = wildcardClassItor12.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor17 = wildcardClassItor10.getListIterator();
        int int18 = wildcardClassItor10.previousIndex();
        boolean boolean19 = wildcardClassItor10.hasNext();
        int int20 = wildcardClassItor10.nextIndex();
        typeItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor22.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor23);
        int int25 = wildcardClassItor23.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor26 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor23);
        boolean boolean27 = wildcardClassItor26.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor28 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor29 = wildcardClassItor26.getListIterator();
        typeItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor29);
        boolean boolean31 = typeItor8.hasPrevious();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardItor29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test0869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0869");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        boolean boolean7 = wildcardClassItor5.hasNext();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate8 = wildcardClassItor5.getPredicate();
        boolean boolean9 = wildcardClassItor5.hasNext();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(wildcardPredicate8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0870");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        int int4 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        int int7 = wildcardClassItor6.previousIndex();
        int int8 = wildcardClassItor6.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor9 = wildcardClassItor6.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor10 = wildcardClassItor6.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor10);
        int int12 = wildcardClassItor1.previousIndex();
        java.lang.Class<?> wildcardClass13 = wildcardClassItor1.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(wildcardItor9);
        org.junit.Assert.assertNotNull(wildcardItor10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0871");
        org.apache.commons.collections4.iterators.FilterListIterator<org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>> wildcardClassItorItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>>();
        int int1 = wildcardClassItorItor0.nextIndex();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
    }

    @Test
    public void test0872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0872");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = wildcardClassItor13.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int17 = wildcardClassItor13.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        int int21 = wildcardClassItor19.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate23 = wildcardClassItor22.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        int int25 = wildcardClassItor22.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor26 = wildcardClassItor22.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor28 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor27.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor28);
        int int30 = wildcardClassItor28.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor28);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor32 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor33 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor32.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor33);
        int int35 = wildcardClassItor33.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor36 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor33);
        boolean boolean37 = wildcardClassItor36.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor38 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor36);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor39 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor40 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor39.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor40);
        int int42 = wildcardClassItor40.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor43 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor40);
        boolean boolean44 = wildcardClassItor43.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor45 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor43);
        int int46 = wildcardClassItor43.previousIndex();
        wildcardClassItor36.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor43);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor48 = wildcardClassItor43.getListIterator();
        wildcardClassItor28.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor43);
        wildcardClassItor22.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor43);
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor43);
        boolean boolean52 = wildcardClassItor13.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor13.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate14);
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(wildcardItor26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test0873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0873");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        boolean boolean9 = wildcardClassItor0.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        int int13 = wildcardClassItor11.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = wildcardClassItor11.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor11.getListIterator();
        boolean boolean16 = wildcardClassItor11.hasNext();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor17 = wildcardClassItor11.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate18 = wildcardClassItor11.getPredicate();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate14);
        org.junit.Assert.assertNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(wildcardItor17);
        org.junit.Assert.assertNull(wildcardPredicate18);
    }

    @Test
    public void test0874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0874");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor4 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor1.getPredicate();
        int int6 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int10 = wildcardClassItor8.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate11 = wildcardClassItor8.getPredicate();
        boolean boolean12 = wildcardClassItor8.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor8.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor13);
        int int15 = wildcardClassItor1.nextIndex();
        int int16 = wildcardClassItor1.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass17 = wildcardClassItor1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertNull(wildcardItor4);
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(wildcardItor13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test0875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0875");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int19 = wildcardClassItor18.nextIndex();
        boolean boolean20 = wildcardClassItor18.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor21.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor24 = wildcardClassItor22.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor25 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor26 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor26.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        int int29 = wildcardClassItor27.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor30 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        wildcardClassItor25.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor30);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor32 = wildcardClassItor25.getListIterator();
        wildcardClassItor22.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor34 = wildcardClassItor25.getListIterator();
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        int int36 = wildcardClassItor25.previousIndex();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardItor24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor32);
        org.junit.Assert.assertNotNull(wildcardItor34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
    }

    @Test
    public void test0876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0876");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor4 = wildcardClassItor1.getListIterator();
        int int5 = wildcardClassItor1.nextIndex();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertNull(wildcardItor4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test0877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0877");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor7);
        int int9 = typeItor8.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        boolean boolean13 = wildcardClassItor11.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor17 = wildcardClassItor15.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor19.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        int int22 = wildcardClassItor20.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor23);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor25 = wildcardClassItor18.getListIterator();
        wildcardClassItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        wildcardClassItor11.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor28 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        int int29 = wildcardClassItor18.previousIndex();
        int int30 = wildcardClassItor18.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor31 = wildcardClassItor18.getListIterator();
        typeItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor31);
        int int33 = typeItor8.previousIndex();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardItor17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(wildcardItor31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
    }

    @Test
    public void test0878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0878");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        int int11 = wildcardClassItor9.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor14 = wildcardClassItor7.getListIterator();
        boolean boolean15 = wildcardClassItor7.hasPrevious();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int17 = wildcardClassItor7.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor18 = wildcardClassItor7.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate19 = wildcardClassItor7.getPredicate();
        boolean boolean20 = wildcardClassItor7.hasPrevious();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(wildcardItor18);
        org.junit.Assert.assertNull(wildcardPredicate19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test0879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0879");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        int int4 = wildcardClassItor1.nextIndex();
        int int5 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int7 = wildcardClassItor6.previousIndex();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test0880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0880");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        boolean boolean16 = wildcardClassItor14.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor17.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor20 = wildcardClassItor18.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor22.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor23);
        int int25 = wildcardClassItor23.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor26 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor23);
        wildcardClassItor21.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor28 = wildcardClassItor21.getListIterator();
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        int int32 = wildcardClassItor21.previousIndex();
        int int33 = wildcardClassItor21.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor34 = wildcardClassItor21.getListIterator();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor34);
        java.lang.Class<?> wildcardClass36 = wildcardItor34.getClass();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(wildcardItor20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(wildcardItor34);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0881");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate19 = wildcardClassItor8.getPredicate();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass20 = wildcardClassItor8.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertNull(wildcardPredicate19);
    }

    @Test
    public void test0882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0882");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate19 = wildcardClassItor8.getPredicate();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass20 = wildcardPredicate19.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertNull(wildcardPredicate19);
    }

    @Test
    public void test0883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0883");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        int int5 = wildcardClassItor1.previousIndex();
        boolean boolean6 = wildcardClassItor1.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass7 = wildcardClassItor1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0884");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Object> objItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Object>();
        int int1 = objItor0.nextIndex();
        boolean boolean2 = objItor0.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor3 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor3);
        int int5 = wildcardClassItor4.previousIndex();
        int int6 = wildcardClassItor4.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate7 = wildcardClassItor4.getPredicate();
        int int8 = wildcardClassItor4.previousIndex();
        boolean boolean9 = wildcardClassItor4.hasNext();
        int int10 = wildcardClassItor4.previousIndex();
        objItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor12.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int15 = wildcardClassItor13.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate17 = wildcardClassItor16.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        int int19 = wildcardClassItor16.nextIndex();
        int int20 = wildcardClassItor16.previousIndex();
        int int21 = wildcardClassItor16.nextIndex();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass23 = wildcardClassItor4.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(wildcardPredicate7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test0885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0885");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate1 = wildcardClassItor0.getPredicate();
        boolean boolean2 = wildcardClassItor0.hasNext();
        java.util.ListIterator<java.lang.Class<?>> wildcardClassItor3 = null;
        wildcardClassItor0.setListIterator(wildcardClassItor3);
        int int5 = wildcardClassItor0.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardPredicate1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
    }

    @Test
    public void test0886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0886");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int19 = wildcardClassItor18.nextIndex();
        boolean boolean20 = wildcardClassItor18.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor21.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor24 = wildcardClassItor22.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor25 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor26 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor26.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        int int29 = wildcardClassItor27.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor30 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        wildcardClassItor25.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor30);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor32 = wildcardClassItor25.getListIterator();
        wildcardClassItor22.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor34 = wildcardClassItor25.getListIterator();
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        boolean boolean36 = wildcardClassItor18.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass37 = wildcardClassItor18.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardItor24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor32);
        org.junit.Assert.assertNotNull(wildcardItor34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test0887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0887");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor4.getPredicate();
        int int7 = wildcardClassItor4.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate8 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        java.lang.Class<?> wildcardClass10 = wildcardClassItor4.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNull(wildcardPredicate6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(wildcardPredicate8);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0888");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor6.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int9 = wildcardClassItor7.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        boolean boolean11 = wildcardClassItor10.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int13 = wildcardClassItor10.previousIndex();
        boolean boolean14 = wildcardClassItor10.hasNext();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor10.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass17 = wildcardClassItor10.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardItor15);
    }

    @Test
    public void test0889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0889");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean5 = wildcardClassItor4.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int10 = wildcardClassItor8.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        boolean boolean12 = wildcardClassItor11.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        int int14 = wildcardClassItor11.previousIndex();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        boolean boolean16 = wildcardClassItor4.hasPrevious();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test0890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0890");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        boolean boolean17 = wildcardClassItor15.hasPrevious();
        int int18 = wildcardClassItor15.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        int int21 = wildcardClassItor20.previousIndex();
        int int22 = wildcardClassItor20.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor23 = wildcardClassItor20.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor24 = wildcardClassItor20.getListIterator();
        wildcardClassItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor24);
        int int26 = wildcardClassItor15.previousIndex();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        int int28 = wildcardClassItor13.nextIndex();
        boolean boolean29 = wildcardClassItor13.hasPrevious();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(wildcardItor23);
        org.junit.Assert.assertNotNull(wildcardItor24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test0891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0891");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor7);
        int int9 = typeItor8.nextIndex();
        int int10 = typeItor8.nextIndex();
        int int11 = typeItor8.previousIndex();
        int int12 = typeItor8.nextIndex();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test0892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0892");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        boolean boolean14 = wildcardClassItor13.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor16.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        int int19 = wildcardClassItor17.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        wildcardClassItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor22 = wildcardClassItor15.getListIterator();
        int int23 = wildcardClassItor15.previousIndex();
        boolean boolean24 = wildcardClassItor15.hasNext();
        int int25 = wildcardClassItor15.nextIndex();
        boolean boolean26 = wildcardClassItor15.hasNext();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor28 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        boolean boolean29 = wildcardClassItor28.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass30 = wildcardClassItor28.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test0893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0893");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor7);
        int int9 = typeItor8.nextIndex();
        int int10 = typeItor8.previousIndex();
        boolean boolean11 = typeItor8.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor12.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor17.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        int int20 = wildcardClassItor18.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        wildcardClassItor16.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor23 = wildcardClassItor16.getListIterator();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor25 = wildcardClassItor16.getListIterator();
        typeItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        boolean boolean27 = wildcardClassItor16.hasPrevious();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor23);
        org.junit.Assert.assertNotNull(wildcardItor25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test0894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0894");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        boolean boolean7 = wildcardClassItor5.hasPrevious();
        boolean boolean8 = wildcardClassItor5.hasNext();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0895");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        boolean boolean18 = wildcardClassItor8.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor20.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        int int23 = wildcardClassItor21.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        wildcardClassItor19.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor26 = wildcardClassItor19.getListIterator();
        int int27 = wildcardClassItor19.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate28 = wildcardClassItor19.getPredicate();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        boolean boolean30 = wildcardClassItor19.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor32 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor31);
        int int33 = wildcardClassItor32.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor34 = wildcardClassItor32.getListIterator();
        int int35 = wildcardClassItor32.nextIndex();
        wildcardClassItor19.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor32);
        boolean boolean37 = wildcardClassItor32.hasNext();
        boolean boolean38 = wildcardClassItor32.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor32.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test0896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0896");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor6 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int9 = wildcardClassItor8.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor10 = wildcardClassItor8.getListIterator();
        int int11 = wildcardClassItor8.nextIndex();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int14 = wildcardClassItor13.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertNotNull(wildcardItor6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(wildcardItor15);
    }

    @Test
    public void test0897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0897");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        int int4 = wildcardClassItor1.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor1.getPredicate();
        int int7 = wildcardClassItor1.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass8 = wildcardClassItor1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(wildcardItor5);
        org.junit.Assert.assertNull(wildcardPredicate6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test0898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0898");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.previousIndex();
        boolean boolean4 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor8 = wildcardClassItor5.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.lang.Class<?> wildcardClass11 = wildcardClassItor1.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardItor8);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0899");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int19 = wildcardClassItor18.nextIndex();
        boolean boolean20 = wildcardClassItor18.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor21.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor24 = wildcardClassItor22.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor25 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor26 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor26.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        int int29 = wildcardClassItor27.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor30 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        wildcardClassItor25.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor30);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor32 = wildcardClassItor25.getListIterator();
        wildcardClassItor22.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor34 = wildcardClassItor25.getListIterator();
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        boolean boolean36 = wildcardClassItor25.hasNext();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor37 = wildcardClassItor25.getListIterator();
        java.lang.Class<?> wildcardClass38 = wildcardClassItor25.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardItor24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor32);
        org.junit.Assert.assertNotNull(wildcardItor34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardItor37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0900");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor7);
        int int9 = typeItor8.nextIndex();
        int int10 = typeItor8.previousIndex();
        boolean boolean11 = typeItor8.hasNext();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate12 = typeItor8.getPredicate();
        int int13 = typeItor8.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = typeItor8.getPredicate();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardPredicate12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate14);
    }

    @Test
    public void test0901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0901");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor5.getPredicate();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        boolean boolean9 = wildcardClassItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass10 = wildcardClassItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0902");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        int int4 = wildcardClassItor1.nextIndex();
        int int5 = wildcardClassItor1.previousIndex();
        boolean boolean6 = wildcardClassItor1.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0903");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        boolean boolean2 = wildcardClassItor0.hasNext();
        boolean boolean3 = wildcardClassItor0.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor4.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass6 = wildcardClassItor4.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItor5);
    }

    @Test
    public void test0904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0904");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        int int4 = wildcardClassItor1.nextIndex();
        int int5 = wildcardClassItor1.previousIndex();
        boolean boolean6 = wildcardClassItor1.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor8 = wildcardClassItor1.getListIterator();
        boolean boolean9 = wildcardClassItor1.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor10 = wildcardClassItor1.getListIterator();
        boolean boolean11 = wildcardClassItor1.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass12 = wildcardClassItor1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertNull(wildcardItor8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(wildcardItor10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0905");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        boolean boolean14 = wildcardClassItor13.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor16.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        int int19 = wildcardClassItor17.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        wildcardClassItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor22 = wildcardClassItor15.getListIterator();
        int int23 = wildcardClassItor15.previousIndex();
        boolean boolean24 = wildcardClassItor15.hasNext();
        int int25 = wildcardClassItor15.nextIndex();
        boolean boolean26 = wildcardClassItor15.hasNext();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor28 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        boolean boolean29 = wildcardClassItor28.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass30 = wildcardClassItor28.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test0906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0906");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor4 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        boolean boolean8 = wildcardClassItor6.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor12 = wildcardClassItor10.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        int int17 = wildcardClassItor15.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor20 = wildcardClassItor13.getListIterator();
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        wildcardClassItor6.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int24 = wildcardClassItor13.previousIndex();
        int int25 = wildcardClassItor13.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor26 = wildcardClassItor13.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor28 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        int int29 = wildcardClassItor28.nextIndex();
        boolean boolean30 = wildcardClassItor28.hasPrevious();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor28);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor32 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor28);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor33 = wildcardClassItor32.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass34 = wildcardClassItor32.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertNull(wildcardItor4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardItor12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(wildcardItor26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItor33);
    }

    @Test
    public void test0907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0907");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean5 = wildcardClassItor4.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int10 = wildcardClassItor8.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        boolean boolean12 = wildcardClassItor11.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        int int14 = wildcardClassItor11.previousIndex();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        boolean boolean16 = wildcardClassItor4.hasPrevious();
        int int17 = wildcardClassItor4.nextIndex();
        boolean boolean18 = wildcardClassItor4.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass19 = wildcardClassItor4.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0908");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
    }

    @Test
    public void test0909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0909");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        int int1 = wildcardClassItor0.nextIndex();
        boolean boolean2 = wildcardClassItor0.hasNext();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0910");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor7);
        int int9 = typeItor8.nextIndex();
        int int10 = typeItor8.previousIndex();
        boolean boolean11 = typeItor8.hasNext();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate12 = typeItor8.getPredicate();
        boolean boolean13 = typeItor8.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            typeItor8.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardPredicate12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0911");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass5 = wildcardClassItor1.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test0912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0912");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        int int5 = wildcardClassItor1.nextIndex();
        boolean boolean6 = wildcardClassItor1.hasNext();
        int int7 = wildcardClassItor1.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass8 = wildcardClassItor1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test0913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0913");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor4.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate7 = wildcardClassItor6.getPredicate();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor6.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor5);
        org.junit.Assert.assertNull(wildcardPredicate7);
    }

    @Test
    public void test0914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0914");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.previousIndex();
        boolean boolean4 = wildcardClassItor1.hasNext();
        boolean boolean5 = wildcardClassItor1.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass6 = wildcardClassItor1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0915");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        boolean boolean9 = wildcardClassItor0.hasNext();
        int int10 = wildcardClassItor0.nextIndex();
        boolean boolean11 = wildcardClassItor0.hasPrevious();
        java.lang.Class<?> wildcardClass12 = wildcardClassItor0.getClass();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0916");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate1 = wildcardClassItor0.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        boolean boolean3 = wildcardClassItor2.hasNext();
        boolean boolean4 = wildcardClassItor2.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor2.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor2.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardPredicate1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardItor5);
    }

    @Test
    public void test0917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0917");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        boolean boolean13 = wildcardClassItor4.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        boolean boolean15 = wildcardClassItor14.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor16 = wildcardClassItor14.getListIterator();
        int int17 = wildcardClassItor14.previousIndex();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardItor16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test0918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0918");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate19 = wildcardClassItor8.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        boolean boolean21 = annotatedElementItor20.hasNext();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertNull(wildcardPredicate19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0919");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        boolean boolean7 = wildcardClassItor5.hasNext();
        int int8 = wildcardClassItor5.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass9 = wildcardClassItor5.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test0920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0920");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int19 = wildcardClassItor18.nextIndex();
        boolean boolean20 = wildcardClassItor18.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor21.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor24 = wildcardClassItor22.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor25 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor26 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor26.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        int int29 = wildcardClassItor27.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor30 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        wildcardClassItor25.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor30);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor32 = wildcardClassItor25.getListIterator();
        wildcardClassItor22.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor34 = wildcardClassItor25.getListIterator();
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor36 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor37 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor36.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor37);
        int int39 = wildcardClassItor37.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor40 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor37);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate41 = wildcardClassItor40.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor42 = wildcardClassItor40.getListIterator();
        int int43 = wildcardClassItor40.previousIndex();
        wildcardClassItor25.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor40);
        int int45 = wildcardClassItor40.nextIndex();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardItor24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor32);
        org.junit.Assert.assertNotNull(wildcardItor34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate41);
        org.junit.Assert.assertNotNull(wildcardItor42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
    }

    @Test
    public void test0921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0921");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        boolean boolean17 = wildcardClassItor15.hasPrevious();
        int int18 = wildcardClassItor15.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        int int21 = wildcardClassItor20.previousIndex();
        int int22 = wildcardClassItor20.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor23 = wildcardClassItor20.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor24 = wildcardClassItor20.getListIterator();
        wildcardClassItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor24);
        int int26 = wildcardClassItor15.previousIndex();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        boolean boolean28 = wildcardClassItor13.hasPrevious();
        boolean boolean29 = wildcardClassItor13.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Object> objItor30 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Object>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(wildcardItor23);
        org.junit.Assert.assertNotNull(wildcardItor24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test0922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0922");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor4 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor1.getPredicate();
        int int6 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate7 = wildcardClassItor1.getPredicate();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass8 = wildcardClassItor1.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertNull(wildcardItor4);
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(wildcardPredicate7);
    }

    @Test
    public void test0923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0923");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor7.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate9 = wildcardClassItor7.getPredicate();
        int int10 = wildcardClassItor7.previousIndex();
        int int11 = wildcardClassItor7.previousIndex();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean14 = wildcardClassItor1.hasPrevious();
        boolean boolean15 = wildcardClassItor1.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass16 = wildcardClassItor1.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0924");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.io.Serializable> serializableItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.io.Serializable>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int5 = serializableItor4.previousIndex();
        java.lang.Class<?> wildcardClass6 = serializableItor4.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0925");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor6 = wildcardClassItor4.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass8 = wildcardClassItor7.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNotNull(wildcardItor6);
    }

    @Test
    public void test0926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0926");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate9 = wildcardClassItor0.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor12.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor16 = wildcardClassItor13.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate17 = wildcardClassItor13.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate19 = wildcardClassItor13.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor20.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor23 = wildcardClassItor21.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor25 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor26 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor25.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        int int28 = wildcardClassItor26.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor29 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        wildcardClassItor24.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor29);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor31 = wildcardClassItor24.getListIterator();
        wildcardClassItor21.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        boolean boolean35 = wildcardClassItor10.hasNext();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate9);
        org.junit.Assert.assertNull(wildcardItor15);
        org.junit.Assert.assertNull(wildcardItor16);
        org.junit.Assert.assertNull(wildcardPredicate17);
        org.junit.Assert.assertNull(wildcardPredicate19);
        org.junit.Assert.assertNull(wildcardItor23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test0927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0927");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        int int4 = wildcardClassItor1.nextIndex();
        int int5 = wildcardClassItor1.previousIndex();
        boolean boolean6 = wildcardClassItor1.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor8 = wildcardClassItor1.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass9 = wildcardClassItor1.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertNull(wildcardItor8);
    }

    @Test
    public void test0928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0928");
        org.apache.commons.collections4.iterators.FilterListIterator<java.io.Serializable> serializableItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.io.Serializable>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor2.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor4 = wildcardClassItor2.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor2.getPredicate();
        serializableItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass7 = wildcardClassItor2.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor4);
        org.junit.Assert.assertNull(wildcardPredicate5);
    }

    @Test
    public void test0929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0929");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor13);
        int int15 = wildcardClassItor14.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass16 = wildcardClassItor14.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertNotNull(wildcardItor13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test0930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0930");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int19 = wildcardClassItor18.nextIndex();
        boolean boolean20 = wildcardClassItor18.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        java.lang.Class<?> wildcardClass22 = wildcardClassItor21.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0931");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = wildcardClassItor13.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        boolean boolean17 = wildcardClassItor0.hasNext();
        boolean boolean18 = wildcardClassItor0.hasNext();
        int int19 = wildcardClassItor0.nextIndex();
        boolean boolean20 = wildcardClassItor0.hasNext();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor21 = wildcardClassItor0.getListIterator();
        int int22 = wildcardClassItor0.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate23 = wildcardClassItor0.getPredicate();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate14);
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItor21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(wildcardPredicate23);
    }

    @Test
    public void test0932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0932");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        int int6 = wildcardClassItor1.previousIndex();
        int int7 = wildcardClassItor1.previousIndex();
        boolean boolean8 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass15 = wildcardClassItor1.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardItor13);
    }

    @Test
    public void test0933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0933");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor6 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        int int8 = wildcardClassItor7.previousIndex();
        boolean boolean9 = wildcardClassItor7.hasPrevious();
        int int10 = wildcardClassItor7.previousIndex();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertNotNull(wildcardItor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test0934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0934");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        int int5 = wildcardClassItor1.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass6 = wildcardClassItor1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
    }

    @Test
    public void test0935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0935");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor4 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        boolean boolean8 = wildcardClassItor6.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor12 = wildcardClassItor10.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        int int17 = wildcardClassItor15.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor20 = wildcardClassItor13.getListIterator();
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        wildcardClassItor6.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int24 = wildcardClassItor13.previousIndex();
        int int25 = wildcardClassItor13.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor26 = wildcardClassItor13.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor28 = wildcardClassItor13.getListIterator();
        java.lang.Class<?> wildcardClass29 = wildcardClassItor13.getClass();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertNull(wildcardItor4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardItor12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(wildcardItor26);
        org.junit.Assert.assertNotNull(wildcardItor28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0936");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int19 = wildcardClassItor8.previousIndex();
        int int20 = wildcardClassItor8.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor21 = wildcardClassItor8.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        boolean boolean23 = wildcardClassItor8.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass24 = wildcardClassItor8.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(wildcardItor21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test0937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0937");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        boolean boolean17 = wildcardClassItor15.hasPrevious();
        int int18 = wildcardClassItor15.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        int int21 = wildcardClassItor20.previousIndex();
        int int22 = wildcardClassItor20.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor23 = wildcardClassItor20.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor24 = wildcardClassItor20.getListIterator();
        wildcardClassItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor24);
        int int26 = wildcardClassItor15.previousIndex();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor28 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor29 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor28.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor29);
        int int31 = wildcardClassItor29.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor32 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor29);
        boolean boolean33 = wildcardClassItor32.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor34 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor32);
        int int35 = wildcardClassItor32.previousIndex();
        boolean boolean36 = wildcardClassItor32.hasNext();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor37 = wildcardClassItor32.getListIterator();
        boolean boolean38 = wildcardClassItor32.hasPrevious();
        wildcardClassItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor32);
        boolean boolean40 = wildcardClassItor32.hasNext();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(wildcardItor23);
        org.junit.Assert.assertNotNull(wildcardItor24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardItor37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test0938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0938");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        boolean boolean7 = wildcardClassItor0.hasNext();
        int int8 = wildcardClassItor0.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass10 = wildcardClassItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test0939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0939");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        boolean boolean19 = wildcardClassItor18.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass20 = wildcardClassItor18.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0940");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor0.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor4 = wildcardClassItor0.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass5 = wildcardClassItor0.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNotNull(wildcardItor3);
        org.junit.Assert.assertNotNull(wildcardItor4);
    }

    @Test
    public void test0941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0941");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        boolean boolean2 = wildcardClassItor0.hasNext();
        boolean boolean3 = wildcardClassItor0.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.GenericDeclaration> genericDeclarationItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.GenericDeclaration>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int5 = genericDeclarationItor4.previousIndex();
        int int6 = genericDeclarationItor4.nextIndex();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test0942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0942");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        int int4 = wildcardClassItor1.nextIndex();
        int int5 = wildcardClassItor1.previousIndex();
        boolean boolean6 = wildcardClassItor1.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor1.getListIterator();
        boolean boolean8 = wildcardClassItor1.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = wildcardClassItor13.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor16.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        int int19 = wildcardClassItor17.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        wildcardClassItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor22 = wildcardClassItor15.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor22);
        int int24 = typeItor23.nextIndex();
        int int25 = typeItor23.previousIndex();
        boolean boolean26 = typeItor23.hasNext();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate27 = typeItor23.getPredicate();
        boolean boolean28 = typeItor23.hasPrevious();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate29 = typeItor23.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor30 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor30.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor31);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor33 = wildcardClassItor30.getListIterator();
        typeItor23.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor33);
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor33);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor33);
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate14);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(wildcardPredicate27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(wildcardPredicate29);
        org.junit.Assert.assertNotNull(wildcardItor33);
    }

    @Test
    public void test0943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0943");
        org.apache.commons.collections4.iterators.FilterListIterator<java.util.Iterator<java.lang.Class<?>>> wildcardClassItorItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.util.Iterator<java.lang.Class<?>>>();
        int int1 = wildcardClassItorItor0.nextIndex();
        int int2 = wildcardClassItorItor0.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItorItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test0944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0944");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate19 = wildcardClassItor18.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor21 = wildcardClassItor20.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        boolean boolean23 = wildcardClassItor20.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor24 = wildcardClassItor20.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass25 = wildcardClassItor20.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertNull(wildcardPredicate19);
        org.junit.Assert.assertNotNull(wildcardItor21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItor24);
    }

    @Test
    public void test0945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0945");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        int int4 = wildcardClassItor1.nextIndex();
        int int5 = wildcardClassItor1.previousIndex();
        boolean boolean6 = wildcardClassItor1.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor8 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate9 = wildcardClassItor1.getPredicate();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertNull(wildcardItor8);
        org.junit.Assert.assertNull(wildcardPredicate9);
    }

    @Test
    public void test0946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0946");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate3 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        int int5 = wildcardClassItor1.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass6 = wildcardClassItor1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate3);
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
    }

    @Test
    public void test0947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0947");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int9 = wildcardClassItor8.previousIndex();
        int int10 = wildcardClassItor8.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor8.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor12 = wildcardClassItor8.getListIterator();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        boolean boolean14 = wildcardClassItor4.hasPrevious();
        int int15 = wildcardClassItor4.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor16 = wildcardClassItor4.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass17 = wildcardClassItor4.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNull(wildcardPredicate6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertNotNull(wildcardItor12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(wildcardItor16);
    }

    @Test
    public void test0948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0948");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass2 = wildcardClassItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
    }

    @Test
    public void test0949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0949");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        int int11 = wildcardClassItor9.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor14 = wildcardClassItor7.getListIterator();
        boolean boolean15 = wildcardClassItor7.hasPrevious();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int17 = wildcardClassItor7.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor18 = wildcardClassItor7.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate19 = wildcardClassItor7.getPredicate();
        boolean boolean20 = wildcardClassItor7.hasNext();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate21 = wildcardClassItor7.getPredicate();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(wildcardItor18);
        org.junit.Assert.assertNull(wildcardPredicate19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardPredicate21);
    }

    @Test
    public void test0950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0950");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int18 = wildcardClassItor8.previousIndex();
        int int19 = wildcardClassItor8.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass21 = wildcardClassItor8.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test0951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0951");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Object> objItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Object>();
        int int1 = objItor0.nextIndex();
        boolean boolean2 = objItor0.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor3 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor3);
        int int5 = wildcardClassItor4.previousIndex();
        int int6 = wildcardClassItor4.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate7 = wildcardClassItor4.getPredicate();
        int int8 = wildcardClassItor4.previousIndex();
        boolean boolean9 = wildcardClassItor4.hasNext();
        int int10 = wildcardClassItor4.previousIndex();
        objItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor12.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int15 = wildcardClassItor13.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate17 = wildcardClassItor16.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        int int19 = wildcardClassItor16.nextIndex();
        int int20 = wildcardClassItor16.previousIndex();
        int int21 = wildcardClassItor16.nextIndex();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        java.lang.Class<?> wildcardClass23 = wildcardClassItor16.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(wildcardPredicate7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0952");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean6 = wildcardClassItor5.hasNext();
        int int7 = wildcardClassItor5.nextIndex();
        boolean boolean8 = wildcardClassItor5.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass9 = wildcardClassItor5.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0953");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        int int11 = wildcardClassItor9.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor14 = wildcardClassItor7.getListIterator();
        boolean boolean15 = wildcardClassItor7.hasPrevious();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int17 = wildcardClassItor7.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor18 = wildcardClassItor7.getListIterator();
        boolean boolean19 = wildcardClassItor7.hasPrevious();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(wildcardItor18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0954");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        boolean boolean6 = wildcardClassItor1.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0955");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor7.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate9 = wildcardClassItor7.getPredicate();
        int int10 = wildcardClassItor7.previousIndex();
        int int11 = wildcardClassItor7.previousIndex();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int14 = wildcardClassItor1.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor1.getListIterator();
        boolean boolean16 = wildcardClassItor1.hasPrevious();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test0956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0956");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate3 = wildcardClassItor1.getPredicate();
        int int4 = wildcardClassItor1.previousIndex();
        int int5 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor6.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int9 = wildcardClassItor7.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate10 = wildcardClassItor7.getPredicate();
        boolean boolean11 = wildcardClassItor7.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor12 = wildcardClassItor7.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int14 = wildcardClassItor7.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate15 = wildcardClassItor7.getPredicate();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass16 = wildcardClassItor7.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardItor12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(wildcardPredicate15);
    }

    @Test
    public void test0957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0957");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate1 = wildcardClassItor0.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor2 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor3 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        int int7 = wildcardClassItor5.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        wildcardClassItor3.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor10 = wildcardClassItor3.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor10);
        int int12 = typeItor11.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        int int17 = wildcardClassItor15.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor20 = wildcardClassItor13.getListIterator();
        int int21 = wildcardClassItor13.previousIndex();
        boolean boolean22 = wildcardClassItor13.hasNext();
        int int23 = wildcardClassItor13.nextIndex();
        typeItor11.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int25 = wildcardClassItor13.nextIndex();
        int int26 = wildcardClassItor13.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor28 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor28);
        int int30 = wildcardClassItor13.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor32 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor31.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor32);
        boolean boolean34 = wildcardClassItor32.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor35 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor36 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor35.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor36);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor38 = wildcardClassItor36.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor39 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor40 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor41 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor40.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor41);
        int int43 = wildcardClassItor41.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor44 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor41);
        wildcardClassItor39.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor44);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor46 = wildcardClassItor39.getListIterator();
        wildcardClassItor36.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor39);
        wildcardClassItor32.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor39);
        int int49 = wildcardClassItor39.previousIndex();
        int int50 = wildcardClassItor39.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor51 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor39);
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor39);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate54 = wildcardClassItor0.getPredicate();
        boolean boolean55 = wildcardClassItor0.hasNext();
        org.junit.Assert.assertNull(wildcardPredicate1);
        org.junit.Assert.assertNull(wildcardItor2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(wildcardItor38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNull(wildcardPredicate54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test0958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0958");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean5 = wildcardClassItor4.hasNext();
        int int6 = wildcardClassItor4.previousIndex();
        int int7 = wildcardClassItor4.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass8 = wildcardClassItor4.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test0959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0959");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        int int18 = wildcardClassItor16.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor21 = wildcardClassItor14.getListIterator();
        int int22 = wildcardClassItor14.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor23.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        int int26 = wildcardClassItor24.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate28 = wildcardClassItor27.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor29 = wildcardClassItor27.getListIterator();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        int int32 = wildcardClassItor31.nextIndex();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor31);
        boolean boolean34 = wildcardClassItor1.hasPrevious();
        int int35 = wildcardClassItor1.nextIndex();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertNotNull(wildcardItor13);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate28);
        org.junit.Assert.assertNotNull(wildcardItor29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
    }

    @Test
    public void test0960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0960");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        boolean boolean5 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor1.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor1.getListIterator();
        int int8 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.GenericDeclaration> genericDeclarationItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.GenericDeclaration>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass10 = wildcardClassItor1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardPredicate6);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test0961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0961");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        int int4 = wildcardClassItor1.nextIndex();
        int int5 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int7 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate8 = wildcardClassItor6.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass10 = wildcardClassItor9.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate8);
    }

    @Test
    public void test0962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0962");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        int int4 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        int int7 = wildcardClassItor6.previousIndex();
        int int8 = wildcardClassItor6.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor9 = wildcardClassItor6.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor10 = wildcardClassItor6.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<java.lang.Class<?>> wildcardClassItor13 = null;
        wildcardClassItor12.setListIterator(wildcardClassItor13);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(wildcardItor9);
        org.junit.Assert.assertNotNull(wildcardItor10);
    }

    @Test
    public void test0963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0963");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor4 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor1.getPredicate();
        int int6 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int10 = wildcardClassItor8.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate11 = wildcardClassItor8.getPredicate();
        boolean boolean12 = wildcardClassItor8.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor8.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor13);
        int int15 = wildcardClassItor1.nextIndex();
        int int16 = wildcardClassItor1.nextIndex();
        int int17 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean19 = wildcardClassItor1.hasNext();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertNull(wildcardItor4);
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(wildcardItor13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0964");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        int int6 = wildcardClassItor1.previousIndex();
        int int7 = wildcardClassItor1.previousIndex();
        boolean boolean8 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        int int17 = wildcardClassItor16.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor18 = wildcardClassItor16.getListIterator();
        int int19 = wildcardClassItor16.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate20 = wildcardClassItor16.getPredicate();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardItor13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(wildcardPredicate20);
    }

    @Test
    public void test0965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0965");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor4 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor1.getPredicate();
        int int6 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int10 = wildcardClassItor8.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate11 = wildcardClassItor8.getPredicate();
        boolean boolean12 = wildcardClassItor8.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor8.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor13);
        int int15 = wildcardClassItor1.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass16 = wildcardClassItor1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertNull(wildcardItor4);
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(wildcardItor13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test0966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0966");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        int int18 = wildcardClassItor16.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor21 = wildcardClassItor14.getListIterator();
        int int22 = wildcardClassItor14.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor23.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        int int26 = wildcardClassItor24.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate28 = wildcardClassItor27.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor29 = wildcardClassItor27.getListIterator();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        int int32 = wildcardClassItor31.nextIndex();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor31);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor34 = wildcardClassItor31.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor35 = wildcardClassItor31.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass36 = wildcardClassItor31.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertNotNull(wildcardItor13);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate28);
        org.junit.Assert.assertNotNull(wildcardItor29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(wildcardItor34);
        org.junit.Assert.assertNotNull(wildcardItor35);
    }

    @Test
    public void test0967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0967");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate19 = wildcardClassItor18.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        boolean boolean21 = wildcardClassItor18.hasPrevious();
        java.lang.Class<?> wildcardClass22 = wildcardClassItor18.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertNull(wildcardPredicate19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0968");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor6 = wildcardClassItor4.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor4.getListIterator();
        boolean boolean8 = wildcardClassItor4.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        boolean boolean12 = wildcardClassItor10.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor16 = wildcardClassItor14.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        int int21 = wildcardClassItor19.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        wildcardClassItor17.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor24 = wildcardClassItor17.getListIterator();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate28 = wildcardClassItor27.getPredicate();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor30 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor32 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor31.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor32);
        int int34 = wildcardClassItor32.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor35 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor32);
        wildcardClassItor30.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor35);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor37 = wildcardClassItor30.getListIterator();
        int int38 = wildcardClassItor30.previousIndex();
        boolean boolean39 = wildcardClassItor30.hasNext();
        int int40 = wildcardClassItor30.nextIndex();
        boolean boolean41 = wildcardClassItor30.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor42 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor30);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor43 = wildcardClassItor30.getListIterator();
        int int44 = wildcardClassItor30.previousIndex();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor30);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor46 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor30);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNotNull(wildcardItor6);
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(wildcardItor16);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor24);
        org.junit.Assert.assertNull(wildcardPredicate28);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardItor43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
    }

    @Test
    public void test0969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0969");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean6 = wildcardClassItor5.hasNext();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0970");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        int int6 = wildcardClassItor1.previousIndex();
        int int7 = wildcardClassItor1.previousIndex();
        int int8 = wildcardClassItor1.previousIndex();
        boolean boolean9 = wildcardClassItor1.hasNext();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0971");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor5.getPredicate();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        boolean boolean14 = wildcardClassItor13.hasNext();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate16 = wildcardClassItor13.getPredicate();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass17 = wildcardClassItor13.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate6);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(wildcardPredicate16);
    }

    @Test
    public void test0972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0972");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate9 = wildcardClassItor0.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate11 = wildcardClassItor0.getPredicate();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass12 = wildcardClassItor0.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate9);
        org.junit.Assert.assertNull(wildcardPredicate11);
    }

    @Test
    public void test0973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0973");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = wildcardClassItor13.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int18 = wildcardClassItor17.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        int int20 = wildcardClassItor17.previousIndex();
        boolean boolean21 = wildcardClassItor17.hasNext();
        int int22 = wildcardClassItor17.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor17.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate14);
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test0974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0974");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        int int11 = wildcardClassItor9.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor14 = wildcardClassItor7.getListIterator();
        boolean boolean15 = wildcardClassItor7.hasPrevious();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0975");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor6.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor9 = wildcardClassItor7.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor11.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        int int14 = wildcardClassItor12.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor17 = wildcardClassItor10.getListIterator();
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        boolean boolean19 = wildcardClassItor10.hasPrevious();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        boolean boolean21 = wildcardClassItor10.hasNext();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNull(wildcardItor9);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0976");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor7);
        int int9 = typeItor8.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor11.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        int int14 = wildcardClassItor12.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor17 = wildcardClassItor10.getListIterator();
        int int18 = wildcardClassItor10.previousIndex();
        boolean boolean19 = wildcardClassItor10.hasNext();
        int int20 = wildcardClassItor10.nextIndex();
        typeItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int22 = wildcardClassItor10.nextIndex();
        int int23 = wildcardClassItor10.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor25 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        int int27 = wildcardClassItor25.previousIndex();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
    }

    @Test
    public void test0977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0977");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor6 = wildcardClassItor4.getListIterator();
        int int7 = wildcardClassItor4.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        boolean boolean10 = wildcardClassItor9.hasNext();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        int int12 = wildcardClassItor8.nextIndex();
        java.lang.Class<?> wildcardClass13 = wildcardClassItor8.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNotNull(wildcardItor6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0978");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        boolean boolean19 = wildcardClassItor18.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor20.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        int int23 = wildcardClassItor21.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        boolean boolean25 = wildcardClassItor24.hasNext();
        int int26 = wildcardClassItor24.previousIndex();
        int int27 = wildcardClassItor24.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor28 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor29 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor28.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor29);
        boolean boolean31 = wildcardClassItor29.hasPrevious();
        int int32 = wildcardClassItor29.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor33 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor34 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor33);
        int int35 = wildcardClassItor34.previousIndex();
        int int36 = wildcardClassItor34.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor37 = wildcardClassItor34.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor38 = wildcardClassItor34.getListIterator();
        wildcardClassItor29.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor38);
        int int40 = wildcardClassItor29.previousIndex();
        boolean boolean41 = wildcardClassItor29.hasPrevious();
        wildcardClassItor24.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor29);
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor29);
        boolean boolean44 = wildcardClassItor18.hasPrevious();
        int int45 = wildcardClassItor18.previousIndex();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(wildcardItor37);
        org.junit.Assert.assertNotNull(wildcardItor38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
    }

    @Test
    public void test0979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0979");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        boolean boolean14 = wildcardClassItor13.hasPrevious();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate15 = wildcardClassItor13.getPredicate();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(wildcardPredicate15);
    }

    @Test
    public void test0980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0980");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        int int4 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        int int7 = wildcardClassItor6.previousIndex();
        int int8 = wildcardClassItor6.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor9 = wildcardClassItor6.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor10 = wildcardClassItor6.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        boolean boolean12 = wildcardClassItor6.hasPrevious();
        int int13 = wildcardClassItor6.nextIndex();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(wildcardItor9);
        org.junit.Assert.assertNotNull(wildcardItor10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test0981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0981");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>();
        int int1 = typeItor0.previousIndex();
        boolean boolean2 = typeItor0.hasPrevious();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0982");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        int int18 = wildcardClassItor16.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor21 = wildcardClassItor14.getListIterator();
        int int22 = wildcardClassItor14.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor23.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        int int26 = wildcardClassItor24.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate28 = wildcardClassItor27.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor29 = wildcardClassItor27.getListIterator();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        int int32 = wildcardClassItor31.nextIndex();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor31);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor34 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor35 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor36 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor35.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor36);
        int int38 = wildcardClassItor36.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor39 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor36);
        wildcardClassItor34.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor39);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor41 = wildcardClassItor34.getListIterator();
        int int42 = wildcardClassItor34.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate43 = wildcardClassItor34.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor44 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor34);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor45 = wildcardClassItor44.getListIterator();
        wildcardClassItor31.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor44);
        int int47 = wildcardClassItor31.nextIndex();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertNotNull(wildcardItor13);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate28);
        org.junit.Assert.assertNotNull(wildcardItor29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate43);
        org.junit.Assert.assertNotNull(wildcardItor45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
    }

    @Test
    public void test0983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0983");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        int int4 = wildcardClassItor1.nextIndex();
        int int5 = wildcardClassItor1.previousIndex();
        int int6 = wildcardClassItor1.previousIndex();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }

    @Test
    public void test0984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0984");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor6 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        int int8 = wildcardClassItor7.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass9 = wildcardClassItor7.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertNotNull(wildcardItor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test0985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0985");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        int int4 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass7 = wildcardClassItor6.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(wildcardPredicate5);
    }

    @Test
    public void test0986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0986");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor2 = wildcardClassItor1.getListIterator();
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.GenericDeclaration> genericDeclarationItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.GenericDeclaration>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean5 = wildcardClassItor1.hasNext();
        boolean boolean6 = wildcardClassItor1.hasNext();
        org.junit.Assert.assertNotNull(wildcardItor2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0987");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        int int4 = wildcardClassItor1.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test0988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0988");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean5 = wildcardClassItor4.hasNext();
        int int6 = wildcardClassItor4.previousIndex();
        boolean boolean7 = wildcardClassItor4.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        boolean boolean16 = wildcardClassItor13.hasPrevious();
        boolean boolean17 = wildcardClassItor13.hasPrevious();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass19 = wildcardClassItor13.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0989");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor5.getPredicate();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor8.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate6);
    }

    @Test
    public void test0990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0990");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor5.getPredicate();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate9 = wildcardClassItor8.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        boolean boolean12 = wildcardClassItor5.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        int int16 = wildcardClassItor14.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        int int21 = wildcardClassItor19.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        boolean boolean23 = wildcardClassItor22.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor25 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor26 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor25.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        int int28 = wildcardClassItor26.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor29 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        boolean boolean30 = wildcardClassItor29.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor29);
        int int32 = wildcardClassItor29.previousIndex();
        wildcardClassItor22.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor29);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor34 = wildcardClassItor29.getListIterator();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor29);
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor29);
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor5.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate6);
        org.junit.Assert.assertNull(wildcardPredicate9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor34);
    }

    @Test
    public void test0991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0991");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        int int1 = wildcardClassItor0.nextIndex();
        boolean boolean2 = wildcardClassItor0.hasPrevious();
        boolean boolean3 = wildcardClassItor0.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        int int7 = wildcardClassItor5.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate9 = wildcardClassItor8.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor10 = wildcardClassItor8.getListIterator();
        boolean boolean11 = wildcardClassItor8.hasNext();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int13 = wildcardClassItor0.nextIndex();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate9);
        org.junit.Assert.assertNotNull(wildcardItor10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test0992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0992");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>();
        boolean boolean1 = annotatedElementItor0.hasNext();
        boolean boolean2 = annotatedElementItor0.hasNext();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0993");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor4 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        boolean boolean8 = wildcardClassItor6.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor12 = wildcardClassItor10.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        int int17 = wildcardClassItor15.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor20 = wildcardClassItor13.getListIterator();
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        wildcardClassItor6.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int24 = wildcardClassItor13.previousIndex();
        int int25 = wildcardClassItor13.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor26 = wildcardClassItor13.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor28 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        int int29 = wildcardClassItor28.nextIndex();
        boolean boolean30 = wildcardClassItor28.hasPrevious();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor28);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor32 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor28);
        int int33 = wildcardClassItor32.nextIndex();
        java.lang.Class<?> wildcardClass34 = wildcardClassItor32.getClass();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertNull(wildcardItor4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardItor12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(wildcardItor26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0994");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor0.getListIterator();
        boolean boolean4 = wildcardClassItor0.hasPrevious();
        int int5 = wildcardClassItor0.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNotNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
    }

    @Test
    public void test0995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0995");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = wildcardClassItor13.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        boolean boolean17 = wildcardClassItor0.hasNext();
        boolean boolean18 = wildcardClassItor0.hasNext();
        int int19 = wildcardClassItor0.nextIndex();
        int int20 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate21 = wildcardClassItor0.getPredicate();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate14);
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate21);
    }

    @Test
    public void test0996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0996");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.previousIndex();
        boolean boolean4 = wildcardClassItor1.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor6.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int9 = wildcardClassItor7.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor12 = wildcardClassItor5.getListIterator();
        int int13 = wildcardClassItor5.previousIndex();
        boolean boolean14 = wildcardClassItor5.hasNext();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate16 = wildcardClassItor5.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor17 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor17);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(wildcardPredicate16);
        org.junit.Assert.assertNotNull(wildcardItor17);
    }

    @Test
    public void test0997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0997");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        boolean boolean13 = wildcardClassItor4.hasPrevious();
        int int14 = wildcardClassItor4.nextIndex();
        int int15 = wildcardClassItor4.nextIndex();
        boolean boolean16 = wildcardClassItor4.hasPrevious();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate17 = wildcardClassItor4.getPredicate();
        boolean boolean18 = wildcardClassItor4.hasNext();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(wildcardPredicate17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0998");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.String> strItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.String>();
        boolean boolean1 = strItor0.hasPrevious();
        int int2 = strItor0.nextIndex();
        int int3 = strItor0.previousIndex();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test0999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0999");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        boolean boolean17 = wildcardClassItor15.hasPrevious();
        int int18 = wildcardClassItor15.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        int int21 = wildcardClassItor20.previousIndex();
        int int22 = wildcardClassItor20.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor23 = wildcardClassItor20.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor24 = wildcardClassItor20.getListIterator();
        wildcardClassItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor24);
        int int26 = wildcardClassItor15.previousIndex();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        boolean boolean28 = wildcardClassItor13.hasPrevious();
        boolean boolean29 = wildcardClassItor13.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor30 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor30.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor31);
        int int33 = wildcardClassItor31.previousIndex();
        int int34 = wildcardClassItor31.nextIndex();
        int int35 = wildcardClassItor31.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor36 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor31);
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor36);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor38 = wildcardClassItor13.getListIterator();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(wildcardItor23);
        org.junit.Assert.assertNotNull(wildcardItor24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor38);
    }

    @Test
    public void test1000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test1000");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate1 = wildcardClassItor0.getPredicate();
        boolean boolean2 = wildcardClassItor0.hasNext();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate3 = wildcardClassItor0.getPredicate();
        boolean boolean4 = wildcardClassItor0.hasNext();
        boolean boolean5 = wildcardClassItor0.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass6 = wildcardClassItor0.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardPredicate1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(wildcardPredicate3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }
}

