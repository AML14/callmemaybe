[
  {
    "signature": "java.util.logging.Level(java.lang.String name, int value)",
    "name": "java.util.logging.Level",
    "containingClass": {
      "qualifiedName": "java.util.logging.Level",
      "name": "Level",
      "isArray": false
    },
    "targetClass": "java.util.logging.Level",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "name"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "protocol": {
      "member": "java.util.logging.Level(java.lang.String name, int value)",
      "comment": "Create a named Level with a given integer value.  Note that this constructor is \"protected\" to allow subclassing. In general clients of logging should use one of the constant Level objects such as SEVERE or FINEST. However, if clients need to add new logging levels, they may subclass Level and define new constants.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "java.util.logging.Level(java.lang.String name, int value, java.lang.String resourceBundleName)",
    "name": "java.util.logging.Level",
    "containingClass": {
      "qualifiedName": "java.util.logging.Level",
      "name": "Level",
      "isArray": false
    },
    "targetClass": "java.util.logging.Level",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "name"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "value"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "resourceBundleName"
      }
    ],
    "protocol": {
      "member": "java.util.logging.Level(java.lang.String name, int value, java.lang.String resourceBundleName)",
      "comment": "Create a named Level with a given integer value and a given localization resource name.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getResourceBundleName()",
    "name": "getResourceBundleName",
    "containingClass": {
      "qualifiedName": "java.util.logging.Level",
      "name": "Level",
      "isArray": false
    },
    "targetClass": "java.util.logging.Level",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getResourceBundleName()",
      "comment": "Return the level's localization resource bundle name, or null if no localization bundle is defined.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getName()",
    "name": "getName",
    "containingClass": {
      "qualifiedName": "java.util.logging.Level",
      "name": "Level",
      "isArray": false
    },
    "targetClass": "java.util.logging.Level",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getName()",
      "comment": "Return the non-localized string name of the Level.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getLocalizedName()",
    "name": "getLocalizedName",
    "containingClass": {
      "qualifiedName": "java.util.logging.Level",
      "name": "Level",
      "isArray": false
    },
    "targetClass": "java.util.logging.Level",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getLocalizedName()",
      "comment": "Return the localized string name of the Level, for the current default locale.  If no localization information is available, the non-localized name is returned.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getLevelName()",
    "name": "getLevelName",
    "containingClass": {
      "qualifiedName": "java.util.logging.Level",
      "name": "Level",
      "isArray": false
    },
    "targetClass": "java.util.logging.Level",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getLevelName()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getCachedLocalizedLevelName()",
    "name": "getCachedLocalizedLevelName",
    "containingClass": {
      "qualifiedName": "java.util.logging.Level",
      "name": "Level",
      "isArray": false
    },
    "targetClass": "java.util.logging.Level",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getCachedLocalizedLevelName()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getLocalizedLevelName()",
    "name": "getLocalizedLevelName",
    "containingClass": {
      "qualifiedName": "java.util.logging.Level",
      "name": "Level",
      "isArray": false
    },
    "targetClass": "java.util.logging.Level",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getLocalizedLevelName()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "findLevel(java.lang.String name)",
    "name": "findLevel",
    "containingClass": {
      "qualifiedName": "java.util.logging.Level",
      "name": "Level",
      "isArray": false
    },
    "targetClass": "java.util.logging.Level",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.logging.Level",
      "name": "java.util.logging.Level",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "name"
      }
    ],
    "protocol": {
      "member": "findLevel(java.lang.String name)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "toString()",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "java.util.logging.Level",
      "name": "Level",
      "isArray": false
    },
    "targetClass": "java.util.logging.Level",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "toString()",
      "comment": "Returns a string representation of this Level.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "intValue()",
    "name": "intValue",
    "containingClass": {
      "qualifiedName": "java.util.logging.Level",
      "name": "Level",
      "isArray": false
    },
    "targetClass": "java.util.logging.Level",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "intValue()",
      "comment": "Get the integer value for this level. This integer value can be used for efficient ordering comparisons between Level objects.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "parse(java.lang.String name)",
    "name": "parse",
    "containingClass": {
      "qualifiedName": "java.util.logging.Level",
      "name": "Level",
      "isArray": false
    },
    "targetClass": "java.util.logging.Level",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.logging.Level",
      "name": "java.util.logging.Level",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "name"
      }
    ],
    "protocol": {
      "member": "parse(java.lang.String name)",
      "comment": "Parse a level name string into a Level.  The argument string may consist of either a level name or an integer value.  For example:  <li> \"SEVERE\" <li> \"1000\"",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "equals(java.lang.Object ox)",
    "name": "equals",
    "containingClass": {
      "qualifiedName": "java.util.logging.Level",
      "name": "Level",
      "isArray": false
    },
    "targetClass": "java.util.logging.Level",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "ox"
      }
    ],
    "protocol": {
      "member": "equals(java.lang.Object ox)",
      "comment": "Compare two objects for value equality.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "hashCode()",
    "name": "hashCode",
    "containingClass": {
      "qualifiedName": "java.util.logging.Level",
      "name": "Level",
      "isArray": false
    },
    "targetClass": "java.util.logging.Level",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "hashCode()",
      "comment": "Generate a hashcode.",
      "kind": "FreeText",
      "condition": ""
    }
  }
]