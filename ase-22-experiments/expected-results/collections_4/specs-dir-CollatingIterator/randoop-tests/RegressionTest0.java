import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0001");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        // The following exception was thrown during execution in test generation
        try {
            int int1 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0002");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable1 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0003");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable2 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0004");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean1 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            int int3 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(wildcardItorList2);
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0005");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.lang.Class<?> wildcardClass2 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0006");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0007");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean1 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable3 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(wildcardItorList2);
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0008");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor2.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0009");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) (byte) 1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0010");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean1 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(wildcardItorList2);
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0011");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.lang.Class<?> wildcardClass2 = wildcardItorList1.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0012");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.String> strItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.String>();
        java.lang.Class<?> wildcardClass1 = strItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0013");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        boolean boolean5 = strComparableItor2.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor2.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0014");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        boolean boolean5 = strComparableItor2.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableItor7.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor2.setIterator((int) (byte) 100, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0015");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        java.lang.Class<?> wildcardClass3 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0016");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        boolean boolean5 = strComparableItor2.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable6 = strComparableItor2.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0017");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        boolean boolean3 = strComparableItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable4 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0018");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.reflect.GenericDeclaration> genericDeclarationItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.reflect.GenericDeclaration>();
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0019");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        boolean boolean5 = strComparableItor2.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            int int6 = strComparableItor2.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0020");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0021");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator(100, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0022");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            int int7 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0023");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean1 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0024");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable14 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0025");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        boolean boolean5 = strComparableItor2.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0026");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor4.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean7 = strComparableItor6.hasNext();
        strComparableItor4.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor4.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor10.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableItor12.hasNext();
        strComparableItor10.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor12);
        boolean boolean15 = strComparableItor12.hasNext();
        strComparableItor4.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor12);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator(10, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0027");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            int int3 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0028");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        boolean boolean8 = strComparableItor2.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor2.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) (short) 1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardItorList9);
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0029");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        boolean boolean8 = strComparableItor0.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator9 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor10.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableItor12.hasNext();
        strComparableItor10.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor12);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardComparator9);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0030");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        boolean boolean5 = strComparableItor2.hasNext();
        boolean boolean6 = strComparableItor2.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor2.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0031");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor14.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) (short) 100, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardItorList16);
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0032");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable17 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0033");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable7 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0034");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        boolean boolean3 = strComparableItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0035");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.lang.Class<?> wildcardClass13 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0036");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        boolean boolean8 = strComparableItor0.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator9 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            int int10 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardComparator9);
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0037");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        // The following exception was thrown during execution in test generation
        try {
            int int13 = strComparableItor8.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0038");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean1 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor4.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean7 = strComparableItor6.hasNext();
        strComparableItor4.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor4.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor10.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableItor12.hasNext();
        strComparableItor10.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor12);
        boolean boolean15 = strComparableItor12.hasNext();
        strComparableItor4.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor12);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor4.getComparator();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableItor22.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        boolean boolean25 = strComparableItor22.hasNext();
        strComparableItor4.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardComparator17);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0039");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0040");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        // The following exception was thrown during execution in test generation
        try {
            int int5 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0041");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableItor23.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor21.getIterators();
        boolean boolean27 = strComparableItor21.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor21.getIterators();
        boolean boolean29 = strComparableItor21.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor6.setIterator((int) (byte) -1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0042");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            int int2 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0043");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        boolean boolean14 = strComparableItor6.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) '#', (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 35, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0044");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean1 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor4.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean7 = strComparableItor6.hasNext();
        strComparableItor4.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor4.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor10.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableItor12.hasNext();
        strComparableItor10.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor12);
        boolean boolean15 = strComparableItor12.hasNext();
        strComparableItor4.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor12);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor4.getComparator();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardComparator17);
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0045");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        // The following exception was thrown during execution in test generation
        try {
            int int13 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0046");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        boolean boolean27 = strComparableItor24.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator29 = strComparableItor16.getComparator();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor32 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor32.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor34 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableItor34.hasNext();
        strComparableItor32.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor34);
        boolean boolean37 = strComparableItor34.hasNext();
        strComparableItor16.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor34);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) '#', (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 35, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(wildcardComparator29);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0047");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean1 = strComparableItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            int int2 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0048");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable13 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0049");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        boolean boolean3 = strComparableItor0.hasNext();
        java.lang.Class<?> wildcardClass4 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0050");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0051");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.reflect.Type> typeItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.reflect.Type>();
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0052");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        boolean boolean8 = strComparableItor0.hasNext();
        java.lang.Class<?> wildcardClass9 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0053");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        boolean boolean8 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor10.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        boolean boolean23 = strComparableItor20.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator25 = strComparableItor12.getComparator();
        strComparableItor10.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor12);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) (byte) -1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(wildcardComparator25);
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0054");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor8.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0055");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0056");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor6.setIterator((int) '#', (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0057");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor4.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean7 = strComparableItor6.hasNext();
        strComparableItor4.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor4.getIterators();
        boolean boolean10 = strComparableItor4.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor4.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) 'a', (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 97, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0058");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable16 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0059");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        // The following exception was thrown during execution in test generation
        try {
            int int16 = strComparableItor6.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0060");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0061");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        boolean boolean5 = strComparableItor2.hasNext();
        boolean boolean6 = strComparableItor2.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable7 = strComparableItor2.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0062");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable20 = strComparableItor6.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0063");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean1 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean4 = strComparableItor3.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0064");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableItor17.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableItor23.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        boolean boolean26 = strComparableItor23.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator28 = strComparableItor15.getComparator();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor15);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator30 = strComparableItor13.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(wildcardComparator28);
        org.junit.Assert.assertNull(wildcardComparator30);
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0065");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) (short) -1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0066");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        boolean boolean5 = strComparableItor2.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor2.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            int int7 = strComparableItor2.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardComparator6);
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0067");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator20 = strComparableItor6.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable21 = strComparableItor6.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(wildcardComparator20);
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0068");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0069");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        boolean boolean27 = strComparableItor24.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator29 = strComparableItor16.getComparator();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor8.setIterator((int) '#', (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(wildcardComparator29);
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0070");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.lang.Class<?> wildcardClass13 = strComparableItor3.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0071");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor6.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0072");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean1 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor5.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableItor7.hasNext();
        strComparableItor5.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor7);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor5.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList12 = strComparableItor11.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableItor13.hasNext();
        strComparableItor11.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor11.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        boolean boolean22 = strComparableItor19.hasNext();
        strComparableItor11.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        strComparableItor5.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator25 = strComparableItor11.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertNotNull(wildcardItorList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(wildcardComparator25);
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0073");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor0.getIterators();
        java.lang.Class<?> wildcardClass15 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0074");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        boolean boolean23 = strComparableItor20.hasNext();
        strComparableItor2.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.lang.Class<?> wildcardClass25 = strComparableItor2.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0075");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            int int7 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0076");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor3.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0077");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        boolean boolean22 = strComparableItor16.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor16.getIterators();
        boolean boolean24 = strComparableItor16.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        boolean boolean27 = strComparableItor13.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableItor37.hasNext();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor37);
        boolean boolean40 = strComparableItor37.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor37);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor42 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor42.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor42.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList46 = strComparableItor45.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableItor47.hasNext();
        strComparableItor45.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor47);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor45.getIterators();
        boolean boolean51 = strComparableItor45.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList52 = strComparableItor45.getIterators();
        boolean boolean53 = strComparableItor45.hasNext();
        strComparableItor42.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor42);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor13.setIterator((int) (short) 1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertNotNull(wildcardItorList46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardItorList50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardItorList52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0078");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable13 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0079");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean1 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor0.getIterators();
        java.lang.Class<?> wildcardClass4 = strComparableItor0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0080");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        boolean boolean8 = strComparableItor0.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator9 = strComparableItor0.getComparator();
        boolean boolean10 = strComparableItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            int int11 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardComparator9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0081");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor7.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableItor11.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableItor17.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        boolean boolean20 = strComparableItor17.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor9.getComparator();
        strComparableItor7.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableItor27.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean30 = strComparableItor27.hasNext();
        strComparableItor9.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor34 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableItor34.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor34.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardItorList36);
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0082");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable13 = strComparableItor8.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0083");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable15 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0084");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        // The following exception was thrown during execution in test generation
        try {
            int int20 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0085");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor7.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableItor11.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableItor17.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        boolean boolean20 = strComparableItor17.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor9.getComparator();
        strComparableItor7.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableItor27.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean30 = strComparableItor27.hasNext();
        strComparableItor9.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor34 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor34.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor36.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean39 = strComparableItor38.hasNext();
        strComparableItor36.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList41 = strComparableItor36.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor42 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor42.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor44 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableItor44.hasNext();
        strComparableItor42.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor44);
        boolean boolean47 = strComparableItor44.hasNext();
        strComparableItor36.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor44);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator49 = strComparableItor36.getComparator();
        strComparableItor34.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) (short) 10, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor34);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardItorList41);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(wildcardComparator49);
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0086");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        boolean boolean23 = strComparableItor20.hasNext();
        strComparableItor2.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableItor28.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor32 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor32.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor34 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableItor34.hasNext();
        strComparableItor32.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor34);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor32.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableItor40.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        boolean boolean43 = strComparableItor40.hasNext();
        strComparableItor32.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor32);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator46 = strComparableItor32.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor2.setIterator((int) 'a', (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor32);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 97, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(wildcardComparator46);
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0087");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor8.getIterators();
        boolean boolean14 = strComparableItor8.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor8.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor8.getIterators();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor19.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableItor21.hasNext();
        strComparableItor19.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor19.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableItor27.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor31.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean34 = strComparableItor33.hasNext();
        strComparableItor31.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        boolean boolean36 = strComparableItor33.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        strComparableItor19.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) (short) 100, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0088");
        org.apache.commons.collections4.iterators.CollatingIterator<java.util.Collection<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>>> wildcardItorCollectionItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.util.Collection<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>>>();
        java.lang.Class<?> wildcardClass1 = wildcardItorCollectionItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0089");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        boolean boolean8 = strComparableItor0.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator9 = strComparableItor0.getComparator();
        boolean boolean10 = strComparableItor0.hasNext();
        java.lang.Class<?> wildcardClass11 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardComparator9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0090");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator5 = strComparableItor2.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            int int6 = strComparableItor2.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardComparator5);
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0091");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        boolean boolean5 = strComparableItor2.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor2.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor2.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardComparator6);
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0092");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        boolean boolean22 = strComparableItor16.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor16.getIterators();
        boolean boolean24 = strComparableItor16.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable27 = strComparableItor13.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0093");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        boolean boolean5 = strComparableItor2.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor2.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable7 = strComparableItor2.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardComparator6);
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0094");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        boolean boolean22 = strComparableItor16.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor16.getIterators();
        boolean boolean24 = strComparableItor16.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        java.lang.Class<?> wildcardClass27 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0095");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        boolean boolean3 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            int int5 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList4);
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0096");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0097");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        java.lang.Class<?> wildcardClass17 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0098");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        // The following exception was thrown during execution in test generation
        try {
            int int17 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0099");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable16 = strComparableItor6.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0100");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        boolean boolean23 = strComparableItor20.hasNext();
        strComparableItor2.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor2.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable26 = strComparableItor2.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0101");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        boolean boolean23 = strComparableItor20.hasNext();
        strComparableItor2.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.lang.Class<?> wildcardClass25 = strComparableItor20.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0102");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        boolean boolean3 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor0.getIterators();
        java.lang.Class<?> wildcardClass5 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0103");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor0.getIterators();
        boolean boolean9 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList12 = strComparableItor11.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableItor13.hasNext();
        strComparableItor11.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor11.getIterators();
        boolean boolean17 = strComparableItor11.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) (byte) 1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0104");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        boolean boolean3 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor0.getIterators();
        java.lang.Class<?> wildcardClass5 = wildcardItorList4.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0105");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        boolean boolean3 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList4);
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0106");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        boolean boolean8 = strComparableItor0.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator9 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator10 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            int int11 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardComparator9);
        org.junit.Assert.assertNull(wildcardComparator10);
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0107");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0108");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        boolean boolean3 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor4.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean7 = strComparableItor6.hasNext();
        strComparableItor4.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor4.getIterators();
        boolean boolean10 = strComparableItor4.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor4.getIterators();
        boolean boolean12 = strComparableItor4.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor4.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator14 = strComparableItor4.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNull(wildcardComparator14);
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0109");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass18 = wildcardComparator17.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator17);
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0110");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.lang.Class<?> wildcardClass16 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0111");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((-1), (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0112");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableItor26.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor30.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor32 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableItor32.hasNext();
        strComparableItor30.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor32);
        boolean boolean35 = strComparableItor32.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor32);
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        strComparableItor0.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0113");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor12.getIterators();
        boolean boolean18 = strComparableItor12.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor12.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor12.getIterators();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor12);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableItor37.hasNext();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor37);
        boolean boolean40 = strComparableItor37.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor37);
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor6.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor2.setIterator(100, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardItorList44);
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0114");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        boolean boolean22 = strComparableItor16.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor16.getIterators();
        boolean boolean24 = strComparableItor16.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        boolean boolean27 = strComparableItor13.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor32 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor32.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor34 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableItor34.hasNext();
        strComparableItor32.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor34);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor32.getIterators();
        boolean boolean38 = strComparableItor32.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor32.getIterators();
        boolean boolean40 = strComparableItor32.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor32);
        boolean boolean42 = strComparableItor29.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor13.setIterator(10, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0115");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList41 = strComparableItor40.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor42 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableItor42.hasNext();
        strComparableItor40.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor42);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList45 = strComparableItor40.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor46 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList47 = strComparableItor46.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor48 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean49 = strComparableItor48.hasNext();
        strComparableItor46.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor48);
        boolean boolean51 = strComparableItor48.hasNext();
        strComparableItor40.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor48);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor53 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor53.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList55 = strComparableItor53.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor56 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList57 = strComparableItor56.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor58 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean59 = strComparableItor58.hasNext();
        strComparableItor56.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor58);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList61 = strComparableItor56.getIterators();
        boolean boolean62 = strComparableItor56.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList63 = strComparableItor56.getIterators();
        boolean boolean64 = strComparableItor56.hasNext();
        strComparableItor53.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor56);
        strComparableItor40.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) ' ', (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32, Size: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertNotNull(wildcardItorList41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardItorList45);
        org.junit.Assert.assertNotNull(wildcardItorList47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardItorList54);
        org.junit.Assert.assertNotNull(wildcardItorList55);
        org.junit.Assert.assertNotNull(wildcardItorList57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardItorList61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardItorList63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0116");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor7.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableItor11.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableItor17.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        boolean boolean20 = strComparableItor17.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor9.getComparator();
        strComparableItor7.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableItor27.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean30 = strComparableItor27.hasNext();
        strComparableItor9.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor34 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor34.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertNotNull(wildcardItorList35);
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0117");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor16.getIterators();
        boolean boolean19 = strComparableItor16.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0118");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor7.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableItor11.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableItor17.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        boolean boolean20 = strComparableItor17.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor9.getComparator();
        strComparableItor7.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableItor27.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean30 = strComparableItor27.hasNext();
        strComparableItor9.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        java.lang.Class<?> wildcardClass33 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0119");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor7.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableItor11.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableItor17.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        boolean boolean20 = strComparableItor17.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor9.getComparator();
        strComparableItor7.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableItor27.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean30 = strComparableItor27.hasNext();
        strComparableItor9.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean33 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor34 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor34.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableItor36.hasNext();
        strComparableItor34.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor34.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList41 = strComparableItor40.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor42 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableItor42.hasNext();
        strComparableItor40.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor42);
        boolean boolean45 = strComparableItor42.hasNext();
        strComparableItor34.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor42);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor47.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList49 = strComparableItor47.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor50 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor50.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor52 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean53 = strComparableItor52.hasNext();
        strComparableItor50.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor52);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList55 = strComparableItor50.getIterators();
        boolean boolean56 = strComparableItor50.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList57 = strComparableItor50.getIterators();
        boolean boolean58 = strComparableItor50.hasNext();
        strComparableItor47.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor50);
        strComparableItor34.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor47);
        boolean boolean61 = strComparableItor47.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertNotNull(wildcardItorList41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertNotNull(wildcardItorList49);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardItorList55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardItorList57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0120");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        boolean boolean28 = strComparableItor25.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor30.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor30.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableItor35.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor33.getIterators();
        boolean boolean39 = strComparableItor33.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor33.getIterators();
        boolean boolean41 = strComparableItor33.hasNext();
        strComparableItor30.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) (byte) 10, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0121");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        boolean boolean22 = strComparableItor16.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor16.getIterators();
        boolean boolean24 = strComparableItor16.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        boolean boolean27 = strComparableItor13.hasNext();
        java.lang.Class<?> wildcardClass28 = strComparableItor13.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0122");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0123");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor6.setIterator((int) (byte) 10, strComparableItor17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0124");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor0.getIterators();
        boolean boolean9 = strComparableItor0.hasNext();
        java.lang.Class<?> wildcardClass10 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0125");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        boolean boolean3 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor4.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator19 = strComparableItor6.getComparator();
        strComparableItor4.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(wildcardComparator19);
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0126");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable38 = strComparableItor17.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0127");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.lang.Class<?> wildcardClass6 = wildcardItorList5.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0128");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        boolean boolean23 = strComparableItor20.hasNext();
        strComparableItor2.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor20.setIterator((int) (byte) 100, strComparableItor26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0129");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0130");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        boolean boolean5 = strComparableItor2.hasNext();
        java.lang.Class<?> wildcardClass6 = strComparableItor2.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0131");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableItor22.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableItor28.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        boolean boolean31 = strComparableItor28.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor36.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean39 = strComparableItor38.hasNext();
        strComparableItor36.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList41 = strComparableItor36.getIterators();
        boolean boolean42 = strComparableItor36.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor36.getIterators();
        boolean boolean44 = strComparableItor36.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        boolean boolean47 = strComparableItor33.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable49 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardItorList41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0132");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableItor22.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableItor28.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        boolean boolean31 = strComparableItor28.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor36.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean39 = strComparableItor38.hasNext();
        strComparableItor36.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList41 = strComparableItor36.getIterators();
        boolean boolean42 = strComparableItor36.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor36.getIterators();
        boolean boolean44 = strComparableItor36.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        boolean boolean47 = strComparableItor33.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor50 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor50.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor52 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean53 = strComparableItor52.hasNext();
        strComparableItor50.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor52);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList55 = strComparableItor50.getIterators();
        boolean boolean56 = strComparableItor50.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList57 = strComparableItor50.getIterators();
        boolean boolean58 = strComparableItor50.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor33.setIterator((int) '4', (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor50);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardItorList41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardItorList55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardItorList57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0133");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator14 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNull(wildcardComparator14);
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0134");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable38 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0135");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0136");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator8 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable9 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNull(wildcardComparator8);
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0137");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator1 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable2 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardComparator1);
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0138");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0139");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        boolean boolean23 = strComparableItor20.hasNext();
        strComparableItor2.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor2.getIterators();
        java.lang.Class<?> wildcardClass26 = strComparableItor2.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0140");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            int int18 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator17);
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0141");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.lang.Class<?> wildcardClass20 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0142");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Object> objItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Object>();
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0143");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            int int7 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNull(wildcardComparator6);
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0144");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable8 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0145");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor8.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass14 = wildcardComparator13.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0146");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor7.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableItor11.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableItor17.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        boolean boolean20 = strComparableItor17.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor9.getComparator();
        strComparableItor7.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableItor27.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean30 = strComparableItor27.hasNext();
        strComparableItor9.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor27.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor27.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList33);
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0147");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        boolean boolean3 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertNotNull(wildcardItorList5);
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0148");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            int int6 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0149");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        boolean boolean23 = strComparableItor20.hasNext();
        strComparableItor2.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor2.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor2.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0150");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor7.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableItor11.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableItor17.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        boolean boolean20 = strComparableItor17.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor9.getComparator();
        strComparableItor7.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableItor27.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean30 = strComparableItor27.hasNext();
        strComparableItor9.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor27.getIterators();
        boolean boolean34 = strComparableItor27.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor27.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0151");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        boolean boolean22 = strComparableItor16.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor16.getIterators();
        boolean boolean24 = strComparableItor16.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator26 = strComparableItor13.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableItor35.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor39.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableItor41.hasNext();
        strComparableItor39.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        boolean boolean44 = strComparableItor41.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor46 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList47 = strComparableItor46.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor46.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor49.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor51 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean52 = strComparableItor51.hasNext();
        strComparableItor49.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor51);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor49.getIterators();
        boolean boolean55 = strComparableItor49.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList56 = strComparableItor49.getIterators();
        boolean boolean57 = strComparableItor49.hasNext();
        strComparableItor46.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        boolean boolean60 = strComparableItor46.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(wildcardComparator26);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardItorList47);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertNotNull(wildcardItorList50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardItorList54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(wildcardItorList56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0152");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        // The following exception was thrown during execution in test generation
        try {
            int int16 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0153");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator8 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNull(wildcardComparator8);
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0154");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) (byte) 0, strComparableItor8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Iterator must not be null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNull(wildcardComparator6);
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0155");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        boolean boolean22 = strComparableItor19.hasNext();
        boolean boolean23 = strComparableItor19.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator24 = strComparableItor19.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor6.setIterator((int) (byte) 100, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(wildcardComparator24);
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0156");
        org.apache.commons.collections4.iterators.CollatingIterator<org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>> strComparableItorItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>>();
        java.lang.Class<?> wildcardClass1 = strComparableItorItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0157");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        boolean boolean23 = strComparableItor20.hasNext();
        strComparableItor2.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableItor27.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator30 = strComparableItor27.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(wildcardComparator30);
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0158");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor0.getIterators();
        boolean boolean9 = strComparableItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable10 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0159");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor0.getIterators();
        java.lang.Class<?> wildcardClass9 = wildcardItorList8.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0160");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.lang.Class<?> wildcardClass8 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0161");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor22.getIterators();
        boolean boolean28 = strComparableItor22.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor22.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor22.getIterators();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor16.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertNotNull(wildcardItorList30);
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0162");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor14.getIterators();
        boolean boolean20 = strComparableItor14.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor14.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor14.getIterators();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean24 = strComparableItor14.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) '#', (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0163");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor10.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList12 = strComparableItor10.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableItor15.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor15);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor13.getIterators();
        boolean boolean19 = strComparableItor13.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor13.getIterators();
        boolean boolean21 = strComparableItor13.hasNext();
        strComparableItor10.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList12);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0164");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor0.getIterators();
        boolean boolean9 = strComparableItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0165");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList12 = strComparableItor11.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableItor13.hasNext();
        strComparableItor11.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor11.getIterators();
        boolean boolean17 = strComparableItor11.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor11.getIterators();
        boolean boolean19 = strComparableItor11.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        boolean boolean21 = strComparableItor8.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor8.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) 'a', (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertNotNull(wildcardItorList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0166");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        boolean boolean5 = strComparableItor2.hasNext();
        boolean boolean6 = strComparableItor2.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator7 = strComparableItor2.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableItor22.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        boolean boolean25 = strComparableItor22.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator28 = strComparableItor14.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(wildcardComparator7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(wildcardComparator28);
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0167");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableItor11.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        boolean boolean14 = strComparableItor11.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator16 = strComparableItor11.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor11.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator(1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(wildcardComparator16);
        org.junit.Assert.assertNotNull(wildcardItorList17);
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0168");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor39.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableItor43.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList46 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor47.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableItor49.hasNext();
        strComparableItor47.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        boolean boolean52 = strComparableItor49.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator54 = strComparableItor41.getComparator();
        strComparableItor39.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        // The following exception was thrown during execution in test generation
        try {
            int int57 = strComparableItor41.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardItorList46);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(wildcardComparator54);
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0169");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        boolean boolean23 = strComparableItor20.hasNext();
        strComparableItor2.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor29.getIterators();
        boolean boolean35 = strComparableItor29.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor29.getIterators();
        boolean boolean37 = strComparableItor29.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator39 = strComparableItor26.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList41 = strComparableItor40.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor42 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableItor42.hasNext();
        strComparableItor40.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor42);
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor20.setIterator((int) (byte) -1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(wildcardComparator39);
        org.junit.Assert.assertNotNull(wildcardItorList41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0170");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableItor11.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        boolean boolean14 = strComparableItor11.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor11.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator16 = strComparableItor11.getComparator();
        boolean boolean17 = strComparableItor11.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0171");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor3.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable14 = strComparableItor3.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0172");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0173");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableItor22.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableItor28.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        boolean boolean31 = strComparableItor28.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor36.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean39 = strComparableItor38.hasNext();
        strComparableItor36.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList41 = strComparableItor36.getIterators();
        boolean boolean42 = strComparableItor36.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor36.getIterators();
        boolean boolean44 = strComparableItor36.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        boolean boolean47 = strComparableItor33.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardItorList41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0174");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable13 = strComparableItor3.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0175");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableItor40.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor44 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList45 = strComparableItor44.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor46 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean47 = strComparableItor46.hasNext();
        strComparableItor44.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        boolean boolean49 = strComparableItor46.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator51 = strComparableItor38.getComparator();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable53 = strComparableItor17.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertNotNull(wildcardItorList45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(wildcardComparator51);
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0176");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor6.getIterators();
        boolean boolean9 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList12 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertNotNull(wildcardItorList12);
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0177");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableItor22.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableItor28.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        boolean boolean31 = strComparableItor28.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor36.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean39 = strComparableItor38.hasNext();
        strComparableItor36.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList41 = strComparableItor36.getIterators();
        boolean boolean42 = strComparableItor36.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor36.getIterators();
        boolean boolean44 = strComparableItor36.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        boolean boolean47 = strComparableItor33.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        java.lang.Class<?> wildcardClass49 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardItorList41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0178");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        boolean boolean8 = strComparableItor0.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator9 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable10 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardComparator9);
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0179");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        // The following exception was thrown during execution in test generation
        try {
            int int38 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0180");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.lang.Class<?> wildcardClass16 = strComparableItor6.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0181");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        boolean boolean16 = strComparableItor6.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor6.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0182");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator5 = strComparableItor2.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor2.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator7 = strComparableItor2.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator8 = strComparableItor2.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor10.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableItor12.hasNext();
        strComparableItor10.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor12);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        boolean boolean22 = strComparableItor16.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor16.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor16.getIterators();
        strComparableItor10.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor2.setIterator((int) (byte) 1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNull(wildcardComparator7);
        org.junit.Assert.assertNull(wildcardComparator8);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList24);
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0183");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator5 = strComparableItor2.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator14 = strComparableItor6.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor2.a                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator20 = strComparableItor6.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        boolean boolean27 = strComparableItor24.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator28 = strComparableItor24.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator29 = strComparableItor24.getComparator();
        boolean boolean30 = strComparableItor24.hasNext();
        strComparableItor6.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable32 = strComparableItor6.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(wildcardComparator20);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(wildcardComparator28);
        org.junit.Assert.assertNull(wildcardComparator29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0185");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator5 = strComparableItor2.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor2.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList12 = strComparableItor11.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableItor13.hasNext();
        strComparableItor11.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor11.getIterators();
        boolean boolean17 = strComparableItor11.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor11.getIterators();
        boolean boolean19 = strComparableItor11.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator21 = strComparableItor8.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor8.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor2.setIterator((int) 'a', (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertNotNull(wildcardItorList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(wildcardComparator21);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0186");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor0.getIterators();
        java.lang.Class<?> wildcardClass40 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0187");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator5 = strComparableItor2.getComparator();
        boolean boolean6 = strComparableItor2.hasNext();
        java.lang.Class<?> wildcardClass7 = strComparableItor2.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0188");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        boolean boolean23 = strComparableItor20.hasNext();
        strComparableItor2.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        boolean boolean25 = strComparableItor2.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableItor27.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor27.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor27.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator31 = strComparableItor27.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor2.setIterator((int) 'a', (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertNull(wildcardComparator31);
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0189");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor7.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableItor11.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableItor17.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        boolean boolean20 = strComparableItor17.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor9.getComparator();
        strComparableItor7.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableItor27.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean30 = strComparableItor27.hasNext();
        strComparableItor9.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor34 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor34.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableItor36.hasNext();
        strComparableItor34.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator39 = strComparableItor36.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor36.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor27.setIterator((int) '4', (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(wildcardComparator39);
        org.junit.Assert.assertNotNull(wildcardItorList40);
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0190");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator14 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor19.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableItor21.hasNext();
        strComparableItor19.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor19.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableItor27.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean30 = strComparableItor27.hasNext();
        strComparableItor19.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator32 = strComparableItor19.getComparator();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableItor37.hasNext();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor37);
        boolean boolean40 = strComparableItor37.hasNext();
        strComparableItor19.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor37);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator(10, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNull(wildcardComparator14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(wildcardComparator32);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0191");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor6.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0192");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        boolean boolean7 = strComparableItor0.hasNext();
        boolean boolean8 = strComparableItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0193");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator7 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(wildcardComparator7);
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0194");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        boolean boolean22 = strComparableItor16.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor16.getIterators();
        boolean boolean24 = strComparableItor16.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator32 = strComparableItor29.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator33 = strComparableItor29.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor29.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor29.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.lang.Class<?> wildcardClass37 = strComparableItor29.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(wildcardComparator32);
        org.junit.Assert.assertNull(wildcardComparator33);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0195");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        boolean boolean20 = strComparableItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0196");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable8 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNotNull(wildcardItorList7);
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0197");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable39 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList38);
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0198");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor0.getIterators();
        boolean boolean9 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor10.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableItor12.hasNext();
        strComparableItor10.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor12);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor10.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor10.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor19.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableItor21.hasNext();
        strComparableItor19.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor19.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableItor27.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean30 = strComparableItor27.hasNext();
        strComparableItor19.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator32 = strComparableItor19.getComparator();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableItor37.hasNext();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor37);
        boolean boolean40 = strComparableItor37.hasNext();
        strComparableItor19.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor37);
        strComparableItor10.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor37);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(wildcardComparator32);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0199");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        boolean boolean8 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableItor11.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor9.getIterators();
        boolean boolean15 = strComparableItor9.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0200");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        boolean boolean5 = strComparableItor2.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor2.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator7 = strComparableItor2.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            int int8 = strComparableItor2.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNull(wildcardComparator7);
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0201");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableItor22.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableItor28.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        boolean boolean31 = strComparableItor28.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor36.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean39 = strComparableItor38.hasNext();
        strComparableItor36.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList41 = strComparableItor36.getIterators();
        boolean boolean42 = strComparableItor36.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor36.getIterators();
        boolean boolean44 = strComparableItor36.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        boolean boolean47 = strComparableItor33.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor49.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor51 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean52 = strComparableItor51.hasNext();
        strComparableItor49.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor51);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor49.getIterators();
        boolean boolean55 = strComparableItor49.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList56 = strComparableItor49.getIterators();
        boolean boolean57 = strComparableItor49.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator58 = strComparableItor49.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator59 = strComparableItor49.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        java.lang.Class<?> wildcardClass61 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardItorList41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardItorList50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardItorList54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(wildcardItorList56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(wildcardComparator58);
        org.junit.Assert.assertNull(wildcardComparator59);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0202");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        // The following exception was thrown during execution in test generation
        try {
            int int20 = strComparableItor6.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0203");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        boolean boolean7 = strComparableItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0204");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        boolean boolean5 = strComparableItor2.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor2.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator7 = strComparableItor2.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable8 = strComparableItor2.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNull(wildcardComparator7);
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0205");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.lang.Class<?> wildcardClass16 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0206");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor7.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableItor11.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableItor17.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        boolean boolean20 = strComparableItor17.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor9.getComparator();
        strComparableItor7.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableItor27.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean30 = strComparableItor27.hasNext();
        strComparableItor9.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean33 = strComparableItor0.hasNext();
        java.lang.Class<?> wildcardClass34 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0207");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0208");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable7 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0209");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        boolean boolean5 = strComparableItor2.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor2.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator7 = strComparableItor2.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableItor11.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableItor17.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor15.getIterators();
        boolean boolean21 = strComparableItor15.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor15.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor15.getIterators();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor15);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor2.setIterator((int) (byte) 1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNull(wildcardComparator7);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList23);
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0210");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor39.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableItor43.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList46 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor47.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableItor49.hasNext();
        strComparableItor47.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        boolean boolean52 = strComparableItor49.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator54 = strComparableItor41.getComparator();
        strComparableItor39.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor58 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList59 = strComparableItor58.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor60 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean61 = strComparableItor60.hasNext();
        strComparableItor58.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor60);
        boolean boolean63 = strComparableItor60.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator64 = strComparableItor60.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator(10, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor60);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardItorList46);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(wildcardComparator54);
        org.junit.Assert.assertNotNull(wildcardItorList59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(wildcardComparator64);
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0211");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        boolean boolean22 = strComparableItor16.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor16.getIterators();
        boolean boolean24 = strComparableItor16.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        boolean boolean27 = strComparableItor13.hasNext();
        boolean boolean28 = strComparableItor13.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor13.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0212");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean1 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator4 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable5 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertNull(wildcardComparator4);
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0213");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        boolean boolean8 = strComparableItor0.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator9 = strComparableItor0.getComparator();
        boolean boolean10 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor18.getIterators();
        boolean boolean21 = strComparableItor18.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor18.getIterators();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor12.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((-1), (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardComparator9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0214");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor7.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableItor11.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableItor17.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        boolean boolean20 = strComparableItor17.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor9.getComparator();
        strComparableItor7.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableItor27.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean30 = strComparableItor27.hasNext();
        strComparableItor9.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean33 = strComparableItor27.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable34 = strComparableItor27.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0215");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator5 = strComparableItor2.getComparator();
        boolean boolean6 = strComparableItor2.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable7 = strComparableItor2.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0216");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor22.getIterators();
        boolean boolean28 = strComparableItor22.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor22.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor22.getIterators();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        // The following exception was thrown during execution in test generation
        try {
            int int33 = strComparableItor16.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertNotNull(wildcardItorList30);
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0217");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableItor40.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor44 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList45 = strComparableItor44.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor46 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean47 = strComparableItor46.hasNext();
        strComparableItor44.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        boolean boolean49 = strComparableItor46.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator51 = strComparableItor38.getComparator();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor54 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList55 = strComparableItor54.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor56 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableItor56.hasNext();
        strComparableItor54.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor56);
        boolean boolean59 = strComparableItor56.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator60 = strComparableItor56.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator61 = strComparableItor56.getComparator();
        strComparableItor17.setIterator((int) (short) 1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor56);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList63 = strComparableItor56.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            int int64 = strComparableItor56.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertNotNull(wildcardItorList45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(wildcardComparator51);
        org.junit.Assert.assertNotNull(wildcardItorList55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(wildcardComparator60);
        org.junit.Assert.assertNull(wildcardComparator61);
        org.junit.Assert.assertNotNull(wildcardItorList63);
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0218");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableItor40.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor44 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList45 = strComparableItor44.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor46 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean47 = strComparableItor46.hasNext();
        strComparableItor44.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        boolean boolean49 = strComparableItor46.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator51 = strComparableItor38.getComparator();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor54 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList55 = strComparableItor54.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor56 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableItor56.hasNext();
        strComparableItor54.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor56);
        boolean boolean59 = strComparableItor56.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator60 = strComparableItor56.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator61 = strComparableItor56.getComparator();
        strComparableItor17.setIterator((int) (short) 1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor56);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList63 = strComparableItor56.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor65 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList66 = strComparableItor65.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList67 = strComparableItor65.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor68 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList69 = strComparableItor68.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor70 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean71 = strComparableItor70.hasNext();
        strComparableItor68.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor70);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList73 = strComparableItor68.getIterators();
        boolean boolean74 = strComparableItor68.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList75 = strComparableItor68.getIterators();
        boolean boolean76 = strComparableItor68.hasNext();
        strComparableItor65.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor68);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator78 = strComparableItor65.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor79 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList80 = strComparableItor79.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor81 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean82 = strComparableItor81.hasNext();
        strComparableItor79.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor81);
        strComparableItor65.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor79);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor56.setIterator((int) (byte) 10, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor79);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertNotNull(wildcardItorList45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(wildcardComparator51);
        org.junit.Assert.assertNotNull(wildcardItorList55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(wildcardComparator60);
        org.junit.Assert.assertNull(wildcardComparator61);
        org.junit.Assert.assertNotNull(wildcardItorList63);
        org.junit.Assert.assertNotNull(wildcardItorList66);
        org.junit.Assert.assertNotNull(wildcardItorList67);
        org.junit.Assert.assertNotNull(wildcardItorList69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(wildcardItorList73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(wildcardItorList75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(wildcardComparator78);
        org.junit.Assert.assertNotNull(wildcardItorList80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0219");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        boolean boolean23 = strComparableItor20.hasNext();
        strComparableItor2.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        // The following exception was thrown during execution in test generation
        try {
            int int25 = strComparableItor2.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0220");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor6.getIterators();
        boolean boolean9 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.lang.Class<?> wildcardClass12 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0221");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator5 = strComparableItor2.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor2.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator7 = strComparableItor2.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor2.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNull(wildcardComparator7);
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0222");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean1 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        boolean boolean3 = strComparableItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0223");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        java.lang.Class<?> wildcardClass14 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0224");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            int int14 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0225");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableItor40.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor44 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList45 = strComparableItor44.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor46 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean47 = strComparableItor46.hasNext();
        strComparableItor44.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        boolean boolean49 = strComparableItor46.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator51 = strComparableItor38.getComparator();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor54 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList55 = strComparableItor54.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor56 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableItor56.hasNext();
        strComparableItor54.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor56);
        boolean boolean59 = strComparableItor56.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator60 = strComparableItor56.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator61 = strComparableItor56.getComparator();
        strComparableItor17.setIterator((int) (short) 1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor56);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList63 = strComparableItor56.getIterators();
        java.lang.Class<?> wildcardClass64 = strComparableItor56.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertNotNull(wildcardItorList45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(wildcardComparator51);
        org.junit.Assert.assertNotNull(wildcardItorList55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(wildcardComparator60);
        org.junit.Assert.assertNull(wildcardComparator61);
        org.junit.Assert.assertNotNull(wildcardItorList63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0226");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        boolean boolean23 = strComparableItor20.hasNext();
        strComparableItor2.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable25 = strComparableItor2.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0227");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        boolean boolean8 = strComparableItor0.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator9 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator10 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardComparator9);
        org.junit.Assert.assertNull(wildcardComparator10);
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0228");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        boolean boolean16 = strComparableItor6.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        boolean boolean28 = strComparableItor25.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor30.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor30.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableItor35.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor33.getIterators();
        boolean boolean39 = strComparableItor33.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor33.getIterators();
        boolean boolean41 = strComparableItor33.hasNext();
        strComparableItor30.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
        boolean boolean44 = strComparableItor30.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0229");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator5 = strComparableItor2.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor2.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor2.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNull(wildcardComparator6);
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0230");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor2.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable18 = strComparableItor2.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator17);
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0231");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor1 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor1.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean4 = strComparableItor3.hasNext();
        strComparableItor1.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor1.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor1.getIterators();
        boolean boolean8 = strComparableItor1.hasNext();
        boolean boolean9 = strComparableItor1.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator10 = strComparableItor1.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable12 = strComparableItor1.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(wildcardComparator10);
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0232");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator7 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableItor11.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor9.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor9.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) (short) 100, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(wildcardComparator7);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNull(wildcardComparator15);
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0233");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableItor22.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableItor28.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor26.getIterators();
        boolean boolean32 = strComparableItor26.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor26.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor26.getIterators();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor37.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableItor39.hasNext();
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor37.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableItor45.hasNext();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor49.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor51 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean52 = strComparableItor51.hasNext();
        strComparableItor49.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor51);
        boolean boolean54 = strComparableItor51.hasNext();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor51);
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor37);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor58 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList59 = strComparableItor58.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor60 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean61 = strComparableItor60.hasNext();
        strComparableItor58.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor60);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList63 = strComparableItor58.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor64 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList65 = strComparableItor64.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor66 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean67 = strComparableItor66.hasNext();
        strComparableItor64.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor66);
        boolean boolean69 = strComparableItor66.hasNext();
        strComparableItor58.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor66);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator71 = strComparableItor58.getComparator();
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor58);
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor58);
        // The following exception was thrown during execution in test generation
        try {
            int int74 = strComparableItor58.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertNotNull(wildcardItorList50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(wildcardItorList59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(wildcardItorList63);
        org.junit.Assert.assertNotNull(wildcardItorList65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(wildcardComparator71);
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0234");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor20.getIterators();
        boolean boolean23 = strComparableItor20.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor20.getIterators();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        // The following exception was thrown during execution in test generation
        try {
            int int26 = strComparableItor20.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList24);
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0235");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        boolean boolean3 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor7.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableItor9.hasNext();
        strComparableItor7.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList12 = strComparableItor7.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableItor15.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor15);
        boolean boolean18 = strComparableItor15.hasNext();
        strComparableItor7.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor15);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator20 = strComparableItor15.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor15.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardItorList12);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(wildcardComparator20);
        org.junit.Assert.assertNotNull(wildcardItorList21);
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0236");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        boolean boolean22 = strComparableItor16.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor16.getIterators();
        boolean boolean24 = strComparableItor16.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        boolean boolean27 = strComparableItor13.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor13.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0237");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean1 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor4.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean7 = strComparableItor6.hasNext();
        strComparableItor4.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor4.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor10.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableItor12.hasNext();
        strComparableItor10.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor12);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor10.getIterators();
        boolean boolean16 = strComparableItor10.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor10.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor10.getIterators();
        strComparableItor4.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor4.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor28.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableItor30.hasNext();
        strComparableItor28.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor28.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor34 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor34.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableItor36.hasNext();
        strComparableItor34.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        boolean boolean39 = strComparableItor36.hasNext();
        strComparableItor28.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        strComparableItor4.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor4.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardItorList43);
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0238");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator5 = strComparableItor2.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor2.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator7 = strComparableItor2.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor2.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable9 = strComparableItor2.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNull(wildcardComparator7);
        org.junit.Assert.assertNotNull(wildcardItorList8);
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0239");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator5 = strComparableItor2.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor2.getIterators();
        boolean boolean7 = strComparableItor2.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList12 = strComparableItor11.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableItor13.hasNext();
        strComparableItor11.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor11.getIterators();
        boolean boolean17 = strComparableItor11.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor11.getIterators();
        boolean boolean19 = strComparableItor11.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator21 = strComparableItor8.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor8.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertNotNull(wildcardItorList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(wildcardComparator21);
        org.junit.Assert.assertNull(wildcardComparator22);
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0240");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        boolean boolean20 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableItor26.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor30.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor32 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableItor32.hasNext();
        strComparableItor30.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor32);
        boolean boolean35 = strComparableItor32.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor32);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator37 = strComparableItor24.getComparator();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator39 = strComparableItor22.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList41 = strComparableItor40.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor42 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableItor42.hasNext();
        strComparableItor40.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor42);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList45 = strComparableItor40.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList46 = strComparableItor40.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor47.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor49.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor51 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean52 = strComparableItor51.hasNext();
        strComparableItor49.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor51);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor49.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor55 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList56 = strComparableItor55.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableItor57.hasNext();
        strComparableItor55.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor57);
        boolean boolean60 = strComparableItor57.hasNext();
        strComparableItor49.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor57);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator62 = strComparableItor49.getComparator();
        strComparableItor47.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor65 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList66 = strComparableItor65.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor67 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean68 = strComparableItor67.hasNext();
        strComparableItor65.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor67);
        boolean boolean70 = strComparableItor67.hasNext();
        strComparableItor49.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor67);
        strComparableItor40.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor67);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList73 = strComparableItor67.getIterators();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor67);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) (byte) 10, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor67);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(wildcardComparator37);
        org.junit.Assert.assertNull(wildcardComparator39);
        org.junit.Assert.assertNotNull(wildcardItorList41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardItorList45);
        org.junit.Assert.assertNotNull(wildcardItorList46);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertNotNull(wildcardItorList50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardItorList54);
        org.junit.Assert.assertNotNull(wildcardItorList56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(wildcardComparator62);
        org.junit.Assert.assertNotNull(wildcardItorList66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(wildcardItorList73);
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0241");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        // The following exception was thrown during execution in test generation
        try {
            int int17 = strComparableItor2.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0242");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList12 = strComparableItor11.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableItor13.hasNext();
        strComparableItor11.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor11.getIterators();
        boolean boolean17 = strComparableItor11.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor11.getIterators();
        boolean boolean19 = strComparableItor11.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator21 = strComparableItor8.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor28.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableItor30.hasNext();
        strComparableItor28.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor28.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor34 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor34.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableItor36.hasNext();
        strComparableItor34.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        boolean boolean39 = strComparableItor36.hasNext();
        strComparableItor28.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor41.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor44 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList45 = strComparableItor44.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor46 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean47 = strComparableItor46.hasNext();
        strComparableItor44.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList49 = strComparableItor44.getIterators();
        boolean boolean50 = strComparableItor44.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor44.getIterators();
        boolean boolean52 = strComparableItor44.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor44);
        strComparableItor28.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        boolean boolean55 = strComparableItor41.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertNotNull(wildcardItorList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(wildcardComparator21);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertNotNull(wildcardItorList45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardItorList49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0243");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor14.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor14.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0244");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator5 = strComparableItor2.getComparator();
        boolean boolean6 = strComparableItor2.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator7 = strComparableItor2.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor8.getIterators();
        boolean boolean14 = strComparableItor8.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(wildcardComparator7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0245");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator8 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor9.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor12.getIterators();
        boolean boolean18 = strComparableItor12.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor12.getIterators();
        boolean boolean20 = strComparableItor12.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor12);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor9.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor9.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNull(wildcardComparator8);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNotNull(wildcardItorList23);
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0246");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        boolean boolean7 = strComparableItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            int int8 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0247");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableItor22.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableItor28.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        boolean boolean31 = strComparableItor28.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor20.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator36 = strComparableItor0.getComparator();
        java.lang.Class<?> wildcardClass37 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertNull(wildcardComparator36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0248");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean1 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor4.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor4.getIterators();
        boolean boolean7 = strComparableItor4.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor4.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0249");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            int int9 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList8);
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0250");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        boolean boolean22 = strComparableItor16.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor16.getIterators();
        boolean boolean24 = strComparableItor16.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        boolean boolean27 = strComparableItor13.hasNext();
        boolean boolean28 = strComparableItor13.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor29.getIterators();
        boolean boolean35 = strComparableItor29.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor29.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardItorList36);
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0251");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor18.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableItor35.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        boolean boolean38 = strComparableItor35.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor27.getComparator();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableItor45.hasNext();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        boolean boolean48 = strComparableItor45.hasNext();
        strComparableItor27.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor45.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable53 = strComparableItor45.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator17);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(wildcardComparator40);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardItorList51);
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0252");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor39.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableItor43.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList46 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor47.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableItor49.hasNext();
        strComparableItor47.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        boolean boolean52 = strComparableItor49.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator54 = strComparableItor41.getComparator();
        strComparableItor39.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor58 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList59 = strComparableItor58.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList60 = strComparableItor58.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor61 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList62 = strComparableItor61.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor63 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean64 = strComparableItor63.hasNext();
        strComparableItor61.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor63);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList66 = strComparableItor61.getIterators();
        boolean boolean67 = strComparableItor61.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList68 = strComparableItor61.getIterators();
        boolean boolean69 = strComparableItor61.hasNext();
        strComparableItor58.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor61);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator71 = strComparableItor58.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator72 = strComparableItor58.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator73 = strComparableItor58.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator74 = strComparableItor58.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator(100, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor58);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardItorList46);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(wildcardComparator54);
        org.junit.Assert.assertNotNull(wildcardItorList59);
        org.junit.Assert.assertNotNull(wildcardItorList60);
        org.junit.Assert.assertNotNull(wildcardItorList62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardItorList66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardItorList68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(wildcardComparator71);
        org.junit.Assert.assertNull(wildcardComparator72);
        org.junit.Assert.assertNull(wildcardComparator73);
        org.junit.Assert.assertNull(wildcardComparator74);
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0253");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor7.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableItor11.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableItor17.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        boolean boolean20 = strComparableItor17.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor9.getComparator();
        strComparableItor7.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableItor27.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean30 = strComparableItor27.hasNext();
        strComparableItor9.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean33 = strComparableItor27.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor27.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass35 = wildcardComparator34.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(wildcardComparator34);
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0254");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator23 = strComparableItor20.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator24 = strComparableItor20.getComparator();
        strComparableItor0.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        // The following exception was thrown during execution in test generation
        try {
            int int26 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardComparator23);
        org.junit.Assert.assertNull(wildcardComparator24);
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0255");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor7.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableItor9.hasNext();
        strComparableItor7.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList12 = strComparableItor7.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor7.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        boolean boolean27 = strComparableItor24.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator29 = strComparableItor16.getComparator();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor32 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor32.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor34 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableItor34.hasNext();
        strComparableItor32.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor34);
        boolean boolean37 = strComparableItor34.hasNext();
        strComparableItor16.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor34);
        strComparableItor7.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor34);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator(10, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor7);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardItorList12);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(wildcardComparator29);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0256");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator5 = strComparableItor2.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor2.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator7 = strComparableItor2.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator8 = strComparableItor2.getComparator();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor2.setIterator((int) ' ', strComparableItor10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNull(wildcardComparator7);
        org.junit.Assert.assertNull(wildcardComparator8);
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0257");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor8.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor8.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0258");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableItor26.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor30.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor32 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableItor32.hasNext();
        strComparableItor30.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor32);
        boolean boolean35 = strComparableItor32.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor32);
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        strComparableItor0.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor24.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor24.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardItorList39);
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0259");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNotNull(wildcardItorList7);
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0260");
        org.apache.commons.collections4.iterators.CollatingIterator<java.util.Iterator<java.lang.Comparable<java.lang.String>>> strComparableItorItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.util.Iterator<java.lang.Comparable<java.lang.String>>>();
        java.lang.Class<?> wildcardClass1 = strComparableItorItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0261");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator8 = strComparableItor0.getComparator();
        boolean boolean9 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList12 = strComparableItor11.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor11.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor14.getIterators();
        boolean boolean20 = strComparableItor14.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor14.getIterators();
        boolean boolean22 = strComparableItor14.hasNext();
        strComparableItor11.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean24 = strComparableItor11.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator(10, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNull(wildcardComparator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList12);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0262");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        boolean boolean8 = strComparableItor0.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator9 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardComparator9);
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0263");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator9 = strComparableItor8.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor8.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNull(wildcardComparator9);
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0264");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            int int14 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0265");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator9 = strComparableItor8.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        // The following exception was thrown during execution in test generation
        try {
            int int11 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNull(wildcardComparator9);
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0266");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        boolean boolean8 = strComparableItor0.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator9 = strComparableItor0.getComparator();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.addIterator(strComparableItor10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardComparator9);
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0267");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator20 = strComparableItor6.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor6.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(wildcardComparator20);
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0268");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean1 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator4 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor5.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableItor7.hasNext();
        strComparableItor5.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor7);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor5.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList12 = strComparableItor11.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableItor13.hasNext();
        strComparableItor11.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor11.getIterators();
        boolean boolean17 = strComparableItor11.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor11.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor11.getIterators();
        strComparableItor5.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor5.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor28.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableItor30.hasNext();
        strComparableItor28.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor28.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor34 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor34.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableItor36.hasNext();
        strComparableItor34.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        boolean boolean39 = strComparableItor36.hasNext();
        strComparableItor28.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        strComparableItor5.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableItor45.hasNext();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor49.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor51 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean52 = strComparableItor51.hasNext();
        strComparableItor49.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor51);
        boolean boolean54 = strComparableItor51.hasNext();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor51);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator56 = strComparableItor43.getComparator();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor59 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList60 = strComparableItor59.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor61 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean62 = strComparableItor61.hasNext();
        strComparableItor59.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor61);
        boolean boolean64 = strComparableItor61.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator65 = strComparableItor61.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator66 = strComparableItor61.getComparator();
        strComparableItor22.setIterator((int) (short) 1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor61);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor68 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList69 = strComparableItor68.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor70 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean71 = strComparableItor70.hasNext();
        strComparableItor68.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor70);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator73 = strComparableItor70.getComparator();
        boolean boolean74 = strComparableItor70.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor70);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertNull(wildcardComparator4);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertNotNull(wildcardItorList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertNotNull(wildcardItorList50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(wildcardComparator56);
        org.junit.Assert.assertNotNull(wildcardItorList60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(wildcardComparator65);
        org.junit.Assert.assertNull(wildcardComparator66);
        org.junit.Assert.assertNotNull(wildcardItorList69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(wildcardComparator73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0269");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            int int8 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0270");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableItor22.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableItor28.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        boolean boolean31 = strComparableItor28.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor36.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean39 = strComparableItor38.hasNext();
        strComparableItor36.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList41 = strComparableItor36.getIterators();
        boolean boolean42 = strComparableItor36.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor36.getIterators();
        boolean boolean44 = strComparableItor36.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        boolean boolean47 = strComparableItor33.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        // The following exception was thrown during execution in test generation
        try {
            int int49 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardItorList41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0271");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator23 = strComparableItor20.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator24 = strComparableItor20.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator25 = strComparableItor20.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor20.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator(10, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardComparator23);
        org.junit.Assert.assertNull(wildcardComparator24);
        org.junit.Assert.assertNull(wildcardComparator25);
        org.junit.Assert.assertNotNull(wildcardItorList26);
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0272");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable18 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator17);
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0273");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator5 = strComparableItor2.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor2.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor7.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableItor9.hasNext();
        strComparableItor7.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
        boolean boolean12 = strComparableItor9.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor9.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator14 = strComparableItor9.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNull(wildcardComparator14);
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0274");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor0.getIterators();
        java.lang.Class<?> wildcardClass10 = wildcardItorList9.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0275");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable3 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0276");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor22.getIterators();
        boolean boolean28 = strComparableItor22.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor22.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor22.getIterators();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertNotNull(wildcardItorList30);
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0277");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor2.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            int int18 = strComparableItor2.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator17);
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0278");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        boolean boolean5 = strComparableItor2.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor7.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableItor9.hasNext();
        strComparableItor7.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList12 = strComparableItor7.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableItor15.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor15);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor13.getIterators();
        boolean boolean19 = strComparableItor13.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor13.getIterators();
        strComparableItor7.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor2.setIterator((int) 'a', (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardItorList12);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNotNull(wildcardItorList21);
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0279");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor7.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableItor9.hasNext();
        strComparableItor7.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList12 = strComparableItor7.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor7.getComparator();
        boolean boolean14 = strComparableItor7.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardItorList12);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0280");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableItor40.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor44 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList45 = strComparableItor44.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor46 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean47 = strComparableItor46.hasNext();
        strComparableItor44.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        boolean boolean49 = strComparableItor46.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator51 = strComparableItor38.getComparator();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor54 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList55 = strComparableItor54.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor56 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableItor56.hasNext();
        strComparableItor54.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor56);
        boolean boolean59 = strComparableItor56.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator60 = strComparableItor56.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator61 = strComparableItor56.getComparator();
        strComparableItor17.setIterator((int) (short) 1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor56);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor56.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertNotNull(wildcardItorList45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(wildcardComparator51);
        org.junit.Assert.assertNotNull(wildcardItorList55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(wildcardComparator60);
        org.junit.Assert.assertNull(wildcardComparator61);
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0281");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator5 = strComparableItor2.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor2.getIterators();
        boolean boolean7 = strComparableItor2.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableItor11.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableItor17.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        boolean boolean20 = strComparableItor17.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableItor27.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor25.getIterators();
        boolean boolean31 = strComparableItor25.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor25.getIterators();
        boolean boolean33 = strComparableItor25.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        boolean boolean36 = strComparableItor22.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor2.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0282");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable17 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0283");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        boolean boolean22 = strComparableItor16.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor16.getIterators();
        boolean boolean24 = strComparableItor16.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        // The following exception was thrown during execution in test generation
        try {
            int int27 = strComparableItor13.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0284");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        boolean boolean3 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor4.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean7 = strComparableItor6.hasNext();
        strComparableItor4.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor4.getIterators();
        boolean boolean10 = strComparableItor4.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor4.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator12 = strComparableItor4.getComparator();
        boolean boolean13 = strComparableItor4.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNull(wildcardComparator12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0285");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        boolean boolean22 = strComparableItor16.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor16.getIterators();
        boolean boolean24 = strComparableItor16.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator32 = strComparableItor29.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator33 = strComparableItor29.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor29.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor29.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor37.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableItor39.hasNext();
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor37.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableItor45.hasNext();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        boolean boolean48 = strComparableItor45.hasNext();
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator50 = strComparableItor45.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor45.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(wildcardComparator32);
        org.junit.Assert.assertNull(wildcardComparator33);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(wildcardComparator50);
        org.junit.Assert.assertNotNull(wildcardItorList51);
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0286");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor7.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableItor11.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableItor17.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        boolean boolean20 = strComparableItor17.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor9.getComparator();
        strComparableItor7.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableItor27.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean30 = strComparableItor27.hasNext();
        strComparableItor9.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor27.getIterators();
        boolean boolean34 = strComparableItor27.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            int int35 = strComparableItor27.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0287");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        boolean boolean16 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableItor23.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor21.getIterators();
        boolean boolean27 = strComparableItor21.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor21.getIterators();
        boolean boolean29 = strComparableItor21.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator31 = strComparableItor18.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor32 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor32.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor34 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableItor34.hasNext();
        strComparableItor32.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor34);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor32.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableItor40.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor44 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList45 = strComparableItor44.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor46 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean47 = strComparableItor46.hasNext();
        strComparableItor44.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        boolean boolean49 = strComparableItor46.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        strComparableItor32.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator52 = strComparableItor38.getComparator();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) (short) 100, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(wildcardComparator31);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertNotNull(wildcardItorList45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(wildcardComparator52);
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0288");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        boolean boolean3 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor5.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor5.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor8.getIterators();
        boolean boolean14 = strComparableItor8.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor8.getIterators();
        boolean boolean16 = strComparableItor8.hasNext();
        strComparableItor5.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator18 = strComparableItor5.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor19.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableItor21.hasNext();
        strComparableItor19.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
        strComparableItor5.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor19.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableItor35.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        boolean boolean38 = strComparableItor35.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor27.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator41 = strComparableItor27.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableItor45.hasNext();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator48 = strComparableItor45.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator49 = strComparableItor45.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator50 = strComparableItor45.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator51 = strComparableItor45.getComparator();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        strComparableItor19.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(wildcardComparator18);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(wildcardComparator40);
        org.junit.Assert.assertNull(wildcardComparator41);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(wildcardComparator48);
        org.junit.Assert.assertNull(wildcardComparator49);
        org.junit.Assert.assertNull(wildcardComparator50);
        org.junit.Assert.assertNull(wildcardComparator51);
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0289");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor7.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableItor11.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableItor17.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        boolean boolean20 = strComparableItor17.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor9.getComparator();
        strComparableItor7.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableItor27.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean30 = strComparableItor27.hasNext();
        strComparableItor9.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor27.getIterators();
        boolean boolean34 = strComparableItor27.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor36.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean39 = strComparableItor38.hasNext();
        strComparableItor36.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList41 = strComparableItor36.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor36.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor36.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor27.setIterator((int) (byte) 1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardItorList41);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertNotNull(wildcardItorList43);
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0290");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        boolean boolean22 = strComparableItor16.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor16.getIterators();
        boolean boolean24 = strComparableItor16.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator32 = strComparableItor29.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator33 = strComparableItor29.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor29.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor29.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        // The following exception was thrown during execution in test generation
        try {
            int int37 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(wildcardComparator32);
        org.junit.Assert.assertNull(wildcardComparator33);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertNotNull(wildcardItorList35);
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0291");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator8 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor10.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableItor12.hasNext();
        strComparableItor10.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor12);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor10.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        boolean boolean22 = strComparableItor16.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor16.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor16.getIterators();
        strComparableItor10.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        boolean boolean26 = strComparableItor16.hasNext();
        boolean boolean27 = strComparableItor16.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((-1), (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNull(wildcardComparator8);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0292");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableItor26.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor30.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor32 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableItor32.hasNext();
        strComparableItor30.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor32);
        boolean boolean35 = strComparableItor32.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor32);
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        strComparableItor0.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator(10, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardItorList39);
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0293");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor39.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableItor43.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList46 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor47.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableItor49.hasNext();
        strComparableItor47.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        boolean boolean52 = strComparableItor49.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator54 = strComparableItor41.getComparator();
        strComparableItor39.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList58 = strComparableItor57.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor59 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableItor59.hasNext();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor59);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList62 = strComparableItor57.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor63 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList64 = strComparableItor63.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor65 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableItor65.hasNext();
        strComparableItor63.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        boolean boolean68 = strComparableItor65.hasNext();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor70 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList71 = strComparableItor70.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList72 = strComparableItor70.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor73 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList74 = strComparableItor73.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor75 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean76 = strComparableItor75.hasNext();
        strComparableItor73.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor75);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList78 = strComparableItor73.getIterators();
        boolean boolean79 = strComparableItor73.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList80 = strComparableItor73.getIterators();
        boolean boolean81 = strComparableItor73.hasNext();
        strComparableItor70.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor73);
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor70);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor84 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList85 = strComparableItor84.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor86 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean87 = strComparableItor86.hasNext();
        strComparableItor84.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor86);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator89 = strComparableItor86.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator90 = strComparableItor86.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator91 = strComparableItor86.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList92 = strComparableItor86.getIterators();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor86);
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor57);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator95 = strComparableItor57.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor57.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardItorList46);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(wildcardComparator54);
        org.junit.Assert.assertNotNull(wildcardItorList58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardItorList62);
        org.junit.Assert.assertNotNull(wildcardItorList64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardItorList71);
        org.junit.Assert.assertNotNull(wildcardItorList72);
        org.junit.Assert.assertNotNull(wildcardItorList74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(wildcardItorList78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(wildcardItorList80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(wildcardItorList85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNull(wildcardComparator89);
        org.junit.Assert.assertNull(wildcardComparator90);
        org.junit.Assert.assertNull(wildcardComparator91);
        org.junit.Assert.assertNotNull(wildcardItorList92);
        org.junit.Assert.assertNull(wildcardComparator95);
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0294");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor7.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableItor11.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableItor17.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        boolean boolean20 = strComparableItor17.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor9.getComparator();
        strComparableItor7.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableItor27.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean30 = strComparableItor27.hasNext();
        strComparableItor9.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean33 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor35.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableItor40.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor38.getIterators();
        boolean boolean44 = strComparableItor38.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList45 = strComparableItor38.getIterators();
        boolean boolean46 = strComparableItor38.hasNext();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator48 = strComparableItor35.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor49.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor51 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean52 = strComparableItor51.hasNext();
        strComparableItor49.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor51);
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor55 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList56 = strComparableItor55.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableItor57.hasNext();
        strComparableItor55.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor57);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList60 = strComparableItor55.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor61 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList62 = strComparableItor61.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor63 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean64 = strComparableItor63.hasNext();
        strComparableItor61.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor63);
        boolean boolean66 = strComparableItor63.hasNext();
        strComparableItor55.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor63);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor68 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList69 = strComparableItor68.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList70 = strComparableItor68.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor71 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList72 = strComparableItor71.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor73 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean74 = strComparableItor73.hasNext();
        strComparableItor71.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor73);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList76 = strComparableItor71.getIterators();
        boolean boolean77 = strComparableItor71.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList78 = strComparableItor71.getIterators();
        boolean boolean79 = strComparableItor71.hasNext();
        strComparableItor68.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor71);
        strComparableItor55.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor68);
        boolean boolean82 = strComparableItor68.hasNext();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor68);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator(1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardItorList45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(wildcardComparator48);
        org.junit.Assert.assertNotNull(wildcardItorList50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardItorList56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardItorList60);
        org.junit.Assert.assertNotNull(wildcardItorList62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(wildcardItorList69);
        org.junit.Assert.assertNotNull(wildcardItorList70);
        org.junit.Assert.assertNotNull(wildcardItorList72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(wildcardItorList76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(wildcardItorList78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0295");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        boolean boolean3 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator7 = strComparableItor0.getComparator();
        java.lang.Class<?> wildcardClass8 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNull(wildcardComparator7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0296");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable41 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertNotNull(wildcardItorList40);
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0297");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor7.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableItor11.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableItor17.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        boolean boolean20 = strComparableItor17.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor9.getComparator();
        strComparableItor7.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableItor27.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean30 = strComparableItor27.hasNext();
        strComparableItor9.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor27.getIterators();
        java.lang.Class<?> wildcardClass34 = wildcardItorList33.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0298");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor39.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableItor41.hasNext();
        strComparableItor39.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor39.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList46 = strComparableItor45.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableItor47.hasNext();
        strComparableItor45.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor47);
        boolean boolean50 = strComparableItor47.hasNext();
        strComparableItor39.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor47);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor52 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList53 = strComparableItor52.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor52.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor55 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList56 = strComparableItor55.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableItor57.hasNext();
        strComparableItor55.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor57);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList60 = strComparableItor55.getIterators();
        boolean boolean61 = strComparableItor55.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList62 = strComparableItor55.getIterators();
        boolean boolean63 = strComparableItor55.hasNext();
        strComparableItor52.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor55);
        strComparableItor39.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor52);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor66 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList67 = strComparableItor66.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor68 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean69 = strComparableItor68.hasNext();
        strComparableItor66.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor68);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator71 = strComparableItor68.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator72 = strComparableItor68.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator73 = strComparableItor68.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList74 = strComparableItor68.getIterators();
        strComparableItor39.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor68);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList76 = strComparableItor68.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) (byte) 100, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor68);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertNotNull(wildcardItorList46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardItorList53);
        org.junit.Assert.assertNotNull(wildcardItorList54);
        org.junit.Assert.assertNotNull(wildcardItorList56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardItorList60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(wildcardItorList62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(wildcardItorList67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(wildcardComparator71);
        org.junit.Assert.assertNull(wildcardComparator72);
        org.junit.Assert.assertNull(wildcardComparator73);
        org.junit.Assert.assertNotNull(wildcardItorList74);
        org.junit.Assert.assertNotNull(wildcardItorList76);
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0299");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable17 = strComparableItor2.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0300");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor6.getIterators();
        boolean boolean9 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList12 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableItor15.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor15);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor13.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertNotNull(wildcardItorList12);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertNotNull(wildcardItorList19);
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0301");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        boolean boolean13 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable15 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0302");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        boolean boolean22 = strComparableItor16.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor16.getIterators();
        boolean boolean24 = strComparableItor16.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator32 = strComparableItor29.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator33 = strComparableItor29.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor29.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor29.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        boolean boolean37 = strComparableItor29.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable38 = strComparableItor29.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(wildcardComparator32);
        org.junit.Assert.assertNull(wildcardComparator33);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0303");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable21 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0304");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor18.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableItor35.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        boolean boolean38 = strComparableItor35.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor27.getComparator();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableItor45.hasNext();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        boolean boolean48 = strComparableItor45.hasNext();
        strComparableItor27.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor45.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor54 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor55 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList56 = strComparableItor55.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableItor57.hasNext();
        strComparableItor55.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor57);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList60 = strComparableItor55.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList61 = strComparableItor55.getIterators();
        boolean boolean62 = strComparableItor55.hasNext();
        boolean boolean63 = strComparableItor55.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator64 = strComparableItor55.getComparator();
        strComparableItor54.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor55);
        strComparableItor0.setIterator(1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor54);
        boolean boolean67 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor68 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList69 = strComparableItor68.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor70 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList71 = strComparableItor70.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor72 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean73 = strComparableItor72.hasNext();
        strComparableItor70.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor72);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList75 = strComparableItor70.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor76 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList77 = strComparableItor76.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor78 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean79 = strComparableItor78.hasNext();
        strComparableItor76.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor78);
        boolean boolean81 = strComparableItor78.hasNext();
        strComparableItor70.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor78);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator83 = strComparableItor70.getComparator();
        strComparableItor68.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor70);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor86 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList87 = strComparableItor86.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor88 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean89 = strComparableItor88.hasNext();
        strComparableItor86.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor88);
        boolean boolean91 = strComparableItor88.hasNext();
        strComparableItor70.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor88);
        boolean boolean93 = strComparableItor70.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor70);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator17);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(wildcardComparator40);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertNotNull(wildcardItorList56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardItorList60);
        org.junit.Assert.assertNotNull(wildcardItorList61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(wildcardComparator64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardItorList69);
        org.junit.Assert.assertNotNull(wildcardItorList71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(wildcardItorList75);
        org.junit.Assert.assertNotNull(wildcardItorList77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNull(wildcardComparator83);
        org.junit.Assert.assertNotNull(wildcardItorList87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0305");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        boolean boolean23 = strComparableItor20.hasNext();
        strComparableItor2.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        // The following exception was thrown during execution in test generation
        try {
            int int25 = strComparableItor20.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0306");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor22.getIterators();
        boolean boolean28 = strComparableItor22.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor22.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor22.getIterators();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable33 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertNotNull(wildcardItorList30);
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0307");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator20 = strComparableItor6.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        boolean boolean27 = strComparableItor24.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator28 = strComparableItor24.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator29 = strComparableItor24.getComparator();
        boolean boolean30 = strComparableItor24.hasNext();
        strComparableItor6.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor6.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            int int34 = strComparableItor6.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(wildcardComparator20);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(wildcardComparator28);
        org.junit.Assert.assertNull(wildcardComparator29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList33);
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0308");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator14 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator16 = strComparableItor0.getComparator();
        boolean boolean17 = strComparableItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            int int18 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNull(wildcardComparator14);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0309");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator20 = strComparableItor6.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass21 = wildcardComparator20.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(wildcardComparator20);
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0310");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableItor11.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor9.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor9.getIterators();
        boolean boolean16 = strComparableItor9.hasNext();
        boolean boolean17 = strComparableItor9.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator18 = strComparableItor9.getComparator();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(wildcardComparator18);
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0311");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator17);
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0312");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor18.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableItor35.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        boolean boolean38 = strComparableItor35.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor27.getComparator();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableItor45.hasNext();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        boolean boolean48 = strComparableItor45.hasNext();
        strComparableItor27.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor45.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor54 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor55 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList56 = strComparableItor55.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableItor57.hasNext();
        strComparableItor55.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor57);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList60 = strComparableItor55.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList61 = strComparableItor55.getIterators();
        boolean boolean62 = strComparableItor55.hasNext();
        boolean boolean63 = strComparableItor55.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator64 = strComparableItor55.getComparator();
        strComparableItor54.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor55);
        strComparableItor0.setIterator(1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor54);
        boolean boolean67 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor69 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList70 = strComparableItor69.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor71 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean72 = strComparableItor71.hasNext();
        strComparableItor69.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor71);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList74 = strComparableItor69.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) (byte) 1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor69);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator17);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(wildcardComparator40);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertNotNull(wildcardItorList56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardItorList60);
        org.junit.Assert.assertNotNull(wildcardItorList61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(wildcardComparator64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardItorList70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(wildcardItorList74);
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0313");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        // The following exception was thrown during execution in test generation
        try {
            int int16 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0314");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        boolean boolean5 = strComparableItor2.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor2.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor7.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableItor9.hasNext();
        strComparableItor7.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator12 = strComparableItor9.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor9.getIterators();
        boolean boolean14 = strComparableItor9.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(wildcardComparator12);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0315");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor7.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableItor11.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableItor17.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        boolean boolean20 = strComparableItor17.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor9.getComparator();
        strComparableItor7.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableItor27.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean30 = strComparableItor27.hasNext();
        strComparableItor9.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean33 = strComparableItor27.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor27.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0316");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor6.getIterators();
        boolean boolean9 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList12 = strComparableItor6.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable13 = strComparableItor6.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertNotNull(wildcardItorList12);
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0317");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        boolean boolean17 = strComparableItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            int int18 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0318");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        boolean boolean2 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor10.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        boolean boolean23 = strComparableItor20.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator25 = strComparableItor12.getComparator();
        strComparableItor10.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor12);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor28.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableItor30.hasNext();
        strComparableItor28.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
        boolean boolean33 = strComparableItor30.hasNext();
        strComparableItor12.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
        boolean boolean36 = strComparableItor30.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(wildcardComparator25);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0319");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor0.getIterators();
        java.lang.Class<?> wildcardClass39 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0320");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        boolean boolean3 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0321");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean1 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator4 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor5.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableItor7.hasNext();
        strComparableItor5.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor7);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor5.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor5.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableItor22.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        boolean boolean25 = strComparableItor22.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator27 = strComparableItor14.getComparator();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor30.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor32 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableItor32.hasNext();
        strComparableItor30.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor32);
        boolean boolean35 = strComparableItor32.hasNext();
        strComparableItor14.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor32);
        strComparableItor5.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor32);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor32.getIterators();
        boolean boolean39 = strComparableItor32.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertNull(wildcardComparator4);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(wildcardComparator27);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0322");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        // The following exception was thrown during execution in test generation
        try {
            int int38 = strComparableItor17.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0323");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor28.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableItor30.hasNext();
        strComparableItor28.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
        boolean boolean33 = strComparableItor30.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator35 = strComparableItor22.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator36 = strComparableItor22.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableItor40.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator43 = strComparableItor40.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator44 = strComparableItor40.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator45 = strComparableItor40.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator46 = strComparableItor40.getComparator();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        strComparableItor14.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        // The following exception was thrown during execution in test generation
        try {
            int int49 = strComparableItor14.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(wildcardComparator35);
        org.junit.Assert.assertNull(wildcardComparator36);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(wildcardComparator43);
        org.junit.Assert.assertNull(wildcardComparator44);
        org.junit.Assert.assertNull(wildcardComparator45);
        org.junit.Assert.assertNull(wildcardComparator46);
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0324");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        boolean boolean22 = strComparableItor16.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor16.getIterators();
        boolean boolean24 = strComparableItor16.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        boolean boolean27 = strComparableItor13.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor13.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            int int29 = strComparableItor13.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0325");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        boolean boolean22 = strComparableItor16.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor16.getIterators();
        boolean boolean24 = strComparableItor16.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        boolean boolean27 = strComparableItor13.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor30.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor32 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableItor32.hasNext();
        strComparableItor30.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor32);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator35 = strComparableItor32.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator36 = strComparableItor32.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator37 = strComparableItor32.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor32.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor13.setIterator((int) (byte) 100, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(wildcardComparator35);
        org.junit.Assert.assertNull(wildcardComparator36);
        org.junit.Assert.assertNull(wildcardComparator37);
        org.junit.Assert.assertNotNull(wildcardItorList38);
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0326");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableItor40.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor44 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList45 = strComparableItor44.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor46 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean47 = strComparableItor46.hasNext();
        strComparableItor44.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        boolean boolean49 = strComparableItor46.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator51 = strComparableItor38.getComparator();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable53 = strComparableItor38.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertNotNull(wildcardItorList45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(wildcardComparator51);
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0327");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor20.getIterators();
        boolean boolean23 = strComparableItor20.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor20.getIterators();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableItor28.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor26.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableItor37.hasNext();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor37);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableItor43.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        boolean boolean46 = strComparableItor43.hasNext();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator48 = strComparableItor35.getComparator();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor51 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList52 = strComparableItor51.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor53 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean54 = strComparableItor53.hasNext();
        strComparableItor51.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        boolean boolean56 = strComparableItor53.hasNext();
        strComparableItor35.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList59 = strComparableItor53.getIterators();
        boolean boolean60 = strComparableItor53.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor53.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(wildcardComparator48);
        org.junit.Assert.assertNotNull(wildcardItorList52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardItorList59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0328");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.lang.Class<?> wildcardClass20 = strComparableItor6.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0329");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor39.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableItor43.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList46 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor47.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableItor49.hasNext();
        strComparableItor47.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        boolean boolean52 = strComparableItor49.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator54 = strComparableItor41.getComparator();
        strComparableItor39.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList58 = strComparableItor57.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor59 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableItor59.hasNext();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor59);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList62 = strComparableItor57.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor63 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList64 = strComparableItor63.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor65 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableItor65.hasNext();
        strComparableItor63.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        boolean boolean68 = strComparableItor65.hasNext();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor70 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList71 = strComparableItor70.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList72 = strComparableItor70.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor73 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList74 = strComparableItor73.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor75 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean76 = strComparableItor75.hasNext();
        strComparableItor73.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor75);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList78 = strComparableItor73.getIterators();
        boolean boolean79 = strComparableItor73.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList80 = strComparableItor73.getIterators();
        boolean boolean81 = strComparableItor73.hasNext();
        strComparableItor70.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor73);
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor70);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor84 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList85 = strComparableItor84.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor86 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean87 = strComparableItor86.hasNext();
        strComparableItor84.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor86);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator89 = strComparableItor86.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator90 = strComparableItor86.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator91 = strComparableItor86.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList92 = strComparableItor86.getIterators();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor86);
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor57);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor41.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardItorList46);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(wildcardComparator54);
        org.junit.Assert.assertNotNull(wildcardItorList58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardItorList62);
        org.junit.Assert.assertNotNull(wildcardItorList64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardItorList71);
        org.junit.Assert.assertNotNull(wildcardItorList72);
        org.junit.Assert.assertNotNull(wildcardItorList74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(wildcardItorList78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(wildcardItorList80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(wildcardItorList85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNull(wildcardComparator89);
        org.junit.Assert.assertNull(wildcardComparator90);
        org.junit.Assert.assertNull(wildcardComparator91);
        org.junit.Assert.assertNotNull(wildcardItorList92);
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0330");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor18.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableItor35.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        boolean boolean38 = strComparableItor35.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor27.getComparator();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableItor45.hasNext();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        boolean boolean48 = strComparableItor45.hasNext();
        strComparableItor27.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor45.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        boolean boolean53 = strComparableItor45.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor54 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList55 = strComparableItor54.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor56 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableItor56.hasNext();
        strComparableItor54.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor56);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList59 = strComparableItor54.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor60 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList61 = strComparableItor60.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor62 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean63 = strComparableItor62.hasNext();
        strComparableItor60.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor62);
        boolean boolean65 = strComparableItor62.hasNext();
        strComparableItor54.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor62);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor67 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList68 = strComparableItor67.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList69 = strComparableItor67.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor70 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList71 = strComparableItor70.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor72 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean73 = strComparableItor72.hasNext();
        strComparableItor70.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor72);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList75 = strComparableItor70.getIterators();
        boolean boolean76 = strComparableItor70.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList77 = strComparableItor70.getIterators();
        boolean boolean78 = strComparableItor70.hasNext();
        strComparableItor67.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor70);
        strComparableItor54.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor67);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor45.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor67);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator17);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(wildcardComparator40);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardItorList55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardItorList59);
        org.junit.Assert.assertNotNull(wildcardItorList61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(wildcardItorList68);
        org.junit.Assert.assertNotNull(wildcardItorList69);
        org.junit.Assert.assertNotNull(wildcardItorList71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(wildcardItorList75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(wildcardItorList77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0331");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        boolean boolean16 = strComparableItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable17 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0332");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator5 = strComparableItor2.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor2.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor7.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableItor9.hasNext();
        strComparableItor7.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList12 = strComparableItor7.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableItor15.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor15);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor13.getIterators();
        boolean boolean19 = strComparableItor13.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor13.getIterators();
        strComparableItor7.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor7.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardItorList12);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList23);
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0333");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableItor22.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableItor28.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        boolean boolean31 = strComparableItor28.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor36.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean39 = strComparableItor38.hasNext();
        strComparableItor36.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList41 = strComparableItor36.getIterators();
        boolean boolean42 = strComparableItor36.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor36.getIterators();
        boolean boolean44 = strComparableItor36.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        boolean boolean47 = strComparableItor33.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        java.lang.Class<?> wildcardClass49 = strComparableItor33.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardItorList41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0334");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        // The following exception was thrown during execution in test generation
        try {
            int int20 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0335");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator5 = strComparableItor2.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor2.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator7 = strComparableItor2.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor2.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            int int9 = strComparableItor2.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNull(wildcardComparator7);
        org.junit.Assert.assertNotNull(wildcardItorList8);
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0336");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        boolean boolean7 = strComparableItor0.hasNext();
        boolean boolean8 = strComparableItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            int int9 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0337");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        boolean boolean17 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor18.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator24 = strComparableItor18.getComparator();
        boolean boolean25 = strComparableItor18.hasNext();
        boolean boolean26 = strComparableItor18.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNull(wildcardComparator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0338");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor39.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableItor43.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList46 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor47.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableItor49.hasNext();
        strComparableItor47.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        boolean boolean52 = strComparableItor49.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator54 = strComparableItor41.getComparator();
        strComparableItor39.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList58 = strComparableItor57.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor59 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableItor59.hasNext();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor59);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList62 = strComparableItor57.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor63 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList64 = strComparableItor63.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor65 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableItor65.hasNext();
        strComparableItor63.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        boolean boolean68 = strComparableItor65.hasNext();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor70 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList71 = strComparableItor70.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList72 = strComparableItor70.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor73 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList74 = strComparableItor73.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor75 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean76 = strComparableItor75.hasNext();
        strComparableItor73.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor75);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList78 = strComparableItor73.getIterators();
        boolean boolean79 = strComparableItor73.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList80 = strComparableItor73.getIterators();
        boolean boolean81 = strComparableItor73.hasNext();
        strComparableItor70.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor73);
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor70);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor84 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList85 = strComparableItor84.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor86 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean87 = strComparableItor86.hasNext();
        strComparableItor84.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor86);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator89 = strComparableItor86.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator90 = strComparableItor86.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator91 = strComparableItor86.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList92 = strComparableItor86.getIterators();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor86);
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor57);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator95 = strComparableItor57.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            int int96 = strComparableItor57.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardItorList46);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(wildcardComparator54);
        org.junit.Assert.assertNotNull(wildcardItorList58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardItorList62);
        org.junit.Assert.assertNotNull(wildcardItorList64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardItorList71);
        org.junit.Assert.assertNotNull(wildcardItorList72);
        org.junit.Assert.assertNotNull(wildcardItorList74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(wildcardItorList78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(wildcardItorList80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(wildcardItorList85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNull(wildcardComparator89);
        org.junit.Assert.assertNull(wildcardComparator90);
        org.junit.Assert.assertNull(wildcardComparator91);
        org.junit.Assert.assertNotNull(wildcardItorList92);
        org.junit.Assert.assertNull(wildcardComparator95);
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0339");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0340");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableItor40.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor44 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList45 = strComparableItor44.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor46 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean47 = strComparableItor46.hasNext();
        strComparableItor44.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        boolean boolean49 = strComparableItor46.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator51 = strComparableItor38.getComparator();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor54 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList55 = strComparableItor54.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor56 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableItor56.hasNext();
        strComparableItor54.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor56);
        boolean boolean59 = strComparableItor56.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator60 = strComparableItor56.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator61 = strComparableItor56.getComparator();
        strComparableItor17.setIterator((int) (short) 1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor56);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor63 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList64 = strComparableItor63.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor65 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableItor65.hasNext();
        strComparableItor63.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList68 = strComparableItor63.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor69 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList70 = strComparableItor69.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor71 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean72 = strComparableItor71.hasNext();
        strComparableItor69.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor71);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList74 = strComparableItor69.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor75 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList76 = strComparableItor75.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor77 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean78 = strComparableItor77.hasNext();
        strComparableItor75.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor77);
        boolean boolean80 = strComparableItor77.hasNext();
        strComparableItor69.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor77);
        strComparableItor63.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor69);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator83 = strComparableItor69.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor84 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList85 = strComparableItor84.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor86 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean87 = strComparableItor86.hasNext();
        strComparableItor84.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor86);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList89 = strComparableItor84.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor90 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList91 = strComparableItor90.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor92 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean93 = strComparableItor92.hasNext();
        strComparableItor90.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor92);
        boolean boolean95 = strComparableItor92.hasNext();
        strComparableItor84.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor92);
        strComparableItor69.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor84);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor56.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor69);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertNotNull(wildcardItorList45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(wildcardComparator51);
        org.junit.Assert.assertNotNull(wildcardItorList55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(wildcardComparator60);
        org.junit.Assert.assertNull(wildcardComparator61);
        org.junit.Assert.assertNotNull(wildcardItorList64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(wildcardItorList68);
        org.junit.Assert.assertNotNull(wildcardItorList70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(wildcardItorList74);
        org.junit.Assert.assertNotNull(wildcardItorList76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(wildcardComparator83);
        org.junit.Assert.assertNotNull(wildcardItorList85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(wildcardItorList89);
        org.junit.Assert.assertNotNull(wildcardItorList91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0341");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        boolean boolean5 = strComparableItor2.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor2.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator7 = strComparableItor2.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator14 = strComparableItor10.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor10.getComparator();
        boolean boolean16 = strComparableItor10.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNull(wildcardComparator7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator14);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0342");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator23 = strComparableItor20.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator24 = strComparableItor20.getComparator();
        strComparableItor0.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableItor35.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        boolean boolean38 = strComparableItor35.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        boolean boolean40 = strComparableItor27.hasNext();
        strComparableItor0.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor42 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor42.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor44 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableItor44.hasNext();
        strComparableItor42.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor44);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList47 = strComparableItor42.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor48 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList49 = strComparableItor48.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor50 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean51 = strComparableItor50.hasNext();
        strComparableItor48.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor50);
        boolean boolean53 = strComparableItor50.hasNext();
        strComparableItor42.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor50);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator55 = strComparableItor50.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList56 = strComparableItor50.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor50);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardComparator23);
        org.junit.Assert.assertNull(wildcardComparator24);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardItorList47);
        org.junit.Assert.assertNotNull(wildcardItorList49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(wildcardComparator55);
        org.junit.Assert.assertNotNull(wildcardItorList56);
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0343");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        boolean boolean5 = strComparableItor2.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor2.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator7 = strComparableItor2.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor2.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNull(wildcardComparator7);
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0344");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            int int15 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0345");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator9 = strComparableItor8.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator11 = strComparableItor8.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            int int12 = strComparableItor8.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNull(wildcardComparator9);
        org.junit.Assert.assertNull(wildcardComparator11);
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0346");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor14.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator21 = strComparableItor14.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor29.getIterators();
        boolean boolean35 = strComparableItor29.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor29.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor29.getIterators();
        strComparableItor23.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor39.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableItor41.hasNext();
        strComparableItor39.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor39.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList46 = strComparableItor45.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableItor47.hasNext();
        strComparableItor45.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor47);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor45.getIterators();
        boolean boolean51 = strComparableItor45.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList52 = strComparableItor45.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList53 = strComparableItor45.getIterators();
        strComparableItor39.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor14.setIterator((int) (byte) 100, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNull(wildcardComparator21);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertNotNull(wildcardItorList46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardItorList50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardItorList52);
        org.junit.Assert.assertNotNull(wildcardItorList53);
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0347");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        boolean boolean8 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableItor9.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor9.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList12 = strComparableItor9.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList12);
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0348");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor0.getIterators();
        boolean boolean7 = strComparableItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0349");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        boolean boolean16 = strComparableItor6.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableItor22.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableItor28.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        boolean boolean31 = strComparableItor28.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator33 = strComparableItor20.getComparator();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator35 = strComparableItor18.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor36.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean39 = strComparableItor38.hasNext();
        strComparableItor36.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList41 = strComparableItor36.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor36.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList46 = strComparableItor45.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableItor47.hasNext();
        strComparableItor45.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor47);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor45.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor51 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList52 = strComparableItor51.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor53 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean54 = strComparableItor53.hasNext();
        strComparableItor51.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        boolean boolean56 = strComparableItor53.hasNext();
        strComparableItor45.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator58 = strComparableItor45.getComparator();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor61 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList62 = strComparableItor61.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor63 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean64 = strComparableItor63.hasNext();
        strComparableItor61.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor63);
        boolean boolean66 = strComparableItor63.hasNext();
        strComparableItor45.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor63);
        strComparableItor36.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor63);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList69 = strComparableItor63.getIterators();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor63);
        boolean boolean71 = strComparableItor63.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor6.setIterator((-1), (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor63);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(wildcardComparator33);
        org.junit.Assert.assertNull(wildcardComparator35);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardItorList41);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertNotNull(wildcardItorList46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardItorList50);
        org.junit.Assert.assertNotNull(wildcardItorList52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(wildcardComparator58);
        org.junit.Assert.assertNotNull(wildcardItorList62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(wildcardItorList69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0350");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable17 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0351");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        boolean boolean16 = strComparableItor6.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor18.getIterators();
        boolean boolean24 = strComparableItor18.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor18.getIterators();
        boolean boolean26 = strComparableItor18.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor6.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0352");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        boolean boolean3 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.lang.Class<?> wildcardClass8 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0353");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor8.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator14 = strComparableItor8.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable15 = strComparableItor8.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNull(wildcardComparator14);
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0354");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableItor22.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableItor28.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        boolean boolean31 = strComparableItor28.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor20.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.lang.Class<?> wildcardClass36 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0355");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator5 = strComparableItor2.getComparator();
        boolean boolean6 = strComparableItor2.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator7 = strComparableItor2.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor2.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(wildcardComparator7);
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0356");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        boolean boolean7 = strComparableItor0.hasNext();
        boolean boolean8 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor10.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableItor12.hasNext();
        strComparableItor10.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor12);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor10.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        boolean boolean22 = strComparableItor16.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor16.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor16.getIterators();
        strComparableItor10.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor10.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableItor35.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor39.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableItor41.hasNext();
        strComparableItor39.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        boolean boolean44 = strComparableItor41.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        strComparableItor10.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor48 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList49 = strComparableItor48.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor50 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean51 = strComparableItor50.hasNext();
        strComparableItor48.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor50);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList53 = strComparableItor48.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor54 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList55 = strComparableItor54.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor56 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableItor56.hasNext();
        strComparableItor54.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor56);
        boolean boolean59 = strComparableItor56.hasNext();
        strComparableItor48.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor56);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator61 = strComparableItor48.getComparator();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor48);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor64 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList65 = strComparableItor64.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor66 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean67 = strComparableItor66.hasNext();
        strComparableItor64.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor66);
        boolean boolean69 = strComparableItor66.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator70 = strComparableItor66.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator71 = strComparableItor66.getComparator();
        strComparableItor27.setIterator((int) (short) 1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor66);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor73 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList74 = strComparableItor73.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor75 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean76 = strComparableItor75.hasNext();
        strComparableItor73.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor75);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator78 = strComparableItor75.getComparator();
        boolean boolean79 = strComparableItor75.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor75);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardItorList49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardItorList53);
        org.junit.Assert.assertNotNull(wildcardItorList55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(wildcardComparator61);
        org.junit.Assert.assertNotNull(wildcardItorList65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(wildcardComparator70);
        org.junit.Assert.assertNull(wildcardComparator71);
        org.junit.Assert.assertNotNull(wildcardItorList74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(wildcardComparator78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0357");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableItor22.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableItor28.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        boolean boolean31 = strComparableItor28.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor34 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor34.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor34.getIterators();
        boolean boolean37 = strComparableItor34.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor34.getIterators();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor34);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList41 = strComparableItor40.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor42 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableItor42.hasNext();
        strComparableItor40.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor42);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList45 = strComparableItor40.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList46 = strComparableItor40.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor47.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor49.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor51 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean52 = strComparableItor51.hasNext();
        strComparableItor49.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor51);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor49.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor55 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList56 = strComparableItor55.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableItor57.hasNext();
        strComparableItor55.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor57);
        boolean boolean60 = strComparableItor57.hasNext();
        strComparableItor49.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor57);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator62 = strComparableItor49.getComparator();
        strComparableItor47.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor65 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList66 = strComparableItor65.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor67 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean68 = strComparableItor67.hasNext();
        strComparableItor65.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor67);
        boolean boolean70 = strComparableItor67.hasNext();
        strComparableItor49.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor67);
        strComparableItor40.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor67);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList73 = strComparableItor67.getIterators();
        boolean boolean74 = strComparableItor67.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor67);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor8.setIterator((int) (short) -1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertNotNull(wildcardItorList41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardItorList45);
        org.junit.Assert.assertNotNull(wildcardItorList46);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertNotNull(wildcardItorList50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardItorList54);
        org.junit.Assert.assertNotNull(wildcardItorList56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(wildcardComparator62);
        org.junit.Assert.assertNotNull(wildcardItorList66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(wildcardItorList73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0358");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        boolean boolean3 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            int int8 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNotNull(wildcardItorList7);
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0359");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableItor26.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor30.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor32 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableItor32.hasNext();
        strComparableItor30.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor32);
        boolean boolean35 = strComparableItor32.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor32);
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        strComparableItor0.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) (short) 100, strComparableItor40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Iterator must not be null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0360");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator14 = strComparableItor0.getComparator();
        java.lang.Class<?> wildcardClass15 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNull(wildcardComparator14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0361");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator23 = strComparableItor20.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator24 = strComparableItor20.getComparator();
        strComparableItor0.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor29.getIterators();
        boolean boolean35 = strComparableItor29.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor29.getIterators();
        boolean boolean37 = strComparableItor29.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator39 = strComparableItor26.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList41 = strComparableItor40.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor42 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableItor42.hasNext();
        strComparableItor40.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor42);
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor46 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList47 = strComparableItor46.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor48 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean49 = strComparableItor48.hasNext();
        strComparableItor46.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor48);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor46.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor52 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList53 = strComparableItor52.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor54 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean55 = strComparableItor54.hasNext();
        strComparableItor52.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor54);
        boolean boolean57 = strComparableItor54.hasNext();
        strComparableItor46.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor54);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor59 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList60 = strComparableItor59.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList61 = strComparableItor59.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor62 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList63 = strComparableItor62.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor64 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean65 = strComparableItor64.hasNext();
        strComparableItor62.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor64);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList67 = strComparableItor62.getIterators();
        boolean boolean68 = strComparableItor62.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList69 = strComparableItor62.getIterators();
        boolean boolean70 = strComparableItor62.hasNext();
        strComparableItor59.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor62);
        strComparableItor46.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor59);
        boolean boolean73 = strComparableItor59.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor59);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor59);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardComparator23);
        org.junit.Assert.assertNull(wildcardComparator24);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(wildcardComparator39);
        org.junit.Assert.assertNotNull(wildcardItorList41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardItorList47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertNotNull(wildcardItorList53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardItorList60);
        org.junit.Assert.assertNotNull(wildcardItorList61);
        org.junit.Assert.assertNotNull(wildcardItorList63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(wildcardItorList67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardItorList69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0362");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator20 = strComparableItor6.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        boolean boolean27 = strComparableItor24.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator28 = strComparableItor24.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator29 = strComparableItor24.getComparator();
        boolean boolean30 = strComparableItor24.hasNext();
        strComparableItor6.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor24.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(wildcardComparator20);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(wildcardComparator28);
        org.junit.Assert.assertNull(wildcardComparator29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0363");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor6.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0364");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        boolean boolean14 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor15.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor18.getIterators();
        boolean boolean24 = strComparableItor18.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor18.getIterators();
        boolean boolean26 = strComparableItor18.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator28 = strComparableItor15.getComparator();
        boolean boolean29 = strComparableItor15.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(wildcardComparator28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0365");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        boolean boolean5 = strComparableItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            int int6 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0366");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor39.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableItor43.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList46 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor47.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableItor49.hasNext();
        strComparableItor47.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        boolean boolean52 = strComparableItor49.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator54 = strComparableItor41.getComparator();
        strComparableItor39.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable57 = strComparableItor41.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardItorList46);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(wildcardComparator54);
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0367");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator5 = strComparableItor2.getComparator();
        boolean boolean6 = strComparableItor2.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator7 = strComparableItor2.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator8 = strComparableItor2.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor2.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(wildcardComparator7);
        org.junit.Assert.assertNull(wildcardComparator8);
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0368");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            int int39 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList38);
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0369");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean1 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor4.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertNotNull(wildcardItorList5);
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0370");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator14 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator16 = strComparableItor0.getComparator();
        boolean boolean17 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable19 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNull(wildcardComparator14);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList18);
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0371");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        boolean boolean5 = strComparableItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable6 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0372");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor3.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor3.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0373");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        boolean boolean16 = strComparableItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0374");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableItor22.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableItor28.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor26.getIterators();
        boolean boolean32 = strComparableItor26.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor26.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor26.getIterators();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor37.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableItor39.hasNext();
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor37.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableItor45.hasNext();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor49.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor51 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean52 = strComparableItor51.hasNext();
        strComparableItor49.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor51);
        boolean boolean54 = strComparableItor51.hasNext();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor51);
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor37);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor58 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList59 = strComparableItor58.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor60 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean61 = strComparableItor60.hasNext();
        strComparableItor58.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor60);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList63 = strComparableItor58.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor64 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList65 = strComparableItor64.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor66 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean67 = strComparableItor66.hasNext();
        strComparableItor64.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor66);
        boolean boolean69 = strComparableItor66.hasNext();
        strComparableItor58.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor66);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator71 = strComparableItor58.getComparator();
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor58);
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor58);
        // The following exception was thrown during execution in test generation
        try {
            int int74 = strComparableItor14.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertNotNull(wildcardItorList50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(wildcardItorList59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(wildcardItorList63);
        org.junit.Assert.assertNotNull(wildcardItorList65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(wildcardComparator71);
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0375");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        boolean boolean22 = strComparableItor16.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor16.getIterators();
        boolean boolean24 = strComparableItor16.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        boolean boolean27 = strComparableItor13.hasNext();
        boolean boolean28 = strComparableItor13.hasNext();
        java.lang.Class<?> wildcardClass29 = strComparableItor13.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0376");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        boolean boolean16 = strComparableItor6.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableItor22.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor20.getIterators();
        boolean boolean26 = strComparableItor20.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor20.getIterators();
        boolean boolean28 = strComparableItor20.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator30 = strComparableItor17.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor31.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean34 = strComparableItor33.hasNext();
        strComparableItor31.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableItor40.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor44 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList45 = strComparableItor44.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor46 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean47 = strComparableItor46.hasNext();
        strComparableItor44.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        boolean boolean49 = strComparableItor46.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator51 = strComparableItor38.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator52 = strComparableItor38.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList53 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor54 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList55 = strComparableItor54.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor56 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableItor56.hasNext();
        strComparableItor54.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor56);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator59 = strComparableItor56.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator60 = strComparableItor56.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator61 = strComparableItor56.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator62 = strComparableItor56.getComparator();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor56);
        boolean boolean64 = strComparableItor38.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(wildcardComparator30);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertNotNull(wildcardItorList45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(wildcardComparator51);
        org.junit.Assert.assertNull(wildcardComparator52);
        org.junit.Assert.assertNotNull(wildcardItorList53);
        org.junit.Assert.assertNotNull(wildcardItorList55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(wildcardComparator59);
        org.junit.Assert.assertNull(wildcardComparator60);
        org.junit.Assert.assertNull(wildcardComparator61);
        org.junit.Assert.assertNull(wildcardComparator62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0377");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        boolean boolean17 = strComparableItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable18 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0378");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor39.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableItor43.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList46 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor47.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableItor49.hasNext();
        strComparableItor47.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        boolean boolean52 = strComparableItor49.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator54 = strComparableItor41.getComparator();
        strComparableItor39.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList58 = strComparableItor57.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor59 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableItor59.hasNext();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor59);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList62 = strComparableItor57.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor63 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList64 = strComparableItor63.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor65 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableItor65.hasNext();
        strComparableItor63.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        boolean boolean68 = strComparableItor65.hasNext();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor70 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList71 = strComparableItor70.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList72 = strComparableItor70.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor73 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList74 = strComparableItor73.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor75 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean76 = strComparableItor75.hasNext();
        strComparableItor73.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor75);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList78 = strComparableItor73.getIterators();
        boolean boolean79 = strComparableItor73.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList80 = strComparableItor73.getIterators();
        boolean boolean81 = strComparableItor73.hasNext();
        strComparableItor70.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor73);
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor70);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor84 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList85 = strComparableItor84.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor86 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean87 = strComparableItor86.hasNext();
        strComparableItor84.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor86);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator89 = strComparableItor86.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator90 = strComparableItor86.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator91 = strComparableItor86.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList92 = strComparableItor86.getIterators();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor86);
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor57);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator95 = strComparableItor57.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable96 = strComparableItor57.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardItorList46);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(wildcardComparator54);
        org.junit.Assert.assertNotNull(wildcardItorList58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardItorList62);
        org.junit.Assert.assertNotNull(wildcardItorList64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardItorList71);
        org.junit.Assert.assertNotNull(wildcardItorList72);
        org.junit.Assert.assertNotNull(wildcardItorList74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(wildcardItorList78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(wildcardItorList80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(wildcardItorList85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNull(wildcardComparator89);
        org.junit.Assert.assertNull(wildcardComparator90);
        org.junit.Assert.assertNull(wildcardComparator91);
        org.junit.Assert.assertNotNull(wildcardItorList92);
        org.junit.Assert.assertNull(wildcardComparator95);
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0379");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator23 = strComparableItor20.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator24 = strComparableItor20.getComparator();
        strComparableItor0.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.lang.Class<?> wildcardClass26 = strComparableItor20.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardComparator23);
        org.junit.Assert.assertNull(wildcardComparator24);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0380");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        boolean boolean3 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor0.getIterators();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((-1), strComparableItor10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList8);
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0381");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableItor22.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableItor28.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        boolean boolean31 = strComparableItor28.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor36.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean39 = strComparableItor38.hasNext();
        strComparableItor36.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList41 = strComparableItor36.getIterators();
        boolean boolean42 = strComparableItor36.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor36.getIterators();
        boolean boolean44 = strComparableItor36.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        boolean boolean47 = strComparableItor33.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor49.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor51 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean52 = strComparableItor51.hasNext();
        strComparableItor49.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor51);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor49.getIterators();
        boolean boolean55 = strComparableItor49.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList56 = strComparableItor49.getIterators();
        boolean boolean57 = strComparableItor49.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator58 = strComparableItor49.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator59 = strComparableItor49.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor62 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList63 = strComparableItor62.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor64 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean65 = strComparableItor64.hasNext();
        strComparableItor62.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor64);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator67 = strComparableItor64.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor49.setIterator(10, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor64);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardItorList41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardItorList50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardItorList54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(wildcardItorList56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(wildcardComparator58);
        org.junit.Assert.assertNull(wildcardComparator59);
        org.junit.Assert.assertNotNull(wildcardItorList63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(wildcardComparator67);
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0382");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableItor26.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor30.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor32 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableItor32.hasNext();
        strComparableItor30.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor32);
        boolean boolean35 = strComparableItor32.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor32);
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        strComparableItor0.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        // The following exception was thrown during execution in test generation
        try {
            int int39 = strComparableItor24.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0383");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor3.getIterators();
        java.lang.Class<?> wildcardClass14 = strComparableItor3.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0384");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        boolean boolean3 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor8.getIterators();
        boolean boolean14 = strComparableItor8.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor8.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor8.getIterators();
        boolean boolean17 = strComparableItor8.hasNext();
        boolean boolean18 = strComparableItor8.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0385");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor28.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableItor30.hasNext();
        strComparableItor28.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
        boolean boolean33 = strComparableItor30.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator35 = strComparableItor22.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator36 = strComparableItor22.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableItor40.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator43 = strComparableItor40.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator44 = strComparableItor40.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator45 = strComparableItor40.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator46 = strComparableItor40.getComparator();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        strComparableItor14.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        boolean boolean49 = strComparableItor40.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable50 = strComparableItor40.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(wildcardComparator35);
        org.junit.Assert.assertNull(wildcardComparator36);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(wildcardComparator43);
        org.junit.Assert.assertNull(wildcardComparator44);
        org.junit.Assert.assertNull(wildcardComparator45);
        org.junit.Assert.assertNull(wildcardComparator46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0386");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor2.getComparator();
        boolean boolean18 = strComparableItor2.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator19 = strComparableItor2.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor21.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableItor26.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor24.getIterators();
        boolean boolean30 = strComparableItor24.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor24.getIterators();
        boolean boolean32 = strComparableItor24.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor21.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableItor37.hasNext();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor37);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableItor43.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList46 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor47.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableItor49.hasNext();
        strComparableItor47.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        boolean boolean52 = strComparableItor49.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator55 = strComparableItor41.getComparator();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor2.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(wildcardComparator19);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardItorList46);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(wildcardComparator55);
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0387");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor9.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor12.getIterators();
        boolean boolean18 = strComparableItor12.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor12.getIterators();
        boolean boolean20 = strComparableItor12.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor12);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor9.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator23 = strComparableItor9.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator24 = strComparableItor9.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator25 = strComparableItor9.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((-1), (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNull(wildcardComparator23);
        org.junit.Assert.assertNull(wildcardComparator24);
        org.junit.Assert.assertNull(wildcardComparator25);
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0388");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor6.getIterators();
        boolean boolean9 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable12 = strComparableItor6.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0389");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor14.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator21 = strComparableItor14.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor14.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNull(wildcardComparator21);
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0390");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor0.getIterators();
        boolean boolean7 = strComparableItor0.hasNext();
        boolean boolean8 = strComparableItor0.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator9 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList12 = strComparableItor11.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableItor13.hasNext();
        strComparableItor11.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator16 = strComparableItor13.getComparator();
        boolean boolean17 = strComparableItor13.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardComparator9);
        org.junit.Assert.assertNotNull(wildcardItorList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(wildcardComparator16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0391");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor22.getIterators();
        boolean boolean28 = strComparableItor22.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor22.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor22.getIterators();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor34 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor34.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor34.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor37.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableItor39.hasNext();
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor37.getIterators();
        boolean boolean43 = strComparableItor37.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor37.getIterators();
        boolean boolean45 = strComparableItor37.hasNext();
        strComparableItor34.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor37);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator47 = strComparableItor34.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor34.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor50 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor50.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor52 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean53 = strComparableItor52.hasNext();
        strComparableItor50.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor52);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList55 = strComparableItor50.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor56 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList57 = strComparableItor56.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList58 = strComparableItor56.getIterators();
        boolean boolean59 = strComparableItor56.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList60 = strComparableItor56.getIterators();
        strComparableItor50.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor56);
        strComparableItor34.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor56);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor16.setIterator((int) (short) -1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor34);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(wildcardComparator47);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardItorList55);
        org.junit.Assert.assertNotNull(wildcardItorList57);
        org.junit.Assert.assertNotNull(wildcardItorList58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardItorList60);
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0392");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable8 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertNotNull(wildcardItorList7);
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0393");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        boolean boolean3 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList8);
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0394");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator23 = strComparableItor20.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator24 = strComparableItor20.getComparator();
        strComparableItor0.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableItor35.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        boolean boolean38 = strComparableItor35.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        boolean boolean40 = strComparableItor27.hasNext();
        strComparableItor0.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor42 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor42.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor42.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList46 = strComparableItor45.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableItor47.hasNext();
        strComparableItor45.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor47);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor45.getIterators();
        boolean boolean51 = strComparableItor45.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList52 = strComparableItor45.getIterators();
        boolean boolean53 = strComparableItor45.hasNext();
        strComparableItor42.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator55 = strComparableItor42.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor56 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList57 = strComparableItor56.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor58 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean59 = strComparableItor58.hasNext();
        strComparableItor56.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor58);
        strComparableItor42.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor56);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator62 = strComparableItor56.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor56);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardComparator23);
        org.junit.Assert.assertNull(wildcardComparator24);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertNotNull(wildcardItorList46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardItorList50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardItorList52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(wildcardComparator55);
        org.junit.Assert.assertNotNull(wildcardItorList57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(wildcardComparator62);
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0395");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor0.getIterators();
        boolean boolean7 = strComparableItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable8 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0396");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        boolean boolean23 = strComparableItor20.hasNext();
        strComparableItor2.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor2.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            int int26 = strComparableItor2.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0397");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor3.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableItor22.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        boolean boolean25 = strComparableItor22.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0398");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor6.getIterators();
        boolean boolean9 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        // The following exception was thrown during execution in test generation
        try {
            int int12 = strComparableItor6.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0399");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor28.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableItor30.hasNext();
        strComparableItor28.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
        boolean boolean33 = strComparableItor30.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator35 = strComparableItor22.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator36 = strComparableItor22.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableItor40.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator43 = strComparableItor40.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator44 = strComparableItor40.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator45 = strComparableItor40.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator46 = strComparableItor40.getComparator();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        strComparableItor14.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        // The following exception was thrown during execution in test generation
        try {
            int int49 = strComparableItor40.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(wildcardComparator35);
        org.junit.Assert.assertNull(wildcardComparator36);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(wildcardComparator43);
        org.junit.Assert.assertNull(wildcardComparator44);
        org.junit.Assert.assertNull(wildcardComparator45);
        org.junit.Assert.assertNull(wildcardComparator46);
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0400");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor14.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator21 = strComparableItor14.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable22 = strComparableItor14.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNull(wildcardComparator21);
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0401");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor28.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableItor30.hasNext();
        strComparableItor28.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor28.getIterators();
        boolean boolean34 = strComparableItor28.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor28.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor28.getIterators();
        strComparableItor22.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor22.getIterators();
        strComparableItor0.setIterator((int) (short) 1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableItor43.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList46 = strComparableItor41.getIterators();
        boolean boolean47 = strComparableItor41.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor41.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList49 = strComparableItor41.getIterators();
        boolean boolean50 = strComparableItor41.hasNext();
        boolean boolean51 = strComparableItor41.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor22.setIterator(1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardItorList46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertNotNull(wildcardItorList49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0402");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableItor15.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor15);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor19.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableItor21.hasNext();
        strComparableItor19.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor19.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableItor27.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean30 = strComparableItor27.hasNext();
        strComparableItor19.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        boolean boolean33 = strComparableItor13.hasNext();
        boolean boolean34 = strComparableItor13.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0403");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        boolean boolean22 = strComparableItor16.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor16.getIterators();
        boolean boolean24 = strComparableItor16.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator32 = strComparableItor29.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator33 = strComparableItor29.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor29.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor29.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        boolean boolean37 = strComparableItor29.hasNext();
        boolean boolean38 = strComparableItor29.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList41 = strComparableItor40.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor40.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableItor45.hasNext();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor43.getIterators();
        boolean boolean49 = strComparableItor43.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor43.getIterators();
        boolean boolean51 = strComparableItor43.hasNext();
        strComparableItor40.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator53 = strComparableItor40.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor40.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor29.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(wildcardComparator32);
        org.junit.Assert.assertNull(wildcardComparator33);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardItorList41);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardItorList50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(wildcardComparator53);
        org.junit.Assert.assertNotNull(wildcardItorList54);
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0404");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        boolean boolean20 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableItor23.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor21.getIterators();
        boolean boolean27 = strComparableItor21.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor21.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator29 = strComparableItor21.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator30 = strComparableItor21.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNull(wildcardComparator29);
        org.junit.Assert.assertNull(wildcardComparator30);
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0405");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator5 = strComparableItor2.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor2.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator7 = strComparableItor2.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor10.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList12 = strComparableItor10.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableItor15.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor15);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor13.getIterators();
        boolean boolean19 = strComparableItor13.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor13.getIterators();
        boolean boolean21 = strComparableItor13.hasNext();
        strComparableItor10.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator23 = strComparableItor10.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableItor26.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor30.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor32 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableItor32.hasNext();
        strComparableItor30.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor32);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor30.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor36.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean39 = strComparableItor38.hasNext();
        strComparableItor36.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        boolean boolean41 = strComparableItor38.hasNext();
        strComparableItor30.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator44 = strComparableItor30.getComparator();
        strComparableItor10.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator46 = strComparableItor10.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor2.setIterator((int) '4', (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNull(wildcardComparator7);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList12);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardComparator23);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(wildcardComparator44);
        org.junit.Assert.assertNull(wildcardComparator46);
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0406");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean1 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        boolean boolean3 = strComparableItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            int int4 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0407");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable9 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList8);
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0408");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator23 = strComparableItor20.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator24 = strComparableItor20.getComparator();
        strComparableItor0.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableItor35.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        boolean boolean38 = strComparableItor35.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        boolean boolean40 = strComparableItor27.hasNext();
        strComparableItor0.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        // The following exception was thrown during execution in test generation
        try {
            int int42 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardComparator23);
        org.junit.Assert.assertNull(wildcardComparator24);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0409");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor39.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableItor43.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList46 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor47.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableItor49.hasNext();
        strComparableItor47.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        boolean boolean52 = strComparableItor49.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator54 = strComparableItor41.getComparator();
        strComparableItor39.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList58 = strComparableItor57.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor59 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableItor59.hasNext();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor59);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList62 = strComparableItor57.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor63 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList64 = strComparableItor63.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor65 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableItor65.hasNext();
        strComparableItor63.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        boolean boolean68 = strComparableItor65.hasNext();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor70 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList71 = strComparableItor70.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList72 = strComparableItor70.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor73 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList74 = strComparableItor73.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor75 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean76 = strComparableItor75.hasNext();
        strComparableItor73.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor75);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList78 = strComparableItor73.getIterators();
        boolean boolean79 = strComparableItor73.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList80 = strComparableItor73.getIterators();
        boolean boolean81 = strComparableItor73.hasNext();
        strComparableItor70.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor73);
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor70);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator84 = strComparableItor57.getComparator();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor57);
        java.lang.Class<?> wildcardClass86 = strComparableItor41.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardItorList46);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(wildcardComparator54);
        org.junit.Assert.assertNotNull(wildcardItorList58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardItorList62);
        org.junit.Assert.assertNotNull(wildcardItorList64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardItorList71);
        org.junit.Assert.assertNotNull(wildcardItorList72);
        org.junit.Assert.assertNotNull(wildcardItorList74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(wildcardItorList78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(wildcardItorList80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNull(wildcardComparator84);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0410");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator21 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableItor26.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor30.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor32 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableItor32.hasNext();
        strComparableItor30.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor32);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor30.getIterators();
        boolean boolean36 = strComparableItor30.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor30.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor30.getIterators();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableItor43.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList46 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor47.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableItor49.hasNext();
        strComparableItor47.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList52 = strComparableItor47.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor53 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor53.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor55 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean56 = strComparableItor55.hasNext();
        strComparableItor53.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor55);
        boolean boolean58 = strComparableItor55.hasNext();
        strComparableItor47.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor55);
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor47);
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor62 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList63 = strComparableItor62.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor64 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean65 = strComparableItor64.hasNext();
        strComparableItor62.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor64);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList67 = strComparableItor62.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor68 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList69 = strComparableItor68.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor70 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean71 = strComparableItor70.hasNext();
        strComparableItor68.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor70);
        boolean boolean73 = strComparableItor70.hasNext();
        strComparableItor62.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor70);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator75 = strComparableItor62.getComparator();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor62);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor78 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList79 = strComparableItor78.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor80 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean81 = strComparableItor80.hasNext();
        strComparableItor78.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor80);
        boolean boolean83 = strComparableItor80.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator84 = strComparableItor80.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator85 = strComparableItor80.getComparator();
        strComparableItor41.setIterator((int) (short) 1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor80);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((-1), (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNull(wildcardComparator21);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardItorList46);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardItorList52);
        org.junit.Assert.assertNotNull(wildcardItorList54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardItorList63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(wildcardItorList67);
        org.junit.Assert.assertNotNull(wildcardItorList69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(wildcardComparator75);
        org.junit.Assert.assertNotNull(wildcardItorList79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNull(wildcardComparator84);
        org.junit.Assert.assertNull(wildcardComparator85);
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0411");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator14 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable15 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNull(wildcardComparator14);
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0412");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor22.getIterators();
        boolean boolean28 = strComparableItor22.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor22.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor22.getIterators();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor34 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor34.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor36.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean39 = strComparableItor38.hasNext();
        strComparableItor36.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList41 = strComparableItor36.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor42 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor42.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor44 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableItor44.hasNext();
        strComparableItor42.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor44);
        boolean boolean47 = strComparableItor44.hasNext();
        strComparableItor36.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor44);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator49 = strComparableItor36.getComparator();
        strComparableItor34.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator51 = strComparableItor34.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor52 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList53 = strComparableItor52.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor54 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean55 = strComparableItor54.hasNext();
        strComparableItor52.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor54);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList57 = strComparableItor52.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList58 = strComparableItor52.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor59 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList60 = strComparableItor59.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor61 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList62 = strComparableItor61.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor63 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean64 = strComparableItor63.hasNext();
        strComparableItor61.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor63);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList66 = strComparableItor61.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor67 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList68 = strComparableItor67.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor69 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean70 = strComparableItor69.hasNext();
        strComparableItor67.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor69);
        boolean boolean72 = strComparableItor69.hasNext();
        strComparableItor61.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor69);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator74 = strComparableItor61.getComparator();
        strComparableItor59.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor61);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor77 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList78 = strComparableItor77.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor79 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean80 = strComparableItor79.hasNext();
        strComparableItor77.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor79);
        boolean boolean82 = strComparableItor79.hasNext();
        strComparableItor61.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor79);
        strComparableItor52.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor79);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList85 = strComparableItor79.getIterators();
        strComparableItor34.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor79);
        boolean boolean87 = strComparableItor79.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) (byte) 100, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor79);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardItorList41);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(wildcardComparator49);
        org.junit.Assert.assertNull(wildcardComparator51);
        org.junit.Assert.assertNotNull(wildcardItorList53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(wildcardItorList57);
        org.junit.Assert.assertNotNull(wildcardItorList58);
        org.junit.Assert.assertNotNull(wildcardItorList60);
        org.junit.Assert.assertNotNull(wildcardItorList62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardItorList66);
        org.junit.Assert.assertNotNull(wildcardItorList68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(wildcardComparator74);
        org.junit.Assert.assertNotNull(wildcardItorList78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(wildcardItorList85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0413");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor39.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableItor43.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList46 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor47.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableItor49.hasNext();
        strComparableItor47.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        boolean boolean52 = strComparableItor49.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator54 = strComparableItor41.getComparator();
        strComparableItor39.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList58 = strComparableItor57.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor59 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableItor59.hasNext();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor59);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList62 = strComparableItor57.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor63 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList64 = strComparableItor63.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor65 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableItor65.hasNext();
        strComparableItor63.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        boolean boolean68 = strComparableItor65.hasNext();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor70 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList71 = strComparableItor70.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList72 = strComparableItor70.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor73 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList74 = strComparableItor73.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor75 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean76 = strComparableItor75.hasNext();
        strComparableItor73.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor75);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList78 = strComparableItor73.getIterators();
        boolean boolean79 = strComparableItor73.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList80 = strComparableItor73.getIterators();
        boolean boolean81 = strComparableItor73.hasNext();
        strComparableItor70.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor73);
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor70);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor84 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList85 = strComparableItor84.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor86 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean87 = strComparableItor86.hasNext();
        strComparableItor84.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor86);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator89 = strComparableItor86.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator90 = strComparableItor86.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator91 = strComparableItor86.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList92 = strComparableItor86.getIterators();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor86);
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor57);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator95 = strComparableItor41.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable96 = strComparableItor41.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardItorList46);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(wildcardComparator54);
        org.junit.Assert.assertNotNull(wildcardItorList58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardItorList62);
        org.junit.Assert.assertNotNull(wildcardItorList64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardItorList71);
        org.junit.Assert.assertNotNull(wildcardItorList72);
        org.junit.Assert.assertNotNull(wildcardItorList74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(wildcardItorList78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(wildcardItorList80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(wildcardItorList85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNull(wildcardComparator89);
        org.junit.Assert.assertNull(wildcardComparator90);
        org.junit.Assert.assertNull(wildcardComparator91);
        org.junit.Assert.assertNotNull(wildcardItorList92);
        org.junit.Assert.assertNull(wildcardComparator95);
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0414");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator5 = strComparableItor2.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor2.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator7 = strComparableItor2.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor8.getIterators();
        boolean boolean11 = strComparableItor8.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList12 = strComparableItor8.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor8.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator14 = strComparableItor8.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNull(wildcardComparator7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList12);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNull(wildcardComparator14);
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0415");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor39.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableItor43.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList46 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor47.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableItor49.hasNext();
        strComparableItor47.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        boolean boolean52 = strComparableItor49.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator54 = strComparableItor41.getComparator();
        strComparableItor39.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList58 = strComparableItor57.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor59 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableItor59.hasNext();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor59);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList62 = strComparableItor57.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor63 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList64 = strComparableItor63.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor65 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableItor65.hasNext();
        strComparableItor63.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        boolean boolean68 = strComparableItor65.hasNext();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor70 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList71 = strComparableItor70.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList72 = strComparableItor70.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor73 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList74 = strComparableItor73.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor75 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean76 = strComparableItor75.hasNext();
        strComparableItor73.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor75);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList78 = strComparableItor73.getIterators();
        boolean boolean79 = strComparableItor73.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList80 = strComparableItor73.getIterators();
        boolean boolean81 = strComparableItor73.hasNext();
        strComparableItor70.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor73);
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor70);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor84 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList85 = strComparableItor84.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor86 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean87 = strComparableItor86.hasNext();
        strComparableItor84.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor86);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator89 = strComparableItor86.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator90 = strComparableItor86.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator91 = strComparableItor86.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList92 = strComparableItor86.getIterators();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor86);
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor57);
        java.lang.Class<?> wildcardClass95 = strComparableItor41.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardItorList46);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(wildcardComparator54);
        org.junit.Assert.assertNotNull(wildcardItorList58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardItorList62);
        org.junit.Assert.assertNotNull(wildcardItorList64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardItorList71);
        org.junit.Assert.assertNotNull(wildcardItorList72);
        org.junit.Assert.assertNotNull(wildcardItorList74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(wildcardItorList78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(wildcardItorList80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(wildcardItorList85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNull(wildcardComparator89);
        org.junit.Assert.assertNull(wildcardComparator90);
        org.junit.Assert.assertNull(wildcardComparator91);
        org.junit.Assert.assertNotNull(wildcardItorList92);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0416");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor0.getIterators();
        boolean boolean7 = strComparableItor0.hasNext();
        boolean boolean8 = strComparableItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0417");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableItor26.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor30.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor32 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableItor32.hasNext();
        strComparableItor30.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor32);
        boolean boolean35 = strComparableItor32.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor32);
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        strComparableItor0.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor41.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor44 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList45 = strComparableItor44.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor46 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean47 = strComparableItor46.hasNext();
        strComparableItor44.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList49 = strComparableItor44.getIterators();
        boolean boolean50 = strComparableItor44.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor44.getIterators();
        boolean boolean52 = strComparableItor44.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor44);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator54 = strComparableItor41.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor55 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList56 = strComparableItor55.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableItor57.hasNext();
        strComparableItor55.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor57);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList60 = strComparableItor55.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor61 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList62 = strComparableItor61.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor63 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean64 = strComparableItor63.hasNext();
        strComparableItor61.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor63);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList66 = strComparableItor61.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor67 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList68 = strComparableItor67.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor69 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean70 = strComparableItor69.hasNext();
        strComparableItor67.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor69);
        boolean boolean72 = strComparableItor69.hasNext();
        strComparableItor61.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor69);
        strComparableItor55.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor61);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator75 = strComparableItor61.getComparator();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor61);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) ' ', (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor61);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertNotNull(wildcardItorList45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardItorList49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(wildcardComparator54);
        org.junit.Assert.assertNotNull(wildcardItorList56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardItorList60);
        org.junit.Assert.assertNotNull(wildcardItorList62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardItorList66);
        org.junit.Assert.assertNotNull(wildcardItorList68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(wildcardComparator75);
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0418");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor6.getIterators();
        boolean boolean9 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable12 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0419");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator14 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor17.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor17.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((-1), (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNull(wildcardComparator14);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList24);
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0420");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor14.getIterators();
        boolean boolean20 = strComparableItor14.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor14.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor14.getIterators();
        strComparableItor8.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor8.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0421");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        boolean boolean14 = strComparableItor0.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        boolean boolean29 = strComparableItor23.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor23.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor23.getIterators();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator(10, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertNotNull(wildcardItorList31);
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0422");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator5 = strComparableItor2.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor2.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator7 = strComparableItor2.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor8.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor8.getIterators();
        boolean boolean15 = strComparableItor8.hasNext();
        boolean boolean16 = strComparableItor8.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor8.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNull(wildcardComparator7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(wildcardComparator17);
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0423");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor18.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableItor35.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        boolean boolean38 = strComparableItor35.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor27.getComparator();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableItor45.hasNext();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        boolean boolean48 = strComparableItor45.hasNext();
        strComparableItor27.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor45.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor54 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor55 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList56 = strComparableItor55.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableItor57.hasNext();
        strComparableItor55.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor57);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList60 = strComparableItor55.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList61 = strComparableItor55.getIterators();
        boolean boolean62 = strComparableItor55.hasNext();
        boolean boolean63 = strComparableItor55.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator64 = strComparableItor55.getComparator();
        strComparableItor54.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor55);
        strComparableItor0.setIterator(1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor54);
        boolean boolean67 = strComparableItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable68 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator17);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(wildcardComparator40);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertNotNull(wildcardItorList56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardItorList60);
        org.junit.Assert.assertNotNull(wildcardItorList61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(wildcardComparator64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0424");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        boolean boolean2 = strComparableItor0.hasNext();
        java.lang.Class<?> wildcardClass3 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0425");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        boolean boolean16 = strComparableItor6.hasNext();
        boolean boolean17 = strComparableItor6.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable18 = strComparableItor6.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0426");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor1 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor1.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean4 = strComparableItor3.hasNext();
        strComparableItor1.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor1.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor1.getIterators();
        boolean boolean8 = strComparableItor1.hasNext();
        boolean boolean9 = strComparableItor1.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator10 = strComparableItor1.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor1);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableItor22.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        boolean boolean25 = strComparableItor22.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator27 = strComparableItor14.getComparator();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator29 = strComparableItor14.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator30 = strComparableItor14.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor1.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(wildcardComparator10);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(wildcardComparator27);
        org.junit.Assert.assertNull(wildcardComparator29);
        org.junit.Assert.assertNull(wildcardComparator30);
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0427");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator5 = strComparableItor2.getComparator();
        boolean boolean6 = strComparableItor2.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor2.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0428");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor8.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor8.getIterators();
        java.lang.Class<?> wildcardClass15 = strComparableItor8.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0429");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor2.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor2.getIterators();
        java.lang.Class<?> wildcardClass19 = strComparableItor2.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator17);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0430");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor7.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableItor11.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableItor17.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        boolean boolean20 = strComparableItor17.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor9.getComparator();
        strComparableItor7.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableItor27.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean30 = strComparableItor27.hasNext();
        strComparableItor9.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor27.getIterators();
        boolean boolean34 = strComparableItor27.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable35 = strComparableItor27.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0431");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        boolean boolean38 = strComparableItor17.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor17.getIterators();
        java.lang.Class<?> wildcardClass40 = wildcardItorList39.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0432");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator14 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator16 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable18 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNull(wildcardComparator14);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator16);
        org.junit.Assert.assertNotNull(wildcardItorList17);
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0433");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator14 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator16 = strComparableItor0.getComparator();
        boolean boolean17 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor19.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor19.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor22.getIterators();
        boolean boolean28 = strComparableItor22.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor22.getIterators();
        boolean boolean30 = strComparableItor22.hasNext();
        strComparableItor19.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor22.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor22.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor22.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) (byte) 1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNull(wildcardComparator14);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertNotNull(wildcardItorList34);
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0434");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator5 = strComparableItor2.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor2.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass7 = wildcardComparator6.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNull(wildcardComparator6);
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0435");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        boolean boolean23 = strComparableItor20.hasNext();
        strComparableItor2.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator25 = strComparableItor20.getComparator();
        boolean boolean26 = strComparableItor20.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            int int27 = strComparableItor20.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(wildcardComparator25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0436");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator8 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            int int9 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNull(wildcardComparator8);
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0437");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor20.getIterators();
        boolean boolean23 = strComparableItor20.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor20.getIterators();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable26 = strComparableItor6.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList24);
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0438");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor7.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableItor11.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableItor17.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        boolean boolean20 = strComparableItor17.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor9.getComparator();
        strComparableItor7.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableItor27.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean30 = strComparableItor27.hasNext();
        strComparableItor9.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean33 = strComparableItor27.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor27.getComparator();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor27.setIterator((int) (byte) -1, strComparableItor36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(wildcardComparator34);
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0439");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor0.getIterators();
        boolean boolean9 = strComparableItor0.hasNext();
        boolean boolean10 = strComparableItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0440");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        boolean boolean19 = strComparableItor16.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator21 = strComparableItor8.getComparator();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator23 = strComparableItor6.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableItor26.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor24.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor31.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableItor35.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor39.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableItor41.hasNext();
        strComparableItor39.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        boolean boolean44 = strComparableItor41.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator46 = strComparableItor33.getComparator();
        strComparableItor31.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor49.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor51 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean52 = strComparableItor51.hasNext();
        strComparableItor49.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor51);
        boolean boolean54 = strComparableItor51.hasNext();
        strComparableItor33.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor51);
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor51);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList57 = strComparableItor51.getIterators();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor51);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) (short) 10, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor51);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(wildcardComparator21);
        org.junit.Assert.assertNull(wildcardComparator23);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(wildcardComparator46);
        org.junit.Assert.assertNotNull(wildcardItorList50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(wildcardItorList57);
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0441");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor7.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableItor11.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableItor17.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        boolean boolean20 = strComparableItor17.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor9.getComparator();
        strComparableItor7.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableItor27.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean30 = strComparableItor27.hasNext();
        strComparableItor9.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor34 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator(0, strComparableItor34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Iterator must not be null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0442");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator14 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator21 = strComparableItor18.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor18.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator23 = strComparableItor18.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator24 = strComparableItor18.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        boolean boolean26 = strComparableItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNull(wildcardComparator14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(wildcardComparator21);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNull(wildcardComparator23);
        org.junit.Assert.assertNull(wildcardComparator24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0443");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor6.getIterators();
        boolean boolean9 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList12 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableItor15.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor15);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor19.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableItor21.hasNext();
        strComparableItor19.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
        boolean boolean24 = strComparableItor21.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator26 = strComparableItor13.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator27 = strComparableItor13.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor28.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableItor30.hasNext();
        strComparableItor28.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor28.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor34 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor34.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableItor36.hasNext();
        strComparableItor34.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor34.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList41 = strComparableItor40.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor42 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableItor42.hasNext();
        strComparableItor40.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor42);
        boolean boolean45 = strComparableItor42.hasNext();
        strComparableItor34.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor42);
        strComparableItor28.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor34);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator48 = strComparableItor34.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor50 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor50.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor52 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean53 = strComparableItor52.hasNext();
        strComparableItor50.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor52);
        boolean boolean55 = strComparableItor52.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator56 = strComparableItor52.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator57 = strComparableItor52.getComparator();
        boolean boolean58 = strComparableItor52.hasNext();
        strComparableItor34.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor52);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList60 = strComparableItor34.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList61 = strComparableItor34.getIterators();
        boolean boolean62 = strComparableItor34.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor34);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertNotNull(wildcardItorList12);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(wildcardComparator26);
        org.junit.Assert.assertNull(wildcardComparator27);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertNotNull(wildcardItorList41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(wildcardComparator48);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(wildcardComparator56);
        org.junit.Assert.assertNull(wildcardComparator57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardItorList60);
        org.junit.Assert.assertNotNull(wildcardItorList61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0444");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor3.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableItor17.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator20 = strComparableItor17.getComparator();
        boolean boolean21 = strComparableItor17.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(wildcardComparator20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0445");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        boolean boolean22 = strComparableItor16.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor16.getIterators();
        boolean boolean24 = strComparableItor16.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator32 = strComparableItor29.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator33 = strComparableItor29.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor29.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor29.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        // The following exception was thrown during execution in test generation
        try {
            int int37 = strComparableItor29.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(wildcardComparator32);
        org.junit.Assert.assertNull(wildcardComparator33);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertNotNull(wildcardItorList35);
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0446");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator21 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            int int23 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNull(wildcardComparator21);
        org.junit.Assert.assertNull(wildcardComparator22);
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0447");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor39.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableItor43.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList46 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor47.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableItor49.hasNext();
        strComparableItor47.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        boolean boolean52 = strComparableItor49.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator54 = strComparableItor41.getComparator();
        strComparableItor39.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList58 = strComparableItor57.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor59 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableItor59.hasNext();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor59);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList62 = strComparableItor57.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor63 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList64 = strComparableItor63.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor65 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableItor65.hasNext();
        strComparableItor63.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        boolean boolean68 = strComparableItor65.hasNext();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor70 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList71 = strComparableItor70.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList72 = strComparableItor70.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor73 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList74 = strComparableItor73.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor75 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean76 = strComparableItor75.hasNext();
        strComparableItor73.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor75);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList78 = strComparableItor73.getIterators();
        boolean boolean79 = strComparableItor73.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList80 = strComparableItor73.getIterators();
        boolean boolean81 = strComparableItor73.hasNext();
        strComparableItor70.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor73);
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor70);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator84 = strComparableItor57.getComparator();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor57);
        // The following exception was thrown during execution in test generation
        try {
            int int86 = strComparableItor57.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardItorList46);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(wildcardComparator54);
        org.junit.Assert.assertNotNull(wildcardItorList58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardItorList62);
        org.junit.Assert.assertNotNull(wildcardItorList64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardItorList71);
        org.junit.Assert.assertNotNull(wildcardItorList72);
        org.junit.Assert.assertNotNull(wildcardItorList74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(wildcardItorList78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(wildcardItorList80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNull(wildcardComparator84);
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0448");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor18.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableItor35.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        boolean boolean38 = strComparableItor35.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor27.getComparator();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableItor45.hasNext();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        boolean boolean48 = strComparableItor45.hasNext();
        strComparableItor27.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor45.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        boolean boolean53 = strComparableItor45.hasNext();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor55 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor45.setIterator((-1), strComparableItor55);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator17);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(wildcardComparator40);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0449");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor20.getIterators();
        boolean boolean23 = strComparableItor20.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor20.getIterators();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor27.getIterators();
        boolean boolean33 = strComparableItor27.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor27.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor27.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor27.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor20.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertNotNull(wildcardItorList36);
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0450");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator23 = strComparableItor20.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator24 = strComparableItor20.getComparator();
        strComparableItor0.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator26 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable27 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardComparator23);
        org.junit.Assert.assertNull(wildcardComparator24);
        org.junit.Assert.assertNull(wildcardComparator26);
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0451");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        boolean boolean3 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable5 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList4);
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0452");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator5 = strComparableItor2.getComparator();
        boolean boolean6 = strComparableItor2.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator7 = strComparableItor2.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor10.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableItor12.hasNext();
        strComparableItor10.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor12);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor10.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor10.getIterators();
        boolean boolean17 = strComparableItor10.hasNext();
        boolean boolean18 = strComparableItor10.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator19 = strComparableItor10.getComparator();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor2.setIterator((int) (byte) 100, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(wildcardComparator7);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(wildcardComparator19);
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0453");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable14 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0454");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor2.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor2.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            int int19 = strComparableItor2.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator17);
        org.junit.Assert.assertNotNull(wildcardItorList18);
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0455");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor39.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableItor43.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList46 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor47.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableItor49.hasNext();
        strComparableItor47.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        boolean boolean52 = strComparableItor49.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator54 = strComparableItor41.getComparator();
        strComparableItor39.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList58 = strComparableItor57.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor59 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableItor59.hasNext();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor59);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList62 = strComparableItor57.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor63 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList64 = strComparableItor63.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor65 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableItor65.hasNext();
        strComparableItor63.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        boolean boolean68 = strComparableItor65.hasNext();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor70 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList71 = strComparableItor70.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList72 = strComparableItor70.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor73 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList74 = strComparableItor73.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor75 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean76 = strComparableItor75.hasNext();
        strComparableItor73.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor75);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList78 = strComparableItor73.getIterators();
        boolean boolean79 = strComparableItor73.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList80 = strComparableItor73.getIterators();
        boolean boolean81 = strComparableItor73.hasNext();
        strComparableItor70.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor73);
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor70);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor84 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList85 = strComparableItor84.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor86 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean87 = strComparableItor86.hasNext();
        strComparableItor84.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor86);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator89 = strComparableItor86.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator90 = strComparableItor86.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator91 = strComparableItor86.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList92 = strComparableItor86.getIterators();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor86);
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor57);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable95 = strComparableItor57.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardItorList46);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(wildcardComparator54);
        org.junit.Assert.assertNotNull(wildcardItorList58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardItorList62);
        org.junit.Assert.assertNotNull(wildcardItorList64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardItorList71);
        org.junit.Assert.assertNotNull(wildcardItorList72);
        org.junit.Assert.assertNotNull(wildcardItorList74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(wildcardItorList78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(wildcardItorList80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(wildcardItorList85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNull(wildcardComparator89);
        org.junit.Assert.assertNull(wildcardComparator90);
        org.junit.Assert.assertNull(wildcardComparator91);
        org.junit.Assert.assertNotNull(wildcardItorList92);
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0456");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor8.getIterators();
        boolean boolean14 = strComparableItor8.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor8.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor8.getIterators();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableItor22.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator25 = strComparableItor22.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator26 = strComparableItor22.getComparator();
        strComparableItor2.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableItor37.hasNext();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor37);
        boolean boolean40 = strComparableItor37.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor37);
        boolean boolean42 = strComparableItor29.hasNext();
        strComparableItor2.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) ' ', (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(wildcardComparator25);
        org.junit.Assert.assertNull(wildcardComparator26);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0457");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator9 = strComparableItor8.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableItor15.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor15);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor13.getIterators();
        boolean boolean20 = strComparableItor13.hasNext();
        boolean boolean21 = strComparableItor13.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor13.getComparator();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) (byte) 10, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNull(wildcardComparator9);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardComparator22);
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0458");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor0.getIterators();
        boolean boolean7 = strComparableItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            int int8 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0459");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableItor26.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor30.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor32 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableItor32.hasNext();
        strComparableItor30.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor32);
        boolean boolean35 = strComparableItor32.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor32);
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        strComparableItor0.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList41 = strComparableItor40.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor42 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableItor42.hasNext();
        strComparableItor40.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor42);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList45 = strComparableItor40.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor46 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList47 = strComparableItor46.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor48 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean49 = strComparableItor48.hasNext();
        strComparableItor46.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor48);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor46.getIterators();
        boolean boolean52 = strComparableItor46.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList53 = strComparableItor46.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor46.getIterators();
        strComparableItor40.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList56 = strComparableItor40.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor58 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList59 = strComparableItor58.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor60 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean61 = strComparableItor60.hasNext();
        strComparableItor58.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor60);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator63 = strComparableItor60.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator64 = strComparableItor60.getComparator();
        strComparableItor40.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor60);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator66 = strComparableItor40.getComparator();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor24.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertNotNull(wildcardItorList41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardItorList45);
        org.junit.Assert.assertNotNull(wildcardItorList47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardItorList53);
        org.junit.Assert.assertNotNull(wildcardItorList54);
        org.junit.Assert.assertNotNull(wildcardItorList56);
        org.junit.Assert.assertNotNull(wildcardItorList59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(wildcardComparator63);
        org.junit.Assert.assertNull(wildcardComparator64);
        org.junit.Assert.assertNull(wildcardComparator66);
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0460");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableItor40.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor44 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList45 = strComparableItor44.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor46 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean47 = strComparableItor46.hasNext();
        strComparableItor44.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        boolean boolean49 = strComparableItor46.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator51 = strComparableItor38.getComparator();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor54 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList55 = strComparableItor54.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor56 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableItor56.hasNext();
        strComparableItor54.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor56);
        boolean boolean59 = strComparableItor56.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator60 = strComparableItor56.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator61 = strComparableItor56.getComparator();
        strComparableItor17.setIterator((int) (short) 1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor56);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor63 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList64 = strComparableItor63.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor65 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableItor65.hasNext();
        strComparableItor63.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator68 = strComparableItor65.getComparator();
        boolean boolean69 = strComparableItor65.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable71 = strComparableItor17.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertNotNull(wildcardItorList45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(wildcardComparator51);
        org.junit.Assert.assertNotNull(wildcardItorList55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(wildcardComparator60);
        org.junit.Assert.assertNull(wildcardComparator61);
        org.junit.Assert.assertNotNull(wildcardItorList64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(wildcardComparator68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0461");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        boolean boolean16 = strComparableItor0.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            int int18 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(wildcardComparator17);
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0462");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        boolean boolean22 = strComparableItor16.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor16.getIterators();
        boolean boolean24 = strComparableItor16.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        boolean boolean27 = strComparableItor13.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor13.getIterators();
        java.lang.Class<?> wildcardClass29 = strComparableItor13.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0463");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        boolean boolean14 = strComparableItor0.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor0.getComparator();
        boolean boolean16 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        boolean boolean28 = strComparableItor25.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor30.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor30.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableItor35.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor33.getIterators();
        boolean boolean39 = strComparableItor33.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor33.getIterators();
        boolean boolean41 = strComparableItor33.hasNext();
        strComparableItor30.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator44 = strComparableItor17.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList45 = strComparableItor17.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(wildcardComparator44);
        org.junit.Assert.assertNotNull(wildcardItorList45);
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0464");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean1 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            int int4 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList3);
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0465");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator23 = strComparableItor20.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator24 = strComparableItor20.getComparator();
        strComparableItor0.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        // The following exception was thrown during execution in test generation
        try {
            int int26 = strComparableItor20.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardComparator23);
        org.junit.Assert.assertNull(wildcardComparator24);
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0466");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableItor23.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        boolean boolean32 = strComparableItor29.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor21.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator35 = strComparableItor21.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor37.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableItor39.hasNext();
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator42 = strComparableItor39.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator43 = strComparableItor39.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator44 = strComparableItor39.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator45 = strComparableItor39.getComparator();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        boolean boolean47 = strComparableItor21.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor49.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor49.getIterators();
        boolean boolean52 = strComparableItor49.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList53 = strComparableItor49.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor49.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        // The following exception was thrown during execution in test generation
        try {
            int int56 = strComparableItor49.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertNull(wildcardComparator35);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(wildcardComparator42);
        org.junit.Assert.assertNull(wildcardComparator43);
        org.junit.Assert.assertNull(wildcardComparator44);
        org.junit.Assert.assertNull(wildcardComparator45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardItorList50);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardItorList53);
        org.junit.Assert.assertNotNull(wildcardItorList54);
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0467");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor2.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor2.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable19 = strComparableItor2.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator17);
        org.junit.Assert.assertNotNull(wildcardItorList18);
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0468");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor7.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableItor11.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableItor17.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        boolean boolean20 = strComparableItor17.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor9.getComparator();
        strComparableItor7.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableItor27.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean30 = strComparableItor27.hasNext();
        strComparableItor9.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor27.getIterators();
        boolean boolean34 = strComparableItor27.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor27.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            int int36 = strComparableItor27.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList35);
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0469");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        // The following exception was thrown during execution in test generation
        try {
            int int5 = strComparableItor2.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0470");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean1 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        boolean boolean3 = strComparableItor0.hasNext();
        boolean boolean4 = strComparableItor0.hasNext();
        java.lang.Class<?> wildcardClass5 = strComparableItor0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0471");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        boolean boolean22 = strComparableItor16.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor16.getIterators();
        boolean boolean24 = strComparableItor16.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        boolean boolean27 = strComparableItor13.hasNext();
        boolean boolean28 = strComparableItor13.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor30.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor32 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableItor32.hasNext();
        strComparableItor30.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor32);
        boolean boolean35 = strComparableItor32.hasNext();
        boolean boolean36 = strComparableItor32.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator37 = strComparableItor32.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor13.setIterator(1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(wildcardComparator37);
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0472");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor7.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableItor11.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableItor17.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        boolean boolean20 = strComparableItor17.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor9.getComparator();
        strComparableItor7.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableItor27.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean30 = strComparableItor27.hasNext();
        strComparableItor9.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableItor35.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor33.getIterators();
        boolean boolean39 = strComparableItor33.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0473");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        boolean boolean22 = strComparableItor16.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor16.getIterators();
        boolean boolean24 = strComparableItor16.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator32 = strComparableItor29.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator33 = strComparableItor29.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor29.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor29.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable37 = strComparableItor29.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(wildcardComparator32);
        org.junit.Assert.assertNull(wildcardComparator33);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertNotNull(wildcardItorList35);
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0474");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor3.getIterators();
        boolean boolean12 = strComparableItor3.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0475");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor0.getIterators();
        boolean boolean7 = strComparableItor0.hasNext();
        boolean boolean8 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableItor11.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableItor17.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableItor23.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        boolean boolean26 = strComparableItor23.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor15);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator29 = strComparableItor15.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor15.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor15.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(wildcardComparator29);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertNotNull(wildcardItorList31);
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0476");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator14 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator16 = strComparableItor0.getComparator();
        boolean boolean17 = strComparableItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNull(wildcardComparator14);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0477");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator5 = strComparableItor2.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor2.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor2.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0478");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean1 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        boolean boolean3 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor5.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableItor7.hasNext();
        strComparableItor5.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor7);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor5.getIterators();
        boolean boolean11 = strComparableItor5.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) (byte) 100, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0479");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        boolean boolean3 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList12 = strComparableItor11.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableItor13.hasNext();
        strComparableItor11.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor11.getIterators();
        boolean boolean17 = strComparableItor11.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor11.getIterators();
        boolean boolean19 = strComparableItor11.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator21 = strComparableItor8.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor22.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertNotNull(wildcardItorList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(wildcardComparator21);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0480");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardItorList9);
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0481");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator23 = strComparableItor20.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator24 = strComparableItor20.getComparator();
        strComparableItor0.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor28.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableItor30.hasNext();
        strComparableItor28.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor28.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor34 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor34.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableItor36.hasNext();
        strComparableItor34.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        boolean boolean39 = strComparableItor36.hasNext();
        strComparableItor28.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator41 = strComparableItor28.getComparator();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator43 = strComparableItor28.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator44 = strComparableItor28.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardComparator23);
        org.junit.Assert.assertNull(wildcardComparator24);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(wildcardComparator41);
        org.junit.Assert.assertNull(wildcardComparator43);
        org.junit.Assert.assertNull(wildcardComparator44);
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0482");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor6.getIterators();
        boolean boolean9 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList12 = strComparableItor6.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            int int13 = strComparableItor6.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertNotNull(wildcardItorList12);
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0483");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        boolean boolean16 = strComparableItor6.hasNext();
        boolean boolean17 = strComparableItor6.hasNext();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor6.addIterator(strComparableItor18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0484");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        boolean boolean7 = strComparableItor0.hasNext();
        java.lang.Class<?> wildcardClass8 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0485");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        boolean boolean23 = strComparableItor20.hasNext();
        strComparableItor2.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableItor28.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor32 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor32.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor34 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableItor34.hasNext();
        strComparableItor32.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor34);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor32.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableItor40.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        boolean boolean43 = strComparableItor40.hasNext();
        strComparableItor32.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor32);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator46 = strComparableItor32.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor48 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList49 = strComparableItor48.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor50 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean51 = strComparableItor50.hasNext();
        strComparableItor48.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor50);
        boolean boolean53 = strComparableItor50.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator54 = strComparableItor50.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator55 = strComparableItor50.getComparator();
        boolean boolean56 = strComparableItor50.hasNext();
        strComparableItor32.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor50);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList58 = strComparableItor32.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList59 = strComparableItor32.getIterators();
        boolean boolean60 = strComparableItor32.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor2.setIterator((int) (byte) 10, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor32);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(wildcardComparator46);
        org.junit.Assert.assertNotNull(wildcardItorList49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(wildcardComparator54);
        org.junit.Assert.assertNull(wildcardComparator55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardItorList58);
        org.junit.Assert.assertNotNull(wildcardItorList59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0486");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator20 = strComparableItor6.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        boolean boolean27 = strComparableItor24.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator28 = strComparableItor24.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator29 = strComparableItor24.getComparator();
        boolean boolean30 = strComparableItor24.hasNext();
        strComparableItor6.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        // The following exception was thrown during execution in test generation
        try {
            int int32 = strComparableItor6.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(wildcardComparator20);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(wildcardComparator28);
        org.junit.Assert.assertNull(wildcardComparator29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0487");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor2.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor19.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableItor21.hasNext();
        strComparableItor19.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor19.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator25 = strComparableItor19.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor19.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator28 = strComparableItor27.getComparator();
        strComparableItor19.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator30 = strComparableItor27.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor2.setIterator(100, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator17);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNull(wildcardComparator25);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNull(wildcardComparator28);
        org.junit.Assert.assertNull(wildcardComparator30);
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0488");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        boolean boolean3 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            int int7 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0489");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableItor40.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor44 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList45 = strComparableItor44.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor46 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean47 = strComparableItor46.hasNext();
        strComparableItor44.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        boolean boolean49 = strComparableItor46.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator51 = strComparableItor38.getComparator();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor54 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList55 = strComparableItor54.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor56 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableItor56.hasNext();
        strComparableItor54.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor56);
        boolean boolean59 = strComparableItor56.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator60 = strComparableItor56.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator61 = strComparableItor56.getComparator();
        strComparableItor17.setIterator((int) (short) 1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor56);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator63 = strComparableItor17.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            int int64 = strComparableItor17.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertNotNull(wildcardItorList45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(wildcardComparator51);
        org.junit.Assert.assertNotNull(wildcardItorList55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(wildcardComparator60);
        org.junit.Assert.assertNull(wildcardComparator61);
        org.junit.Assert.assertNull(wildcardComparator63);
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0490");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor14.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator21 = strComparableItor14.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor14.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor14.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNull(wildcardComparator21);
        org.junit.Assert.assertNull(wildcardComparator22);
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0491");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        boolean boolean22 = strComparableItor16.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor16.getIterators();
        boolean boolean24 = strComparableItor16.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator32 = strComparableItor29.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator33 = strComparableItor29.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor29.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor29.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable37 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(wildcardComparator32);
        org.junit.Assert.assertNull(wildcardComparator33);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertNotNull(wildcardItorList35);
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0492");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableItor22.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor20.getIterators();
        boolean boolean26 = strComparableItor20.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor20.getIterators();
        boolean boolean28 = strComparableItor20.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator30 = strComparableItor17.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor31.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean34 = strComparableItor33.hasNext();
        strComparableItor31.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor37.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableItor39.hasNext();
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor37.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableItor45.hasNext();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        boolean boolean48 = strComparableItor45.hasNext();
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor50 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor50.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList52 = strComparableItor50.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor53 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor53.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor55 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean56 = strComparableItor55.hasNext();
        strComparableItor53.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor55);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList58 = strComparableItor53.getIterators();
        boolean boolean59 = strComparableItor53.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList60 = strComparableItor53.getIterators();
        boolean boolean61 = strComparableItor53.hasNext();
        strComparableItor50.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor50);
        boolean boolean64 = strComparableItor50.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor50);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor66 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList67 = strComparableItor66.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor68 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean69 = strComparableItor68.hasNext();
        strComparableItor66.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor68);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList71 = strComparableItor66.getIterators();
        boolean boolean72 = strComparableItor66.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList73 = strComparableItor66.getIterators();
        boolean boolean74 = strComparableItor66.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator75 = strComparableItor66.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator76 = strComparableItor66.getComparator();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor66);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor66);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator79 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            int int80 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(wildcardComparator30);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertNotNull(wildcardItorList52);
        org.junit.Assert.assertNotNull(wildcardItorList54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardItorList58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardItorList60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardItorList67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardItorList71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(wildcardItorList73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(wildcardComparator75);
        org.junit.Assert.assertNull(wildcardComparator76);
        org.junit.Assert.assertNull(wildcardComparator79);
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0493");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator1 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            int int2 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardComparator1);
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0494");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator9 = strComparableItor8.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator11 = strComparableItor8.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable12 = strComparableItor8.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNull(wildcardComparator9);
        org.junit.Assert.assertNull(wildcardComparator11);
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0495");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        boolean boolean5 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor7.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableItor9.hasNext();
        strComparableItor7.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableItor15.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor15);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor13.getIterators();
        boolean boolean19 = strComparableItor13.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor13.getIterators();
        strComparableItor7.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor7.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableItor27.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor31.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean34 = strComparableItor33.hasNext();
        strComparableItor31.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        boolean boolean36 = strComparableItor33.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator38 = strComparableItor25.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator39 = strComparableItor25.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableItor43.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator46 = strComparableItor43.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator47 = strComparableItor43.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator48 = strComparableItor43.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator49 = strComparableItor43.getComparator();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor25.getIterators();
        strComparableItor7.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor54 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList55 = strComparableItor54.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor56 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableItor56.hasNext();
        strComparableItor54.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor56);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList59 = strComparableItor54.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator60 = strComparableItor54.getComparator();
        strComparableItor25.setIterator(1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor54);
        boolean boolean62 = strComparableItor25.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((-1), (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(wildcardComparator38);
        org.junit.Assert.assertNull(wildcardComparator39);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(wildcardComparator46);
        org.junit.Assert.assertNull(wildcardComparator47);
        org.junit.Assert.assertNull(wildcardComparator48);
        org.junit.Assert.assertNull(wildcardComparator49);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertNotNull(wildcardItorList55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardItorList59);
        org.junit.Assert.assertNull(wildcardComparator60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0496");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableItor26.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        boolean boolean29 = strComparableItor26.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator31 = strComparableItor18.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator32 = strComparableItor18.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor34 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor34.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableItor36.hasNext();
        strComparableItor34.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator39 = strComparableItor36.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor36.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator41 = strComparableItor36.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator42 = strComparableItor36.getComparator();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor18.getIterators();
        strComparableItor0.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor47.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableItor49.hasNext();
        strComparableItor47.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList52 = strComparableItor47.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator53 = strComparableItor47.getComparator();
        strComparableItor18.setIterator(1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor47);
        boolean boolean55 = strComparableItor18.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            int int56 = strComparableItor18.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(wildcardComparator31);
        org.junit.Assert.assertNull(wildcardComparator32);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(wildcardComparator39);
        org.junit.Assert.assertNull(wildcardComparator40);
        org.junit.Assert.assertNull(wildcardComparator41);
        org.junit.Assert.assertNull(wildcardComparator42);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardItorList52);
        org.junit.Assert.assertNull(wildcardComparator53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0497");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor20.getIterators();
        boolean boolean23 = strComparableItor20.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor20.getIterators();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor29.getIterators();
        boolean boolean35 = strComparableItor29.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor29.getIterators();
        boolean boolean37 = strComparableItor29.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator39 = strComparableItor26.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor26.getComparator();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator42 = strComparableItor6.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            int int43 = strComparableItor6.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(wildcardComparator39);
        org.junit.Assert.assertNull(wildcardComparator40);
        org.junit.Assert.assertNull(wildcardComparator42);
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0498");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor20.getIterators();
        boolean boolean23 = strComparableItor20.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor20.getIterators();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor29.getIterators();
        boolean boolean35 = strComparableItor29.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor29.getIterators();
        boolean boolean37 = strComparableItor29.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator39 = strComparableItor26.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor26.getComparator();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor26.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(wildcardComparator39);
        org.junit.Assert.assertNull(wildcardComparator40);
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0499");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableItor23.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        boolean boolean32 = strComparableItor29.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor21.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator35 = strComparableItor21.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor37.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableItor39.hasNext();
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator42 = strComparableItor39.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator43 = strComparableItor39.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator44 = strComparableItor39.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator45 = strComparableItor39.getComparator();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        boolean boolean47 = strComparableItor21.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor49.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor49.getIterators();
        boolean boolean52 = strComparableItor49.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList53 = strComparableItor49.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor49.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable56 = strComparableItor49.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertNull(wildcardComparator35);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(wildcardComparator42);
        org.junit.Assert.assertNull(wildcardComparator43);
        org.junit.Assert.assertNull(wildcardComparator44);
        org.junit.Assert.assertNull(wildcardComparator45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardItorList50);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardItorList53);
        org.junit.Assert.assertNotNull(wildcardItorList54);
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0500");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor8.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }
}

