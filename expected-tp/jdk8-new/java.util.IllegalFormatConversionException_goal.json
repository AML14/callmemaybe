[
  {
    "signature": "java.util.IllegalFormatConversionException(char c, java.lang.Class<?> arg)",
    "name": "java.util.IllegalFormatConversionException",
    "containingClass": {
      "qualifiedName": "java.util.IllegalFormatConversionException",
      "name": "IllegalFormatConversionException",
      "isArray": false
    },
    "targetClass": "java.util.IllegalFormatConversionException",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "char",
          "name": "char",
          "isArray": false
        },
        "name": "c"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Class",
          "name": "Class",
          "isArray": false
        },
        "name": "arg"
      }
    ],
    "protocol": {
      "member": "java.util.IllegalFormatConversionException(char c, java.lang.Class<?> arg)",
      "comment": "Constructs an instance of this class with the mismatched conversion and the corresponding argument class.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getConversion()",
    "name": "getConversion",
    "containingClass": {
      "qualifiedName": "java.util.IllegalFormatConversionException",
      "name": "IllegalFormatConversionException",
      "isArray": false
    },
    "targetClass": "java.util.IllegalFormatConversionException",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "char",
      "name": "char",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getConversion()",
      "comment": "Returns the inapplicable conversion.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getArgumentClass()",
    "name": "getArgumentClass",
    "containingClass": {
      "qualifiedName": "java.util.IllegalFormatConversionException",
      "name": "IllegalFormatConversionException",
      "isArray": false
    },
    "targetClass": "java.util.IllegalFormatConversionException",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Class<?>",
      "name": "java.lang.Class<?>",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getArgumentClass()",
      "comment": "Returns the class of the mismatched argument.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getMessage()",
    "name": "getMessage",
    "containingClass": {
      "qualifiedName": "java.util.IllegalFormatConversionException",
      "name": "IllegalFormatConversionException",
      "isArray": false
    },
    "targetClass": "java.util.IllegalFormatConversionException",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getMessage()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  }
]