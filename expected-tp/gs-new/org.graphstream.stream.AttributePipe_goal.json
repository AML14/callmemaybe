[
  {
    "signature": "setGlobalAttributeFilter(org.graphstream.stream.AttributePredicate filter)",
    "name": "setGlobalAttributeFilter",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.AttributePipe",
      "name": "AttributePipe",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.AttributePipe",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.graphstream.stream.AttributePredicate",
          "name": "AttributePredicate",
          "isArray": false
        },
        "name": "filter"
      }
    ],
    "protocol": {
      "member": "setGlobalAttributeFilter(org.graphstream.stream.AttributePredicate filter)",
      "comment": "Set an attribute filter for graph, node and edge attributes. If the filter is null, attributes will not be filtered globally.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setGraphAttributeFilter(org.graphstream.stream.AttributePredicate filter)",
    "name": "setGraphAttributeFilter",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.AttributePipe",
      "name": "AttributePipe",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.AttributePipe",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.graphstream.stream.AttributePredicate",
          "name": "AttributePredicate",
          "isArray": false
        },
        "name": "filter"
      }
    ],
    "protocol": {
      "member": "setGraphAttributeFilter(org.graphstream.stream.AttributePredicate filter)",
      "comment": "Set an attribute filter for graph attributes only (node an edge attributes are not filtered by this filter). If the filter is null, graph attributes will not be filtered.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setNodeAttributeFilter(org.graphstream.stream.AttributePredicate filter)",
    "name": "setNodeAttributeFilter",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.AttributePipe",
      "name": "AttributePipe",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.AttributePipe",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.graphstream.stream.AttributePredicate",
          "name": "AttributePredicate",
          "isArray": false
        },
        "name": "filter"
      }
    ],
    "protocol": {
      "member": "setNodeAttributeFilter(org.graphstream.stream.AttributePredicate filter)",
      "comment": "Set an attribute filter for node attributes only (graph an edge attributes are not filtered by this filter). If the filter is null, node attributes will not be filtered.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setEdgeAttributeFilter(org.graphstream.stream.AttributePredicate filter)",
    "name": "setEdgeAttributeFilter",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.AttributePipe",
      "name": "AttributePipe",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.AttributePipe",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.graphstream.stream.AttributePredicate",
          "name": "AttributePredicate",
          "isArray": false
        },
        "name": "filter"
      }
    ],
    "protocol": {
      "member": "setEdgeAttributeFilter(org.graphstream.stream.AttributePredicate filter)",
      "comment": "Set an attribute filter for edge attributes only (graph an node attributes are not filtered by this filter). If the filter is null, edge attributes will not be filtered.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getGlobalAttributeFilter()",
    "name": "getGlobalAttributeFilter",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.AttributePipe",
      "name": "AttributePipe",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.AttributePipe",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.graphstream.stream.AttributePredicate",
      "name": "org.graphstream.stream.AttributePredicate",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getGlobalAttributeFilter()",
      "comment": "The filter for all graph, node and edge attributes. This filter can be null.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getGraphAttributeFilter()",
    "name": "getGraphAttributeFilter",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.AttributePipe",
      "name": "AttributePipe",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.AttributePipe",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.graphstream.stream.AttributePredicate",
      "name": "org.graphstream.stream.AttributePredicate",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getGraphAttributeFilter()",
      "comment": "The filter for all graph attributes. This filter can be null.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getNodeAttributeFilter()",
    "name": "getNodeAttributeFilter",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.AttributePipe",
      "name": "AttributePipe",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.AttributePipe",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.graphstream.stream.AttributePredicate",
      "name": "org.graphstream.stream.AttributePredicate",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getNodeAttributeFilter()",
      "comment": "The filter for all node attributes. This filter can be null.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getEdgeAttributeFilter()",
    "name": "getEdgeAttributeFilter",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.AttributePipe",
      "name": "AttributePipe",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.AttributePipe",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.graphstream.stream.AttributePredicate",
      "name": "org.graphstream.stream.AttributePredicate",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getEdgeAttributeFilter()",
      "comment": "The filter for all edge attributes. This filter can be null.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "edgeAttributeAdded(java.lang.String graphId, long timeId, java.lang.String edgeId, java.lang.String attribute, java.lang.Object value)",
    "name": "edgeAttributeAdded",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.AttributePipe",
      "name": "AttributePipe",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.AttributePipe",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "graphId"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "timeId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "edgeId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "attribute"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "protocol": {
      "member": "edgeAttributeAdded(java.lang.String graphId, long timeId, java.lang.String edgeId, java.lang.String attribute, java.lang.Object value)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "edgeAttributeChanged(java.lang.String graphId, long timeId, java.lang.String edgeId, java.lang.String attribute, java.lang.Object oldValue, java.lang.Object newValue)",
    "name": "edgeAttributeChanged",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.AttributePipe",
      "name": "AttributePipe",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.AttributePipe",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "graphId"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "timeId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "edgeId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "attribute"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "oldValue"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "newValue"
      }
    ],
    "protocol": {
      "member": "edgeAttributeChanged(java.lang.String graphId, long timeId, java.lang.String edgeId, java.lang.String attribute, java.lang.Object oldValue, java.lang.Object newValue)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "edgeAttributeRemoved(java.lang.String graphId, long timeId, java.lang.String edgeId, java.lang.String attribute)",
    "name": "edgeAttributeRemoved",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.AttributePipe",
      "name": "AttributePipe",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.AttributePipe",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "graphId"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "timeId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "edgeId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "attribute"
      }
    ],
    "protocol": {
      "member": "edgeAttributeRemoved(java.lang.String graphId, long timeId, java.lang.String edgeId, java.lang.String attribute)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "graphAttributeAdded(java.lang.String graphId, long timeId, java.lang.String attribute, java.lang.Object value)",
    "name": "graphAttributeAdded",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.AttributePipe",
      "name": "AttributePipe",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.AttributePipe",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "graphId"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "timeId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "attribute"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "protocol": {
      "member": "graphAttributeAdded(java.lang.String graphId, long timeId, java.lang.String attribute, java.lang.Object value)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "graphAttributeChanged(java.lang.String graphId, long timeId, java.lang.String attribute, java.lang.Object oldValue, java.lang.Object newValue)",
    "name": "graphAttributeChanged",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.AttributePipe",
      "name": "AttributePipe",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.AttributePipe",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "graphId"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "timeId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "attribute"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "oldValue"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "newValue"
      }
    ],
    "protocol": {
      "member": "graphAttributeChanged(java.lang.String graphId, long timeId, java.lang.String attribute, java.lang.Object oldValue, java.lang.Object newValue)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "graphAttributeRemoved(java.lang.String graphId, long timeId, java.lang.String attribute)",
    "name": "graphAttributeRemoved",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.AttributePipe",
      "name": "AttributePipe",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.AttributePipe",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "graphId"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "timeId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "attribute"
      }
    ],
    "protocol": {
      "member": "graphAttributeRemoved(java.lang.String graphId, long timeId, java.lang.String attribute)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "nodeAttributeAdded(java.lang.String graphId, long timeId, java.lang.String nodeId, java.lang.String attribute, java.lang.Object value)",
    "name": "nodeAttributeAdded",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.AttributePipe",
      "name": "AttributePipe",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.AttributePipe",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "graphId"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "timeId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "nodeId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "attribute"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "protocol": {
      "member": "nodeAttributeAdded(java.lang.String graphId, long timeId, java.lang.String nodeId, java.lang.String attribute, java.lang.Object value)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "nodeAttributeChanged(java.lang.String graphId, long timeId, java.lang.String nodeId, java.lang.String attribute, java.lang.Object oldValue, java.lang.Object newValue)",
    "name": "nodeAttributeChanged",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.AttributePipe",
      "name": "AttributePipe",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.AttributePipe",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "graphId"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "timeId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "nodeId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "attribute"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "oldValue"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "newValue"
      }
    ],
    "protocol": {
      "member": "nodeAttributeChanged(java.lang.String graphId, long timeId, java.lang.String nodeId, java.lang.String attribute, java.lang.Object oldValue, java.lang.Object newValue)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "nodeAttributeRemoved(java.lang.String graphId, long timeId, java.lang.String nodeId, java.lang.String attribute)",
    "name": "nodeAttributeRemoved",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.AttributePipe",
      "name": "AttributePipe",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.AttributePipe",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "graphId"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "timeId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "nodeId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "attribute"
      }
    ],
    "protocol": {
      "member": "nodeAttributeRemoved(java.lang.String graphId, long timeId, java.lang.String nodeId, java.lang.String attribute)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  }
]