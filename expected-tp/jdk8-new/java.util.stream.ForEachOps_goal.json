[
  {
    "signature": "makeRef(java.util.function.Consumer<? super T> action, boolean ordered)",
    "name": "makeRef",
    "containingClass": {
      "qualifiedName": "java.util.stream.ForEachOps",
      "name": "ForEachOps",
      "isArray": false
    },
    "targetClass": "java.util.stream.ForEachOps",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.stream.TerminalOp<T, java.lang.Void>",
      "name": "java.util.stream.TerminalOp<T, java.lang.Void>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.function.Consumer",
          "name": "Consumer",
          "isArray": false
        },
        "name": "action"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "ordered"
      }
    ],
    "protocol": {
      "member": "makeRef(java.util.function.Consumer<? super T> action, boolean ordered)",
      "comment": "Constructs a TerminalOp that perform an action for every element of a stream.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "makeInt(java.util.function.IntConsumer action, boolean ordered)",
    "name": "makeInt",
    "containingClass": {
      "qualifiedName": "java.util.stream.ForEachOps",
      "name": "ForEachOps",
      "isArray": false
    },
    "targetClass": "java.util.stream.ForEachOps",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.stream.TerminalOp<java.lang.Integer, java.lang.Void>",
      "name": "java.util.stream.TerminalOp<java.lang.Integer, java.lang.Void>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.function.IntConsumer",
          "name": "IntConsumer",
          "isArray": false
        },
        "name": "action"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "ordered"
      }
    ],
    "protocol": {
      "member": "makeInt(java.util.function.IntConsumer action, boolean ordered)",
      "comment": "Constructs a TerminalOp that perform an action for every element of an IntStream.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "makeLong(java.util.function.LongConsumer action, boolean ordered)",
    "name": "makeLong",
    "containingClass": {
      "qualifiedName": "java.util.stream.ForEachOps",
      "name": "ForEachOps",
      "isArray": false
    },
    "targetClass": "java.util.stream.ForEachOps",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.stream.TerminalOp<java.lang.Long, java.lang.Void>",
      "name": "java.util.stream.TerminalOp<java.lang.Long, java.lang.Void>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.function.LongConsumer",
          "name": "LongConsumer",
          "isArray": false
        },
        "name": "action"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "ordered"
      }
    ],
    "protocol": {
      "member": "makeLong(java.util.function.LongConsumer action, boolean ordered)",
      "comment": "Constructs a TerminalOp that perform an action for every element of a LongStream.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "makeDouble(java.util.function.DoubleConsumer action, boolean ordered)",
    "name": "makeDouble",
    "containingClass": {
      "qualifiedName": "java.util.stream.ForEachOps",
      "name": "ForEachOps",
      "isArray": false
    },
    "targetClass": "java.util.stream.ForEachOps",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.stream.TerminalOp<java.lang.Double, java.lang.Void>",
      "name": "java.util.stream.TerminalOp<java.lang.Double, java.lang.Void>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.function.DoubleConsumer",
          "name": "DoubleConsumer",
          "isArray": false
        },
        "name": "action"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "ordered"
      }
    ],
    "protocol": {
      "member": "makeDouble(java.util.function.DoubleConsumer action, boolean ordered)",
      "comment": "Constructs a TerminalOp that perform an action for every element of a DoubleStream.",
      "kind": "FreeText",
      "condition": ""
    }
  }
]