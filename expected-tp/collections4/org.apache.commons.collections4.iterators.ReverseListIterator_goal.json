[
  {
    "signature": "org.apache.commons.collections4.iterators.ReverseListIterator(java.util.List<E> list)",
    "name": "org.apache.commons.collections4.iterators.ReverseListIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.iterators.ReverseListIterator",
      "name": "ReverseListIterator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.iterators.ReverseListIterator",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "list"
      }
    ],
    "protocol": {
      "member": "org.apache.commons.collections4.iterators.ReverseListIterator(java.util.List<E> list)",
      "comment": "Constructor that wraps a list.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "hasNext()",
    "name": "hasNext",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.iterators.ReverseListIterator",
      "name": "ReverseListIterator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.iterators.ReverseListIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "hasNext()",
      "comment": "Checks whether there is another element.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "next()",
    "name": "next",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.iterators.ReverseListIterator",
      "name": "ReverseListIterator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.iterators.ReverseListIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "E",
      "name": "E",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "next()",
      "comment": "Gets the next element. The next element is the previous in the list.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "nextIndex()",
    "name": "nextIndex",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.iterators.ReverseListIterator",
      "name": "ReverseListIterator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.iterators.ReverseListIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "nextIndex()",
      "comment": "Gets the index of the next element.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "hasPrevious()",
    "name": "hasPrevious",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.iterators.ReverseListIterator",
      "name": "ReverseListIterator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.iterators.ReverseListIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "hasPrevious()",
      "comment": "Checks whether there is a previous element.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "previous()",
    "name": "previous",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.iterators.ReverseListIterator",
      "name": "ReverseListIterator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.iterators.ReverseListIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "E",
      "name": "E",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "previous()",
      "comment": "Gets the previous element. The next element is the previous in the list.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "previousIndex()",
    "name": "previousIndex",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.iterators.ReverseListIterator",
      "name": "ReverseListIterator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.iterators.ReverseListIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "previousIndex()",
      "comment": "Gets the index of the previous element.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "remove()",
    "name": "remove",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.iterators.ReverseListIterator",
      "name": "ReverseListIterator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.iterators.ReverseListIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "remove()",
      "comment": "Removes the last returned element.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "set(E obj)",
    "name": "set",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.iterators.ReverseListIterator",
      "name": "ReverseListIterator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.iterators.ReverseListIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "obj"
      }
    ],
    "protocol": {
      "member": "set(E obj)",
      "comment": "Replaces the last returned element.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "add(E obj)",
    "name": "add",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.iterators.ReverseListIterator",
      "name": "ReverseListIterator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.iterators.ReverseListIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "obj"
      }
    ],
    "protocol": {
      "member": "add(E obj)",
      "comment": "Adds a new element to the list between the next and previous elements.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "reset()",
    "name": "reset",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.iterators.ReverseListIterator",
      "name": "ReverseListIterator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.iterators.ReverseListIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "reset()",
      "comment": "Resets the iterator back to the start (which is the end of the list as this is a reversed iterator)",
      "kind": "FreeText",
      "condition": ""
    }
  }
]