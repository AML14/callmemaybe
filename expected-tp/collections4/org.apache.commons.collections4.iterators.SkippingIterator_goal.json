[
  {
    "signature": "org.apache.commons.collections4.iterators.SkippingIterator(java.util.Iterator<E> iterator, long offset)",
    "name": "org.apache.commons.collections4.iterators.SkippingIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.iterators.SkippingIterator",
      "name": "SkippingIterator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.iterators.SkippingIterator",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "offset"
      }
    ],
    "protocol": {
      "member": "org.apache.commons.collections4.iterators.SkippingIterator(java.util.Iterator<E> iterator, long offset)",
      "comment": "Decorates the specified iterator to skip all elements until the iterator reaches the position at offset.  The iterator is immediately advanced until it reaches the position at offset, incurring method_0 time.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "next()",
    "name": "next",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.iterators.SkippingIterator",
      "name": "SkippingIterator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.iterators.SkippingIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "E",
      "name": "E",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "next()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "remove()",
    "name": "remove",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.iterators.SkippingIterator",
      "name": "SkippingIterator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.iterators.SkippingIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "remove()",
      "comment": "{@inheritDoc}  In case an offset other than 0 was specified, the underlying iterator will be advanced to this position upon creation. A call to method_0 will still result in an IllegalStateException if no explicit call to method_1 has been made prior to calling method_0.",
      "kind": "FreeText",
      "condition": ""
    }
  }
]