[
  {
    "signature": "java.util.logging.Formatter()",
    "name": "java.util.logging.Formatter",
    "containingClass": {
      "qualifiedName": "java.util.logging.Formatter",
      "name": "Formatter",
      "isArray": false
    },
    "targetClass": "java.util.logging.Formatter",
    "isVarArgs": false,
    "parameters": [],
    "protocol": {
      "member": "java.util.logging.Formatter()",
      "comment": "Construct a new formatter.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "format(java.util.logging.LogRecord record)",
    "name": "format",
    "containingClass": {
      "qualifiedName": "java.util.logging.Formatter",
      "name": "Formatter",
      "isArray": false
    },
    "targetClass": "java.util.logging.Formatter",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.logging.LogRecord",
          "name": "LogRecord",
          "isArray": false
        },
        "name": "record"
      }
    ],
    "protocol": {
      "member": "format(java.util.logging.LogRecord record)",
      "comment": "Format the given log record and return the formatted string.  The resulting formatted String will normally include a localized and formatted version of the LogRecord's message field. It is recommended to use the method_0 convenience method to localize and format the message field.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getHead(java.util.logging.Handler h)",
    "name": "getHead",
    "containingClass": {
      "qualifiedName": "java.util.logging.Formatter",
      "name": "Formatter",
      "isArray": false
    },
    "targetClass": "java.util.logging.Formatter",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.logging.Handler",
          "name": "Handler",
          "isArray": false
        },
        "name": "h"
      }
    ],
    "protocol": {
      "member": "getHead(java.util.logging.Handler h)",
      "comment": "Return the header string for a set of formatted records.  This base class returns an empty string, but this may be overridden by subclasses.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getTail(java.util.logging.Handler h)",
    "name": "getTail",
    "containingClass": {
      "qualifiedName": "java.util.logging.Formatter",
      "name": "Formatter",
      "isArray": false
    },
    "targetClass": "java.util.logging.Formatter",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.logging.Handler",
          "name": "Handler",
          "isArray": false
        },
        "name": "h"
      }
    ],
    "protocol": {
      "member": "getTail(java.util.logging.Handler h)",
      "comment": "Return the tail string for a set of formatted records.  This base class returns an empty string, but this may be overridden by subclasses.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "formatMessage(java.util.logging.LogRecord record)",
    "name": "formatMessage",
    "containingClass": {
      "qualifiedName": "java.util.logging.Formatter",
      "name": "Formatter",
      "isArray": false
    },
    "targetClass": "java.util.logging.Formatter",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.logging.LogRecord",
          "name": "LogRecord",
          "isArray": false
        },
        "name": "record"
      }
    ],
    "protocol": {
      "member": "formatMessage(java.util.logging.LogRecord record)",
      "comment": "Localize and format the message string from a log record. This method is provided as a convenience for Formatter subclasses to use when they are performing formatting.  The message string is first localized to a format string using the record's ResourceBundle. (If there is no ResourceBundle, or if the message key is not found, then the key is used as the format string.) The format String uses javamethod_0 style formatting.  <li>If there are no parameters, no formatter is used. <li>Otherwise, if the string contains \"{0\" then javamethod_0method_2 is used to format the string. <li>Otherwise no formatting is performed.",
      "kind": "FreeText",
      "condition": ""
    }
  }
]