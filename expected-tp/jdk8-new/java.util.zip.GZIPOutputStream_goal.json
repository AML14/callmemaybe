[
  {
    "signature": "java.util.zip.GZIPOutputStream(java.io.OutputStream out, int size)",
    "name": "java.util.zip.GZIPOutputStream",
    "containingClass": {
      "qualifiedName": "java.util.zip.GZIPOutputStream",
      "name": "GZIPOutputStream",
      "isArray": false
    },
    "targetClass": "java.util.zip.GZIPOutputStream",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.OutputStream",
          "name": "OutputStream",
          "isArray": false
        },
        "name": "out"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "size"
      }
    ],
    "protocol": {
      "member": "java.util.zip.GZIPOutputStream(java.io.OutputStream out, int size)",
      "comment": "Creates a new output stream with the specified buffer size. The new output stream instance is created as if by invoking the 3-argument constructor method_0",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "java.util.zip.GZIPOutputStream(java.io.OutputStream out, int size, boolean syncFlush)",
    "name": "java.util.zip.GZIPOutputStream",
    "containingClass": {
      "qualifiedName": "java.util.zip.GZIPOutputStream",
      "name": "GZIPOutputStream",
      "isArray": false
    },
    "targetClass": "java.util.zip.GZIPOutputStream",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.OutputStream",
          "name": "OutputStream",
          "isArray": false
        },
        "name": "out"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "size"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "syncFlush"
      }
    ],
    "protocol": {
      "member": "java.util.zip.GZIPOutputStream(java.io.OutputStream out, int size, boolean syncFlush)",
      "comment": "Creates a new output stream with the specified buffer size and flush mode.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "java.util.zip.GZIPOutputStream(java.io.OutputStream out)",
    "name": "java.util.zip.GZIPOutputStream",
    "containingClass": {
      "qualifiedName": "java.util.zip.GZIPOutputStream",
      "name": "GZIPOutputStream",
      "isArray": false
    },
    "targetClass": "java.util.zip.GZIPOutputStream",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.OutputStream",
          "name": "OutputStream",
          "isArray": false
        },
        "name": "out"
      }
    ],
    "protocol": {
      "member": "java.util.zip.GZIPOutputStream(java.io.OutputStream out)",
      "comment": "Creates a new output stream with a default buffer size. The new output stream instance is created as if by invoking the 2-argument constructor method_0",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "java.util.zip.GZIPOutputStream(java.io.OutputStream out, boolean syncFlush)",
    "name": "java.util.zip.GZIPOutputStream",
    "containingClass": {
      "qualifiedName": "java.util.zip.GZIPOutputStream",
      "name": "GZIPOutputStream",
      "isArray": false
    },
    "targetClass": "java.util.zip.GZIPOutputStream",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.OutputStream",
          "name": "OutputStream",
          "isArray": false
        },
        "name": "out"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "syncFlush"
      }
    ],
    "protocol": {
      "member": "java.util.zip.GZIPOutputStream(java.io.OutputStream out, boolean syncFlush)",
      "comment": "Creates a new output stream with a default buffer size and the specified flush mode.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "write(byte[] buf, int off, int len)",
    "name": "write",
    "containingClass": {
      "qualifiedName": "java.util.zip.GZIPOutputStream",
      "name": "GZIPOutputStream",
      "isArray": false
    },
    "targetClass": "java.util.zip.GZIPOutputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[B",
          "name": "byte[]",
          "isArray": true
        },
        "name": "buf"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "off"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "len"
      }
    ],
    "protocol": {
      "member": "write(byte[] buf, int off, int len)",
      "comment": "Writes array of bytes to the compressed output stream. This method will block until all the bytes are written.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "finish()",
    "name": "finish",
    "containingClass": {
      "qualifiedName": "java.util.zip.GZIPOutputStream",
      "name": "GZIPOutputStream",
      "isArray": false
    },
    "targetClass": "java.util.zip.GZIPOutputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "finish()",
      "comment": "Finishes writing compressed data to the output stream without closing the underlying stream. Use this method when applying multiple filters in succession to the same output stream. @exception IOException if an I/O error has occurred",
      "kind": "FreeText",
      "condition": ""
    }
  }
]