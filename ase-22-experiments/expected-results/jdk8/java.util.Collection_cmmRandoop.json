[
  {
    "operationSignature": "add",
    "isConstructor": false,
    "mustPrecede": "receiverObjectID.contains(args[0])",
    "mustFollow": "",
    "comment": "Ensures that this collection contains the specified element (optional operation).  Returns <tt>true</tt> if this collection changed as a result of the call.  (Returns <tt>false</tt> if this collection does not permit duplicates and already contains the specified element.)<p> Collections that support this operation may place limitations on what elements may be added to this collection.  In particular, some collections will refuse to add <tt>null</tt> elements, and others will impose restrictions on the type of elements that may be added. Collection classes should clearly specify in their documentation any restrictions on what elements may be added.<p> If a collection refuses to add a particular element for any reason other than that it already contains the element, it <i>must</i> throw an exception (rather than returning <tt>false</tt>).  This preserves the invariant that a collection always contains the specified element after this call returns. "
  },
  {
    "operationSignature": "removeAll",
    "isConstructor": false,
    "mustPrecede": "receiverObjectID.contains(args[0])",
    "mustFollow": "",
    "comment": "Removes all of this collection's elements that are also contained in the specified collection (optional operation).  After this call returns, this collection will contain no elements in common with the specified collection. "
  },
  {
    "operationSignature": "clear",
    "isConstructor": false,
    "mustPrecede": "receiverObjectID.isEmpty()",
    "mustFollow": "",
    "comment": "Removes all of the elements from this collection (optional operation). The collection will be empty after this method returns. "
  }
]