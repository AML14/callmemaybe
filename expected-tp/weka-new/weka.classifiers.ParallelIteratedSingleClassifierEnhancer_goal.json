[
  {
    "signature": "listOptions()",
    "name": "listOptions",
    "containingClass": {
      "qualifiedName": "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
      "name": "ParallelIteratedSingleClassifierEnhancer",
      "isArray": false
    },
    "targetClass": "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Enumeration<weka.core.Option>",
      "name": "java.util.Enumeration<weka.core.Option>",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "listOptions()",
      "comment": "Returns an enumeration describing the available options.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setOptions(java.lang.String[] options)",
    "name": "setOptions",
    "containingClass": {
      "qualifiedName": "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
      "name": "ParallelIteratedSingleClassifierEnhancer",
      "isArray": false
    },
    "targetClass": "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Ljava.lang.String;",
          "name": "String[]",
          "isArray": true
        },
        "name": "options"
      }
    ],
    "protocol": {
      "member": "setOptions(java.lang.String[] options)",
      "comment": "Parses a given list of options. Valid options are:  -num-slots num <br> Set the number of execution slots to use (default 1 - imethod_0. no parallelism).  Options after -- are passed to the designated classifier.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getOptions()",
    "name": "getOptions",
    "containingClass": {
      "qualifiedName": "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
      "name": "ParallelIteratedSingleClassifierEnhancer",
      "isArray": false
    },
    "targetClass": "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String[]",
      "name": "java.lang.String[]",
      "isArray": true
    },
    "parameters": [],
    "protocol": {
      "member": "getOptions()",
      "comment": "Gets the current settings of the classifier.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setNumExecutionSlots(int numSlots)",
    "name": "setNumExecutionSlots",
    "containingClass": {
      "qualifiedName": "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
      "name": "ParallelIteratedSingleClassifierEnhancer",
      "isArray": false
    },
    "targetClass": "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "numSlots"
      }
    ],
    "protocol": {
      "member": "setNumExecutionSlots(int numSlots)",
      "comment": "Set the number of execution slots (threads) to use for building the members of the ensemble.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getNumExecutionSlots()",
    "name": "getNumExecutionSlots",
    "containingClass": {
      "qualifiedName": "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
      "name": "ParallelIteratedSingleClassifierEnhancer",
      "isArray": false
    },
    "targetClass": "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getNumExecutionSlots()",
      "comment": "Get the number of execution slots (threads) to use for building the members of the ensemble.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "numExecutionSlotsTipText()",
    "name": "numExecutionSlotsTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
      "name": "ParallelIteratedSingleClassifierEnhancer",
      "isArray": false
    },
    "targetClass": "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "numExecutionSlotsTipText()",
      "comment": "Returns the tip text for this property",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "buildClassifier(weka.core.Instances data)",
    "name": "buildClassifier",
    "containingClass": {
      "qualifiedName": "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
      "name": "ParallelIteratedSingleClassifierEnhancer",
      "isArray": false
    },
    "targetClass": "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "weka.core.Instances",
          "name": "Instances",
          "isArray": false
        },
        "name": "data"
      }
    ],
    "protocol": {
      "member": "buildClassifier(weka.core.Instances data)",
      "comment": "Stump method for building the classifiers",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "buildClassifiers()",
    "name": "buildClassifiers",
    "containingClass": {
      "qualifiedName": "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
      "name": "ParallelIteratedSingleClassifierEnhancer",
      "isArray": false
    },
    "targetClass": "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "buildClassifiers()",
      "comment": "Does the actual construction of the ensemble",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getTrainingSet(int iteration)",
    "name": "getTrainingSet",
    "containingClass": {
      "qualifiedName": "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
      "name": "ParallelIteratedSingleClassifierEnhancer",
      "isArray": false
    },
    "targetClass": "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "weka.core.Instances",
      "name": "weka.core.Instances",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "iteration"
      }
    ],
    "protocol": {
      "member": "getTrainingSet(int iteration)",
      "comment": "Gets a training set for a particular iteration. Implementations need to be careful with thread safety and should probably be synchronized to be on the safe side.",
      "kind": "FreeText",
      "condition": ""
    }
  }
]