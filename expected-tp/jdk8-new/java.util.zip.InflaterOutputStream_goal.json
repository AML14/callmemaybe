[
  {
    "signature": "java.util.zip.InflaterOutputStream(java.io.OutputStream out)",
    "name": "java.util.zip.InflaterOutputStream",
    "containingClass": {
      "qualifiedName": "java.util.zip.InflaterOutputStream",
      "name": "InflaterOutputStream",
      "isArray": false
    },
    "targetClass": "java.util.zip.InflaterOutputStream",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.OutputStream",
          "name": "OutputStream",
          "isArray": false
        },
        "name": "out"
      }
    ],
    "protocol": {
      "member": "java.util.zip.InflaterOutputStream(java.io.OutputStream out)",
      "comment": "Creates a new output stream with a default decompressor and buffer size.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "java.util.zip.InflaterOutputStream(java.io.OutputStream out, java.util.zip.Inflater infl)",
    "name": "java.util.zip.InflaterOutputStream",
    "containingClass": {
      "qualifiedName": "java.util.zip.InflaterOutputStream",
      "name": "InflaterOutputStream",
      "isArray": false
    },
    "targetClass": "java.util.zip.InflaterOutputStream",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.OutputStream",
          "name": "OutputStream",
          "isArray": false
        },
        "name": "out"
      },
      {
        "type": {
          "qualifiedName": "java.util.zip.Inflater",
          "name": "Inflater",
          "isArray": false
        },
        "name": "infl"
      }
    ],
    "protocol": {
      "member": "java.util.zip.InflaterOutputStream(java.io.OutputStream out, java.util.zip.Inflater infl)",
      "comment": "Creates a new output stream with the specified decompressor and a default buffer size.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "java.util.zip.InflaterOutputStream(java.io.OutputStream out, java.util.zip.Inflater infl, int bufLen)",
    "name": "java.util.zip.InflaterOutputStream",
    "containingClass": {
      "qualifiedName": "java.util.zip.InflaterOutputStream",
      "name": "InflaterOutputStream",
      "isArray": false
    },
    "targetClass": "java.util.zip.InflaterOutputStream",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.OutputStream",
          "name": "OutputStream",
          "isArray": false
        },
        "name": "out"
      },
      {
        "type": {
          "qualifiedName": "java.util.zip.Inflater",
          "name": "Inflater",
          "isArray": false
        },
        "name": "infl"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "bufLen"
      }
    ],
    "protocol": {
      "member": "java.util.zip.InflaterOutputStream(java.io.OutputStream out, java.util.zip.Inflater infl, int bufLen)",
      "comment": "Creates a new output stream with the specified decompressor and buffer size.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "close()",
    "name": "close",
    "containingClass": {
      "qualifiedName": "java.util.zip.InflaterOutputStream",
      "name": "InflaterOutputStream",
      "isArray": false
    },
    "targetClass": "java.util.zip.InflaterOutputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "close()",
      "comment": "Writes any remaining uncompressed data to the output stream and closes the underlying output stream.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "flush()",
    "name": "flush",
    "containingClass": {
      "qualifiedName": "java.util.zip.InflaterOutputStream",
      "name": "InflaterOutputStream",
      "isArray": false
    },
    "targetClass": "java.util.zip.InflaterOutputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "flush()",
      "comment": "Flushes this output stream, forcing any pending buffered output bytes to be written.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "finish()",
    "name": "finish",
    "containingClass": {
      "qualifiedName": "java.util.zip.InflaterOutputStream",
      "name": "InflaterOutputStream",
      "isArray": false
    },
    "targetClass": "java.util.zip.InflaterOutputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "finish()",
      "comment": "Finishes writing uncompressed data to the output stream without closing the underlying stream. Use this method when applying multiple filters in succession to the same output stream.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "write(int b)",
    "name": "write",
    "containingClass": {
      "qualifiedName": "java.util.zip.InflaterOutputStream",
      "name": "InflaterOutputStream",
      "isArray": false
    },
    "targetClass": "java.util.zip.InflaterOutputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "b"
      }
    ],
    "protocol": {
      "member": "write(int b)",
      "comment": "Writes a byte to the uncompressed output stream.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "write(byte[] b, int off, int len)",
    "name": "write",
    "containingClass": {
      "qualifiedName": "java.util.zip.InflaterOutputStream",
      "name": "InflaterOutputStream",
      "isArray": false
    },
    "targetClass": "java.util.zip.InflaterOutputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[B",
          "name": "byte[]",
          "isArray": true
        },
        "name": "b"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "off"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "len"
      }
    ],
    "protocol": {
      "member": "write(byte[] b, int off, int len)",
      "comment": "Writes an array of bytes to the uncompressed output stream.",
      "kind": "FreeText",
      "condition": ""
    }
  }
]