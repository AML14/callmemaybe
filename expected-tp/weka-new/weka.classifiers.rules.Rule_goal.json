[
  {
    "signature": "copy()",
    "name": "copy",
    "containingClass": {
      "qualifiedName": "weka.classifiers.rules.Rule",
      "name": "Rule",
      "isArray": false
    },
    "targetClass": "weka.classifiers.rules.Rule",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Object",
      "name": "java.lang.Object",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "copy()",
      "comment": "Get a shallow copy of this rule",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "covers(weka.core.Instance datum)",
    "name": "covers",
    "containingClass": {
      "qualifiedName": "weka.classifiers.rules.Rule",
      "name": "Rule",
      "isArray": false
    },
    "targetClass": "weka.classifiers.rules.Rule",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "weka.core.Instance",
          "name": "Instance",
          "isArray": false
        },
        "name": "datum"
      }
    ],
    "protocol": {
      "member": "covers(weka.core.Instance datum)",
      "comment": "Whether the instance covered by this rule",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "grow(weka.core.Instances data)",
    "name": "grow",
    "containingClass": {
      "qualifiedName": "weka.classifiers.rules.Rule",
      "name": "Rule",
      "isArray": false
    },
    "targetClass": "weka.classifiers.rules.Rule",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "weka.core.Instances",
          "name": "Instances",
          "isArray": false
        },
        "name": "data"
      }
    ],
    "protocol": {
      "member": "grow(weka.core.Instances data)",
      "comment": "Build this rule",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "hasAntds()",
    "name": "hasAntds",
    "containingClass": {
      "qualifiedName": "weka.classifiers.rules.Rule",
      "name": "Rule",
      "isArray": false
    },
    "targetClass": "weka.classifiers.rules.Rule",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "hasAntds()",
      "comment": "Whether this rule has antecedents, imethod_0. whether it is a default rule",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getConsequent()",
    "name": "getConsequent",
    "containingClass": {
      "qualifiedName": "weka.classifiers.rules.Rule",
      "name": "Rule",
      "isArray": false
    },
    "targetClass": "weka.classifiers.rules.Rule",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getConsequent()",
      "comment": "Get the consequent of this rule, imethod_0. the predicted class",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "size()",
    "name": "size",
    "containingClass": {
      "qualifiedName": "weka.classifiers.rules.Rule",
      "name": "Rule",
      "isArray": false
    },
    "targetClass": "weka.classifiers.rules.Rule",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "size()",
      "comment": "The size of the rule. Could be number of antecedents in the case of conjunctive rule",
      "kind": "FreeText",
      "condition": ""
    }
  }
]