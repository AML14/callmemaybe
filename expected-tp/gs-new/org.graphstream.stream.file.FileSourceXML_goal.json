[
  {
    "signature": "org.graphstream.stream.file.FileSourceXML()",
    "name": "org.graphstream.stream.file.FileSourceXML",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.file.FileSourceXML",
      "name": "FileSourceXML",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.file.FileSourceXML",
    "isVarArgs": false,
    "parameters": [],
    "protocol": {
      "member": "org.graphstream.stream.file.FileSourceXML()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "readAll(java.lang.String fileName)",
    "name": "readAll",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.file.FileSourceXML",
      "name": "FileSourceXML",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.file.FileSourceXML",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "fileName"
      }
    ],
    "protocol": {
      "member": "readAll(java.lang.String fileName)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "readAll(java.net.URL url)",
    "name": "readAll",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.file.FileSourceXML",
      "name": "FileSourceXML",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.file.FileSourceXML",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.net.URL",
          "name": "URL",
          "isArray": false
        },
        "name": "url"
      }
    ],
    "protocol": {
      "member": "readAll(java.net.URL url)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "readAll(java.io.InputStream stream)",
    "name": "readAll",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.file.FileSourceXML",
      "name": "FileSourceXML",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.file.FileSourceXML",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.InputStream",
          "name": "InputStream",
          "isArray": false
        },
        "name": "stream"
      }
    ],
    "protocol": {
      "member": "readAll(java.io.InputStream stream)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "readAll(java.io.Reader reader)",
    "name": "readAll",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.file.FileSourceXML",
      "name": "FileSourceXML",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.file.FileSourceXML",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.Reader",
          "name": "Reader",
          "isArray": false
        },
        "name": "reader"
      }
    ],
    "protocol": {
      "member": "readAll(java.io.Reader reader)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "begin(java.lang.String fileName)",
    "name": "begin",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.file.FileSourceXML",
      "name": "FileSourceXML",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.file.FileSourceXML",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "fileName"
      }
    ],
    "protocol": {
      "member": "begin(java.lang.String fileName)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "begin(java.net.URL url)",
    "name": "begin",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.file.FileSourceXML",
      "name": "FileSourceXML",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.file.FileSourceXML",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.net.URL",
          "name": "URL",
          "isArray": false
        },
        "name": "url"
      }
    ],
    "protocol": {
      "member": "begin(java.net.URL url)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "begin(java.io.InputStream stream)",
    "name": "begin",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.file.FileSourceXML",
      "name": "FileSourceXML",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.file.FileSourceXML",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.InputStream",
          "name": "InputStream",
          "isArray": false
        },
        "name": "stream"
      }
    ],
    "protocol": {
      "member": "begin(java.io.InputStream stream)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "begin(java.io.Reader reader)",
    "name": "begin",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.file.FileSourceXML",
      "name": "FileSourceXML",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.file.FileSourceXML",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.Reader",
          "name": "Reader",
          "isArray": false
        },
        "name": "reader"
      }
    ],
    "protocol": {
      "member": "begin(java.io.Reader reader)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "afterStartDocument()",
    "name": "afterStartDocument",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.file.FileSourceXML",
      "name": "FileSourceXML",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.file.FileSourceXML",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "afterStartDocument()",
      "comment": "Called after the event javaxmethod_0method_1method_2method_3method_4 has been received.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "beforeEndDocument()",
    "name": "beforeEndDocument",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.file.FileSourceXML",
      "name": "FileSourceXML",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.file.FileSourceXML",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "beforeEndDocument()",
      "comment": "Called before trying to receive the events javaxmethod_0method_1method_2method_3.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "nextEvents()",
    "name": "nextEvents",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.file.FileSourceXML",
      "name": "FileSourceXML",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.file.FileSourceXML",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "nextEvents()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "nextStep()",
    "name": "nextStep",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.file.FileSourceXML",
      "name": "FileSourceXML",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.file.FileSourceXML",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "nextStep()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "end()",
    "name": "end",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.file.FileSourceXML",
      "name": "FileSourceXML",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.file.FileSourceXML",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "end()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getNextEvent()",
    "name": "getNextEvent",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.file.FileSourceXML",
      "name": "FileSourceXML",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.file.FileSourceXML",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "javax.xml.stream.events.XMLEvent",
      "name": "javax.xml.stream.events.XMLEvent",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getNextEvent()",
      "comment": "Get a new event from the stream. This method has to be used to allow the method_0 method to work.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "pushback(javax.xml.stream.events.XMLEvent e)",
    "name": "pushback",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.file.FileSourceXML",
      "name": "FileSourceXML",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.file.FileSourceXML",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "javax.xml.stream.events.XMLEvent",
          "name": "XMLEvent",
          "isArray": false
        },
        "name": "e"
      }
    ],
    "protocol": {
      "member": "pushback(javax.xml.stream.events.XMLEvent e)",
      "comment": "Pushback an event in the stream.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "newParseError(javax.xml.stream.events.XMLEvent e, java.lang.String msg, java.lang.Object... args)",
    "name": "newParseError",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.file.FileSourceXML",
      "name": "FileSourceXML",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.file.FileSourceXML",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "javax.xml.stream.XMLStreamException",
      "name": "javax.xml.stream.XMLStreamException",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "javax.xml.stream.events.XMLEvent",
          "name": "XMLEvent",
          "isArray": false
        },
        "name": "e"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "msg"
      },
      {
        "type": {
          "qualifiedName": "[Ljava.lang.Object;",
          "name": "Object[]",
          "isArray": true
        },
        "name": "args"
      }
    ],
    "protocol": {
      "member": "newParseError(javax.xml.stream.events.XMLEvent e, java.lang.String msg, java.lang.Object... args)",
      "comment": "Generate a new parse exception.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "isEvent(javax.xml.stream.events.XMLEvent e, int type, java.lang.String name)",
    "name": "isEvent",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.file.FileSourceXML",
      "name": "FileSourceXML",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.file.FileSourceXML",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "javax.xml.stream.events.XMLEvent",
          "name": "XMLEvent",
          "isArray": false
        },
        "name": "e"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "type"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "name"
      }
    ],
    "protocol": {
      "member": "isEvent(javax.xml.stream.events.XMLEvent e, int type, java.lang.String name)",
      "comment": "Check is an event has an expected type and name.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "checkValid(javax.xml.stream.events.XMLEvent e, int type, java.lang.String name)",
    "name": "checkValid",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.file.FileSourceXML",
      "name": "FileSourceXML",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.file.FileSourceXML",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "javax.xml.stream.events.XMLEvent",
          "name": "XMLEvent",
          "isArray": false
        },
        "name": "e"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "type"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "name"
      }
    ],
    "protocol": {
      "member": "checkValid(javax.xml.stream.events.XMLEvent e, int type, java.lang.String name)",
      "comment": "Check is the event has valid type and name. If not, a new exception is thrown.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "openStream(java.io.Reader stream)",
    "name": "openStream",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.file.FileSourceXML",
      "name": "FileSourceXML",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.file.FileSourceXML",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.Reader",
          "name": "Reader",
          "isArray": false
        },
        "name": "stream"
      }
    ],
    "protocol": {
      "member": "openStream(java.io.Reader stream)",
      "comment": "Open a new xml events stream.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "closeStream()",
    "name": "closeStream",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.file.FileSourceXML",
      "name": "FileSourceXML",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.file.FileSourceXML",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "closeStream()",
      "comment": "Close the current opened stream.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "toConstantName(javax.xml.stream.events.Attribute a)",
    "name": "toConstantName",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.file.FileSourceXML",
      "name": "FileSourceXML",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.file.FileSourceXML",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "javax.xml.stream.events.Attribute",
          "name": "Attribute",
          "isArray": false
        },
        "name": "a"
      }
    ],
    "protocol": {
      "member": "toConstantName(javax.xml.stream.events.Attribute a)",
      "comment": "Convert an attribute to a valid constant name.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "toConstantName(java.lang.String value)",
    "name": "toConstantName",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.file.FileSourceXML",
      "name": "FileSourceXML",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.file.FileSourceXML",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "protocol": {
      "member": "toConstantName(java.lang.String value)",
      "comment": "Convert a string to a valid constant name. String is put to upper case and all non-word characters are replaced by '_'.",
      "kind": "FreeText",
      "condition": ""
    }
  }
]