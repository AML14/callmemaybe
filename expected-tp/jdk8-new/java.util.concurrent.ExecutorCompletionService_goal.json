[
  {
    "signature": "java.util.concurrent.ExecutorCompletionService(java.util.concurrent.Executor executor)",
    "name": "java.util.concurrent.ExecutorCompletionService",
    "containingClass": {
      "qualifiedName": "java.util.concurrent.ExecutorCompletionService",
      "name": "ExecutorCompletionService",
      "isArray": false
    },
    "targetClass": "java.util.concurrent.ExecutorCompletionService",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.concurrent.Executor",
          "name": "Executor",
          "isArray": false
        },
        "name": "executor"
      }
    ],
    "protocol": {
      "member": "java.util.concurrent.ExecutorCompletionService(java.util.concurrent.Executor executor)",
      "comment": "Creates an ExecutorCompletionService using the supplied executor for base task execution and a LinkedBlockingQueue as a completion queue.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "java.util.concurrent.ExecutorCompletionService(java.util.concurrent.Executor executor, java.util.concurrent.BlockingQueue<java.util.concurrent.Future<V>> completionQueue)",
    "name": "java.util.concurrent.ExecutorCompletionService",
    "containingClass": {
      "qualifiedName": "java.util.concurrent.ExecutorCompletionService",
      "name": "ExecutorCompletionService",
      "isArray": false
    },
    "targetClass": "java.util.concurrent.ExecutorCompletionService",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.concurrent.Executor",
          "name": "Executor",
          "isArray": false
        },
        "name": "executor"
      },
      {
        "type": {
          "qualifiedName": "java.util.concurrent.BlockingQueue",
          "name": "BlockingQueue",
          "isArray": false
        },
        "name": "completionQueue"
      }
    ],
    "protocol": {
      "member": "java.util.concurrent.ExecutorCompletionService(java.util.concurrent.Executor executor, java.util.concurrent.BlockingQueue<java.util.concurrent.Future<V>> completionQueue)",
      "comment": "Creates an ExecutorCompletionService using the supplied executor for base task execution and the supplied queue as its completion queue.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "submit(java.util.concurrent.Callable<V> task)",
    "name": "submit",
    "containingClass": {
      "qualifiedName": "java.util.concurrent.ExecutorCompletionService",
      "name": "ExecutorCompletionService",
      "isArray": false
    },
    "targetClass": "java.util.concurrent.ExecutorCompletionService",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.concurrent.Future<V>",
      "name": "java.util.concurrent.Future<V>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.concurrent.Callable",
          "name": "Callable",
          "isArray": false
        },
        "name": "task"
      }
    ],
    "protocol": {
      "member": "submit(java.util.concurrent.Callable<V> task)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "submit(java.lang.Runnable task, V result)",
    "name": "submit",
    "containingClass": {
      "qualifiedName": "java.util.concurrent.ExecutorCompletionService",
      "name": "ExecutorCompletionService",
      "isArray": false
    },
    "targetClass": "java.util.concurrent.ExecutorCompletionService",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.concurrent.Future<V>",
      "name": "java.util.concurrent.Future<V>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Runnable",
          "name": "Runnable",
          "isArray": false
        },
        "name": "task"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "result"
      }
    ],
    "protocol": {
      "member": "submit(java.lang.Runnable task, V result)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "take()",
    "name": "take",
    "containingClass": {
      "qualifiedName": "java.util.concurrent.ExecutorCompletionService",
      "name": "ExecutorCompletionService",
      "isArray": false
    },
    "targetClass": "java.util.concurrent.ExecutorCompletionService",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.concurrent.Future<V>",
      "name": "java.util.concurrent.Future<V>",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "take()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "poll()",
    "name": "poll",
    "containingClass": {
      "qualifiedName": "java.util.concurrent.ExecutorCompletionService",
      "name": "ExecutorCompletionService",
      "isArray": false
    },
    "targetClass": "java.util.concurrent.ExecutorCompletionService",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.concurrent.Future<V>",
      "name": "java.util.concurrent.Future<V>",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "poll()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "poll(long timeout, java.util.concurrent.TimeUnit unit)",
    "name": "poll",
    "containingClass": {
      "qualifiedName": "java.util.concurrent.ExecutorCompletionService",
      "name": "ExecutorCompletionService",
      "isArray": false
    },
    "targetClass": "java.util.concurrent.ExecutorCompletionService",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.concurrent.Future<V>",
      "name": "java.util.concurrent.Future<V>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "timeout"
      },
      {
        "type": {
          "qualifiedName": "java.util.concurrent.TimeUnit",
          "name": "TimeUnit",
          "isArray": false
        },
        "name": "unit"
      }
    ],
    "protocol": {
      "member": "poll(long timeout, java.util.concurrent.TimeUnit unit)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  }
]