import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        int int4 = wildcardClassItor1.nextIndex();
        int int5 = wildcardClassItor1.previousIndex();
        boolean boolean6 = wildcardClassItor1.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate8 = wildcardClassItor1.getPredicate();
        int int9 = wildcardClassItor1.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor10 = wildcardClassItor1.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass11 = wildcardClassItor1.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertNull(wildcardPredicate8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(wildcardItor10);
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor7);
        int int9 = typeItor8.nextIndex();
        int int10 = typeItor8.previousIndex();
        boolean boolean11 = typeItor8.hasNext();
        int int12 = typeItor8.previousIndex();
        java.lang.Class<?> wildcardClass13 = typeItor8.getClass();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        boolean boolean17 = wildcardClassItor15.hasPrevious();
        int int18 = wildcardClassItor15.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        int int21 = wildcardClassItor20.previousIndex();
        int int22 = wildcardClassItor20.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor23 = wildcardClassItor20.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor24 = wildcardClassItor20.getListIterator();
        wildcardClassItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor24);
        int int26 = wildcardClassItor15.previousIndex();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor28 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor29 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor28.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor29);
        int int31 = wildcardClassItor29.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor32 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor29);
        boolean boolean33 = wildcardClassItor32.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor34 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor32);
        int int35 = wildcardClassItor32.previousIndex();
        boolean boolean36 = wildcardClassItor32.hasNext();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor37 = wildcardClassItor32.getListIterator();
        boolean boolean38 = wildcardClassItor32.hasPrevious();
        wildcardClassItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor32);
        boolean boolean40 = wildcardClassItor15.hasNext();
        java.lang.Class<?> wildcardClass41 = wildcardClassItor15.getClass();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(wildcardItor23);
        org.junit.Assert.assertNotNull(wildcardItor24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardItor37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor4 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        boolean boolean8 = wildcardClassItor6.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor12 = wildcardClassItor10.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        int int17 = wildcardClassItor15.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor20 = wildcardClassItor13.getListIterator();
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        wildcardClassItor6.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int24 = wildcardClassItor13.previousIndex();
        int int25 = wildcardClassItor13.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor26 = wildcardClassItor13.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor28 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        int int29 = wildcardClassItor28.nextIndex();
        boolean boolean30 = wildcardClassItor28.hasPrevious();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor28);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor32 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor28);
        int int33 = wildcardClassItor32.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor34 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor35 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor36 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor35.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor36);
        int int38 = wildcardClassItor36.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor39 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor36);
        wildcardClassItor34.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor39);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor41 = wildcardClassItor34.getListIterator();
        int int42 = wildcardClassItor34.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor43 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor44 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor43.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor44);
        int int46 = wildcardClassItor44.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor47 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor44);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate48 = wildcardClassItor47.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor49 = wildcardClassItor47.getListIterator();
        wildcardClassItor34.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor47);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor51 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor47);
        int int52 = wildcardClassItor51.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor53 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor51);
        int int54 = wildcardClassItor51.previousIndex();
        boolean boolean55 = wildcardClassItor51.hasNext();
        wildcardClassItor32.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor51);
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertNull(wildcardItor4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardItor12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(wildcardItor26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate48);
        org.junit.Assert.assertNotNull(wildcardItor49);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor3 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int4 = wildcardClassItor3.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor3.getListIterator();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(wildcardItor5);
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean6 = wildcardClassItor5.hasNext();
        int int7 = wildcardClassItor5.nextIndex();
        boolean boolean8 = wildcardClassItor5.hasPrevious();
        boolean boolean9 = wildcardClassItor5.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass10 = wildcardClassItor5.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        int int4 = wildcardClassItor1.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor1.getPredicate();
        int int7 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate8 = wildcardClassItor1.getPredicate();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(wildcardItor5);
        org.junit.Assert.assertNull(wildcardPredicate6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(wildcardPredicate8);
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate3 = wildcardClassItor1.getPredicate();
        int int4 = wildcardClassItor1.previousIndex();
        int int5 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor1.getPredicate();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass7 = wildcardClassItor1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate6);
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor2 = wildcardClassItor1.getListIterator();
        int int3 = wildcardClassItor1.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNotNull(wildcardItor2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>();
        boolean boolean1 = typeItor0.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor3 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor3.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        int int6 = wildcardClassItor4.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate8 = wildcardClassItor7.getPredicate();
        wildcardClassItor2.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor11.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        int int14 = wildcardClassItor12.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        boolean boolean16 = wildcardClassItor15.hasNext();
        wildcardClassItor2.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        typeItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        // The following exception was thrown during execution in test generation
        try {
            typeItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate8);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        boolean boolean17 = wildcardClassItor15.hasPrevious();
        int int18 = wildcardClassItor15.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        int int21 = wildcardClassItor20.previousIndex();
        int int22 = wildcardClassItor20.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor23 = wildcardClassItor20.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor24 = wildcardClassItor20.getListIterator();
        wildcardClassItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor24);
        int int26 = wildcardClassItor15.previousIndex();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        boolean boolean28 = wildcardClassItor13.hasPrevious();
        boolean boolean29 = wildcardClassItor13.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor30 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor30.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor31);
        int int33 = wildcardClassItor31.previousIndex();
        int int34 = wildcardClassItor31.nextIndex();
        int int35 = wildcardClassItor31.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor36 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor31);
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor36);
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor13.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(wildcardItor23);
        org.junit.Assert.assertNotNull(wildcardItor24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor7);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        boolean boolean12 = wildcardClassItor10.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor16 = wildcardClassItor14.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        int int21 = wildcardClassItor19.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        wildcardClassItor17.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor24 = wildcardClassItor17.getListIterator();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate28 = wildcardClassItor27.getPredicate();
        typeItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        org.apache.commons.collections4.iterators.FilterListIterator<java.io.Serializable> serializableItor30 = new org.apache.commons.collections4.iterators.FilterListIterator<java.io.Serializable>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        int int31 = wildcardClassItor27.nextIndex();
        boolean boolean32 = wildcardClassItor27.hasNext();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(wildcardItor16);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor24);
        org.junit.Assert.assertNull(wildcardPredicate28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        boolean boolean18 = wildcardClassItor8.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor20.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        int int23 = wildcardClassItor21.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        wildcardClassItor19.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor26 = wildcardClassItor19.getListIterator();
        int int27 = wildcardClassItor19.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate28 = wildcardClassItor19.getPredicate();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        boolean boolean30 = wildcardClassItor19.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor32 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor31);
        int int33 = wildcardClassItor32.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor34 = wildcardClassItor32.getListIterator();
        int int35 = wildcardClassItor32.nextIndex();
        wildcardClassItor19.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor32);
        boolean boolean37 = wildcardClassItor19.hasPrevious();
        int int38 = wildcardClassItor19.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass39 = wildcardClassItor19.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        int int4 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate7 = wildcardClassItor1.getPredicate();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass8 = wildcardClassItor1.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNull(wildcardPredicate7);
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor4 = wildcardClassItor1.getListIterator();
        int int5 = wildcardClassItor1.nextIndex();
        boolean boolean6 = wildcardClassItor1.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        int int11 = wildcardClassItor9.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor14 = wildcardClassItor7.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor14);
        int int16 = typeItor15.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        int int21 = wildcardClassItor19.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        wildcardClassItor17.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor24 = wildcardClassItor17.getListIterator();
        int int25 = wildcardClassItor17.previousIndex();
        boolean boolean26 = wildcardClassItor17.hasNext();
        int int27 = wildcardClassItor17.nextIndex();
        typeItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        int int29 = wildcardClassItor17.nextIndex();
        int int30 = wildcardClassItor17.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor32 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor31);
        wildcardClassItor17.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor32);
        int int34 = wildcardClassItor17.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor35 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor36 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor35.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor36);
        boolean boolean38 = wildcardClassItor36.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor39 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor40 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor39.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor40);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor42 = wildcardClassItor40.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor43 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor44 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor45 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor44.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor45);
        int int47 = wildcardClassItor45.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor48 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor45);
        wildcardClassItor43.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor48);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor50 = wildcardClassItor43.getListIterator();
        wildcardClassItor40.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor43);
        wildcardClassItor36.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor43);
        int int53 = wildcardClassItor43.previousIndex();
        int int54 = wildcardClassItor43.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor55 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor43);
        wildcardClassItor17.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor43);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor43);
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor43.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(wildcardItor4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(wildcardItor42);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        int int4 = wildcardClassItor1.nextIndex();
        int int5 = wildcardClassItor1.previousIndex();
        boolean boolean6 = wildcardClassItor1.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate8 = wildcardClassItor1.getPredicate();
        int int9 = wildcardClassItor1.previousIndex();
        java.lang.Class<?> wildcardClass10 = wildcardClassItor1.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertNull(wildcardPredicate8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        int int4 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        int int7 = wildcardClassItor6.previousIndex();
        int int8 = wildcardClassItor6.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor9 = wildcardClassItor6.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor10 = wildcardClassItor6.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor12 = wildcardClassItor1.getListIterator();
        int int13 = wildcardClassItor1.nextIndex();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(wildcardItor9);
        org.junit.Assert.assertNotNull(wildcardItor10);
        org.junit.Assert.assertNotNull(wildcardItor12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor6 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        int int8 = wildcardClassItor7.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass9 = wildcardClassItor7.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertNotNull(wildcardItor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        boolean boolean13 = wildcardClassItor4.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        int int15 = wildcardClassItor14.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass16 = wildcardClassItor14.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor3 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor3.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor3);
        int int6 = wildcardClassItor5.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int10 = wildcardClassItor8.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate12 = wildcardClassItor11.getPredicate();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate13 = wildcardClassItor11.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        int int16 = wildcardClassItor15.previousIndex();
        int int17 = wildcardClassItor15.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor18 = wildcardClassItor15.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor19 = wildcardClassItor15.getListIterator();
        wildcardClassItor11.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor21 = wildcardClassItor11.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor21);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate12);
        org.junit.Assert.assertNull(wildcardPredicate13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(wildcardItor18);
        org.junit.Assert.assertNotNull(wildcardItor19);
        org.junit.Assert.assertNotNull(wildcardItor21);
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate3 = wildcardClassItor1.getPredicate();
        int int4 = wildcardClassItor1.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor6.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        boolean boolean9 = wildcardClassItor7.hasPrevious();
        int int10 = wildcardClassItor7.nextIndex();
        int int11 = wildcardClassItor7.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int14 = wildcardClassItor7.previousIndex();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor4 = wildcardClassItor1.getListIterator();
        java.lang.Class<?> wildcardClass5 = wildcardItor4.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(wildcardItor4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor6 = wildcardClassItor4.getListIterator();
        int int7 = wildcardClassItor4.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        int int9 = wildcardClassItor4.previousIndex();
        boolean boolean10 = wildcardClassItor4.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass12 = wildcardClassItor4.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNotNull(wildcardItor6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardItor11);
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        org.apache.commons.collections4.iterators.FilterListIterator<java.io.Serializable> serializableItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.io.Serializable>();
        int int1 = serializableItor0.previousIndex();
        java.lang.Class<?> wildcardClass2 = serializableItor0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate9 = wildcardClassItor0.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor10.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate9);
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor6 = wildcardClassItor4.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor7.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNotNull(wildcardItor6);
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor4 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor6 = wildcardClassItor1.getListIterator();
        int int7 = wildcardClassItor1.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass8 = wildcardClassItor1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(wildcardItor4);
        org.junit.Assert.assertNotNull(wildcardItor5);
        org.junit.Assert.assertNotNull(wildcardItor6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor7.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate9 = wildcardClassItor7.getPredicate();
        int int10 = wildcardClassItor7.previousIndex();
        int int11 = wildcardClassItor7.previousIndex();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor15.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>();
        boolean boolean1 = typeItor0.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor3 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor3.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        int int6 = wildcardClassItor4.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate8 = wildcardClassItor7.getPredicate();
        wildcardClassItor2.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor11.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        int int14 = wildcardClassItor12.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        boolean boolean16 = wildcardClassItor15.hasNext();
        wildcardClassItor2.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        typeItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor19 = wildcardClassItor15.getListIterator();
        boolean boolean20 = wildcardClassItor15.hasNext();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate8);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardItor19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        boolean boolean19 = wildcardClassItor18.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        int int22 = wildcardClassItor21.previousIndex();
        int int23 = wildcardClassItor21.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate24 = wildcardClassItor21.getPredicate();
        int int25 = wildcardClassItor21.nextIndex();
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        boolean boolean27 = wildcardClassItor18.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor28 = wildcardClassItor18.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate29 = wildcardClassItor18.getPredicate();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(wildcardPredicate24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardItor28);
        org.junit.Assert.assertNull(wildcardPredicate29);
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate9 = wildcardClassItor0.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int11 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate12 = wildcardClassItor10.getPredicate();
        int int13 = wildcardClassItor10.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = wildcardClassItor10.getPredicate();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(wildcardPredicate14);
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor7);
        int int9 = typeItor8.nextIndex();
        int int10 = typeItor8.previousIndex();
        boolean boolean11 = typeItor8.hasNext();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate12 = typeItor8.getPredicate();
        int int13 = typeItor8.previousIndex();
        int int14 = typeItor8.nextIndex();
        boolean boolean15 = typeItor8.hasNext();
        int int16 = typeItor8.nextIndex();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardPredicate12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        int int4 = wildcardClassItor1.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        int int11 = wildcardClassItor9.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        int int18 = wildcardClassItor16.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor21 = wildcardClassItor14.getListIterator();
        boolean boolean22 = wildcardClassItor14.hasPrevious();
        wildcardClassItor12.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        boolean boolean24 = wildcardClassItor12.hasNext();
        int int25 = wildcardClassItor12.nextIndex();
        int int26 = wildcardClassItor12.previousIndex();
        int int27 = wildcardClassItor12.nextIndex();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass29 = wildcardClassItor12.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(wildcardItor5);
        org.junit.Assert.assertNull(wildcardPredicate6);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        int int11 = wildcardClassItor9.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor14 = wildcardClassItor7.getListIterator();
        boolean boolean15 = wildcardClassItor7.hasPrevious();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        boolean boolean17 = wildcardClassItor5.hasNext();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor18 = wildcardClassItor5.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor5.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItor18);
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor5.getPredicate();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        boolean boolean14 = wildcardClassItor13.hasNext();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int17 = wildcardClassItor16.nextIndex();
        boolean boolean18 = wildcardClassItor16.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass19 = wildcardClassItor16.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate6);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = wildcardClassItor13.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        boolean boolean17 = wildcardClassItor13.hasNext();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate14);
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor2 = wildcardClassItor1.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass3 = wildcardClassItor1.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNotNull(wildcardItor2);
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor6 = wildcardClassItor4.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor4.getListIterator();
        boolean boolean8 = wildcardClassItor4.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        boolean boolean12 = wildcardClassItor10.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor16 = wildcardClassItor14.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        int int21 = wildcardClassItor19.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        wildcardClassItor17.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor24 = wildcardClassItor17.getListIterator();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate28 = wildcardClassItor27.getPredicate();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor30 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor32 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor31.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor32);
        int int34 = wildcardClassItor32.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor35 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor32);
        wildcardClassItor30.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor35);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor37 = wildcardClassItor30.getListIterator();
        int int38 = wildcardClassItor30.previousIndex();
        boolean boolean39 = wildcardClassItor30.hasNext();
        int int40 = wildcardClassItor30.nextIndex();
        boolean boolean41 = wildcardClassItor30.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor42 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor30);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor43 = wildcardClassItor30.getListIterator();
        int int44 = wildcardClassItor30.previousIndex();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor30);
        int int46 = wildcardClassItor4.nextIndex();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNotNull(wildcardItor6);
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(wildcardItor16);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor24);
        org.junit.Assert.assertNull(wildcardPredicate28);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardItor43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.previousIndex();
        boolean boolean4 = wildcardClassItor1.hasNext();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor1.getPredicate();
        boolean boolean6 = wildcardClassItor1.hasNext();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        boolean boolean9 = wildcardClassItor0.hasNext();
        int int10 = wildcardClassItor0.nextIndex();
        boolean boolean11 = wildcardClassItor0.hasPrevious();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate12 = wildcardClassItor0.getPredicate();
        int int13 = wildcardClassItor0.nextIndex();
        int int14 = wildcardClassItor0.nextIndex();
        boolean boolean15 = wildcardClassItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardPredicate12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate2 = wildcardClassItor1.getPredicate();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass3 = wildcardClassItor1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardPredicate2);
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor2 = wildcardClassItor1.getListIterator();
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.GenericDeclaration> genericDeclarationItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.GenericDeclaration>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean5 = wildcardClassItor1.hasPrevious();
        boolean boolean6 = wildcardClassItor1.hasNext();
        org.junit.Assert.assertNotNull(wildcardItor2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int19 = wildcardClassItor8.previousIndex();
        int int20 = wildcardClassItor8.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor21 = wildcardClassItor8.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.io.Serializable> serializableItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.io.Serializable>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        boolean boolean23 = wildcardClassItor8.hasPrevious();
        int int24 = wildcardClassItor8.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor8.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(wildcardItor21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor4 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor6 = wildcardClassItor1.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(wildcardItor4);
        org.junit.Assert.assertNotNull(wildcardItor5);
        org.junit.Assert.assertNotNull(wildcardItor6);
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate9 = wildcardClassItor0.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor12.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int15 = wildcardClassItor13.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor17 = wildcardClassItor13.getListIterator();
        int int18 = wildcardClassItor13.previousIndex();
        int int19 = wildcardClassItor13.previousIndex();
        boolean boolean20 = wildcardClassItor13.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor25 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        int int26 = wildcardClassItor25.nextIndex();
        boolean boolean27 = wildcardClassItor25.hasPrevious();
        int int28 = wildcardClassItor25.nextIndex();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        annotatedElementItor11.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass32 = wildcardClassItor25.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate9);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(wildcardItor17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = wildcardClassItor13.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int17 = wildcardClassItor13.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate18 = wildcardClassItor13.getPredicate();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass19 = wildcardClassItor13.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate14);
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate18);
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        int int4 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor7.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor9 = wildcardClassItor7.getListIterator();
        int int10 = wildcardClassItor7.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor7.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate12 = wildcardClassItor7.getPredicate();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass14 = wildcardClassItor7.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertNull(wildcardPredicate12);
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        int int5 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass7 = wildcardClassItor1.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor5.getPredicate();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        boolean boolean14 = wildcardClassItor13.hasNext();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass16 = wildcardClassItor0.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate6);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate19 = wildcardClassItor8.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor21 = wildcardClassItor8.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor23);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate25 = wildcardClassItor24.getPredicate();
        int int26 = wildcardClassItor24.nextIndex();
        boolean boolean27 = wildcardClassItor24.hasNext();
        int int28 = wildcardClassItor24.nextIndex();
        wildcardClassItor22.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        boolean boolean30 = wildcardClassItor24.hasNext();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertNull(wildcardPredicate19);
        org.junit.Assert.assertNotNull(wildcardItor21);
        org.junit.Assert.assertNull(wildcardPredicate25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor3 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int5 = wildcardClassItor0.nextIndex();
        boolean boolean6 = wildcardClassItor0.hasNext();
        boolean boolean7 = wildcardClassItor0.hasPrevious();
        java.lang.Class<?> wildcardClass8 = wildcardClassItor0.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        java.util.ListIterator<java.lang.Class<?>> wildcardClassItor13 = null;
        wildcardClassItor1.setListIterator(wildcardClassItor13);
        int int15 = wildcardClassItor1.nextIndex();
        int int16 = wildcardClassItor1.nextIndex();
        boolean boolean17 = wildcardClassItor1.hasPrevious();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertNotNull(wildcardItor5);
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        int int4 = wildcardClassItor1.nextIndex();
        int int5 = wildcardClassItor1.previousIndex();
        boolean boolean6 = wildcardClassItor1.hasPrevious();
        int int7 = wildcardClassItor1.nextIndex();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        boolean boolean6 = wildcardClassItor4.hasNext();
        int int7 = wildcardClassItor4.nextIndex();
        boolean boolean8 = wildcardClassItor4.hasPrevious();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor4.getPredicate();
        int int7 = wildcardClassItor4.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate8 = wildcardClassItor4.getPredicate();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNull(wildcardPredicate6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(wildcardPredicate8);
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate1 = wildcardClassItor0.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor2 = wildcardClassItor0.getListIterator();
        boolean boolean3 = wildcardClassItor0.hasNext();
        org.junit.Assert.assertNull(wildcardPredicate1);
        org.junit.Assert.assertNull(wildcardItor2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        boolean boolean2 = wildcardClassItor0.hasNext();
        boolean boolean3 = wildcardClassItor0.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.GenericDeclaration> genericDeclarationItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.GenericDeclaration>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        boolean boolean5 = wildcardClassItor0.hasPrevious();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        boolean boolean9 = wildcardClassItor0.hasNext();
        int int10 = wildcardClassItor0.nextIndex();
        boolean boolean11 = wildcardClassItor0.hasPrevious();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate12 = wildcardClassItor0.getPredicate();
        int int13 = wildcardClassItor0.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = wildcardClassItor0.getPredicate();
        boolean boolean15 = wildcardClassItor0.hasPrevious();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardPredicate12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(wildcardPredicate14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        boolean boolean10 = wildcardClassItor9.hasNext();
        int int11 = wildcardClassItor9.previousIndex();
        boolean boolean12 = wildcardClassItor9.hasNext();
        int int13 = wildcardClassItor9.nextIndex();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass15 = wildcardClassItor9.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor4.getListIterator();
        int int6 = wildcardClassItor4.nextIndex();
        boolean boolean7 = wildcardClassItor4.hasPrevious();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        boolean boolean18 = wildcardClassItor8.hasPrevious();
        int int19 = wildcardClassItor8.previousIndex();
        int int20 = wildcardClassItor8.previousIndex();
        int int21 = wildcardClassItor8.previousIndex();
        int int22 = wildcardClassItor8.nextIndex();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        int int1 = wildcardClassItor0.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor2 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate3 = wildcardClassItor0.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor4 = wildcardClassItor0.getListIterator();
        int int5 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor0.getPredicate();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(wildcardItor2);
        org.junit.Assert.assertNull(wildcardPredicate3);
        org.junit.Assert.assertNull(wildcardItor4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate6);
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate1 = wildcardClassItor0.getPredicate();
        boolean boolean2 = wildcardClassItor0.hasNext();
        int int3 = wildcardClassItor0.nextIndex();
        org.junit.Assert.assertNull(wildcardPredicate1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        int int4 = wildcardClassItor1.nextIndex();
        int int5 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor1.getPredicate();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass7 = wildcardClassItor1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate6);
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        boolean boolean9 = wildcardClassItor0.hasNext();
        int int10 = wildcardClassItor0.nextIndex();
        int int11 = wildcardClassItor0.nextIndex();
        boolean boolean12 = wildcardClassItor0.hasNext();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        int int7 = wildcardClassItor4.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor8 = wildcardClassItor4.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        int int17 = wildcardClassItor15.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        boolean boolean19 = wildcardClassItor18.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor21.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        int int24 = wildcardClassItor22.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor25 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        boolean boolean26 = wildcardClassItor25.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        int int28 = wildcardClassItor25.previousIndex();
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor30 = wildcardClassItor25.getListIterator();
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor25.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(wildcardItor8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor30);
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor4.getPredicate();
        boolean boolean7 = wildcardClassItor4.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass8 = wildcardClassItor4.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNull(wildcardPredicate6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor7.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate9 = wildcardClassItor7.getPredicate();
        int int10 = wildcardClassItor7.previousIndex();
        int int11 = wildcardClassItor7.previousIndex();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int14 = wildcardClassItor1.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass15 = wildcardClassItor1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        int int11 = wildcardClassItor9.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor14 = wildcardClassItor7.getListIterator();
        boolean boolean15 = wildcardClassItor7.hasPrevious();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        boolean boolean17 = wildcardClassItor5.hasNext();
        boolean boolean18 = wildcardClassItor5.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate20 = wildcardClassItor5.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor21 = wildcardClassItor5.getListIterator();
        boolean boolean22 = wildcardClassItor5.hasNext();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor23 = wildcardClassItor5.getListIterator();
        java.lang.Class<?> wildcardClass24 = wildcardClassItor5.getClass();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(wildcardPredicate20);
        org.junit.Assert.assertNotNull(wildcardItor21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItor23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor4.getListIterator();
        int int6 = wildcardClassItor4.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor4.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor4.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(wildcardItor7);
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        int int11 = wildcardClassItor9.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor14 = wildcardClassItor7.getListIterator();
        boolean boolean15 = wildcardClassItor7.hasPrevious();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int17 = wildcardClassItor7.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor18 = wildcardClassItor7.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate20 = wildcardClassItor19.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        int int23 = wildcardClassItor19.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass24 = wildcardClassItor19.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(wildcardItor18);
        org.junit.Assert.assertNull(wildcardPredicate20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor4 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor1.getPredicate();
        int int6 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int10 = wildcardClassItor8.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate11 = wildcardClassItor8.getPredicate();
        boolean boolean12 = wildcardClassItor8.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor8.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor13);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.GenericDeclaration> genericDeclarationItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.GenericDeclaration>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor16.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor19 = wildcardClassItor17.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor21.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        int int24 = wildcardClassItor22.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor25 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        wildcardClassItor20.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor27 = wildcardClassItor20.getListIterator();
        wildcardClassItor17.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        boolean boolean29 = wildcardClassItor20.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor30 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        boolean boolean31 = wildcardClassItor30.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor32 = wildcardClassItor30.getListIterator();
        int int33 = wildcardClassItor30.previousIndex();
        genericDeclarationItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor30);
        boolean boolean35 = genericDeclarationItor15.hasPrevious();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertNull(wildcardItor4);
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(wildcardItor13);
        org.junit.Assert.assertNull(wildcardItor19);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardItor32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        boolean boolean13 = wildcardClassItor4.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        int int15 = wildcardClassItor14.previousIndex();
        boolean boolean16 = wildcardClassItor14.hasNext();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor4.getListIterator();
        java.lang.Class<?> wildcardClass14 = wildcardClassItor4.getClass();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertNotNull(wildcardItor13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor4.getListIterator();
        int int6 = wildcardClassItor4.nextIndex();
        int int7 = wildcardClassItor4.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor4.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        int int4 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        int int7 = wildcardClassItor6.previousIndex();
        int int8 = wildcardClassItor6.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor9 = wildcardClassItor6.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor10 = wildcardClassItor6.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int12 = wildcardClassItor1.previousIndex();
        boolean boolean13 = wildcardClassItor1.hasNext();
        java.lang.Class<?> wildcardClass14 = wildcardClassItor1.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(wildcardItor9);
        org.junit.Assert.assertNotNull(wildcardItor10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass2 = wildcardClassItor1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        int int11 = wildcardClassItor9.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor14 = wildcardClassItor7.getListIterator();
        boolean boolean15 = wildcardClassItor7.hasPrevious();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        boolean boolean17 = wildcardClassItor5.hasNext();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor18 = wildcardClassItor5.getListIterator();
        boolean boolean19 = wildcardClassItor5.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass20 = wildcardClassItor5.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItor18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor7.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate9 = wildcardClassItor7.getPredicate();
        int int10 = wildcardClassItor7.previousIndex();
        int int11 = wildcardClassItor7.previousIndex();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int13 = wildcardClassItor7.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        int int18 = wildcardClassItor16.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor21 = wildcardClassItor14.getListIterator();
        int int22 = wildcardClassItor14.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor23.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        int int26 = wildcardClassItor24.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate28 = wildcardClassItor27.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor29 = wildcardClassItor27.getListIterator();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        int int32 = wildcardClassItor31.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor33 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor31);
        boolean boolean34 = wildcardClassItor31.hasNext();
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor31);
        boolean boolean36 = wildcardClassItor31.hasPrevious();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate28);
        org.junit.Assert.assertNotNull(wildcardItor29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        int int7 = wildcardClassItor5.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        int int13 = wildcardClassItor11.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        boolean boolean15 = wildcardClassItor14.hasNext();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        java.lang.Class<?> wildcardClass17 = wildcardClassItor14.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate9 = wildcardClassItor0.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int11 = wildcardClassItor10.previousIndex();
        int int12 = wildcardClassItor10.previousIndex();
        int int13 = wildcardClassItor10.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        boolean boolean15 = wildcardClassItor10.hasPrevious();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean5 = wildcardClassItor4.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        int int7 = wildcardClassItor4.previousIndex();
        boolean boolean8 = wildcardClassItor4.hasNext();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor9 = wildcardClassItor4.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor9);
        int int11 = wildcardClassItor10.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass13 = wildcardClassItor10.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardItor9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        boolean boolean18 = wildcardClassItor8.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor20.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        int int23 = wildcardClassItor21.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        wildcardClassItor19.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor26 = wildcardClassItor19.getListIterator();
        int int27 = wildcardClassItor19.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate28 = wildcardClassItor19.getPredicate();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        boolean boolean30 = wildcardClassItor19.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor31 = wildcardClassItor19.getListIterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItor31);
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate19 = wildcardClassItor8.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        int int21 = wildcardClassItor20.nextIndex();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        boolean boolean23 = wildcardClassItor8.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor24 = wildcardClassItor8.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass25 = wildcardClassItor8.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertNull(wildcardPredicate19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItor24);
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        boolean boolean9 = wildcardClassItor0.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        int int13 = wildcardClassItor11.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = wildcardClassItor11.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor11.getListIterator();
        boolean boolean16 = wildcardClassItor11.hasNext();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor17 = wildcardClassItor11.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate18 = wildcardClassItor11.getPredicate();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor20 = wildcardClassItor11.getListIterator();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate14);
        org.junit.Assert.assertNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(wildcardItor17);
        org.junit.Assert.assertNull(wildcardPredicate18);
        org.junit.Assert.assertNull(wildcardItor20);
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        int int4 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        int int7 = wildcardClassItor6.previousIndex();
        int int8 = wildcardClassItor6.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor9 = wildcardClassItor6.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor10 = wildcardClassItor6.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        int int17 = wildcardClassItor15.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor20 = wildcardClassItor13.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor20);
        int int22 = typeItor21.nextIndex();
        int int23 = typeItor21.previousIndex();
        boolean boolean24 = typeItor21.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor25 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor26 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor25.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor28 = wildcardClassItor26.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor29 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor30 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor30.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor31);
        int int33 = wildcardClassItor31.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor34 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor31);
        wildcardClassItor29.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor34);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor36 = wildcardClassItor29.getListIterator();
        wildcardClassItor26.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor29);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor38 = wildcardClassItor29.getListIterator();
        typeItor21.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor29);
        wildcardClassItor12.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor29);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor41 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor42 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor41.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor42);
        int int44 = wildcardClassItor42.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate45 = wildcardClassItor42.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor46 = wildcardClassItor42.getListIterator();
        boolean boolean47 = wildcardClassItor42.hasNext();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor48 = wildcardClassItor42.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor49 = wildcardClassItor42.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate50 = wildcardClassItor42.getPredicate();
        boolean boolean51 = wildcardClassItor42.hasPrevious();
        wildcardClassItor29.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor42);
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor29.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(wildcardItor9);
        org.junit.Assert.assertNotNull(wildcardItor10);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(wildcardItor28);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor36);
        org.junit.Assert.assertNotNull(wildcardItor38);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate45);
        org.junit.Assert.assertNull(wildcardItor46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(wildcardItor48);
        org.junit.Assert.assertNull(wildcardItor49);
        org.junit.Assert.assertNull(wildcardPredicate50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        int int6 = wildcardClassItor1.previousIndex();
        int int7 = wildcardClassItor1.previousIndex();
        boolean boolean8 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int15 = wildcardClassItor1.nextIndex();
        int int16 = wildcardClassItor1.previousIndex();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardItor13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        boolean boolean5 = wildcardClassItor1.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor6 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor7);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardItor6);
        org.junit.Assert.assertNull(wildcardItor7);
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = wildcardClassItor13.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int17 = wildcardClassItor13.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        int int21 = wildcardClassItor19.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate23 = wildcardClassItor22.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        int int25 = wildcardClassItor22.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor26 = wildcardClassItor22.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor28 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor27.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor28);
        int int30 = wildcardClassItor28.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor28);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor32 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor33 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor32.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor33);
        int int35 = wildcardClassItor33.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor36 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor33);
        boolean boolean37 = wildcardClassItor36.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor38 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor36);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor39 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor40 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor39.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor40);
        int int42 = wildcardClassItor40.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor43 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor40);
        boolean boolean44 = wildcardClassItor43.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor45 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor43);
        int int46 = wildcardClassItor43.previousIndex();
        wildcardClassItor36.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor43);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor48 = wildcardClassItor43.getListIterator();
        wildcardClassItor28.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor43);
        wildcardClassItor22.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor43);
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor43);
        boolean boolean52 = wildcardClassItor13.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass53 = wildcardClassItor13.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate14);
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(wildcardItor26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        int int1 = wildcardClassItor0.nextIndex();
        boolean boolean2 = wildcardClassItor0.hasPrevious();
        int int3 = wildcardClassItor0.nextIndex();
        boolean boolean4 = wildcardClassItor0.hasPrevious();
        boolean boolean5 = wildcardClassItor0.hasNext();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate1 = wildcardClassItor0.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor2 = wildcardClassItor0.getListIterator();
        int int3 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass5 = wildcardClassItor0.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardPredicate1);
        org.junit.Assert.assertNull(wildcardItor2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        int int4 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int10 = wildcardClassItor8.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate12 = wildcardClassItor11.getPredicate();
        wildcardClassItor6.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate15 = wildcardClassItor14.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        wildcardClassItor11.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        boolean boolean18 = wildcardClassItor11.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor19.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        int int22 = wildcardClassItor20.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor25 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor24.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        int int27 = wildcardClassItor25.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor28 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        boolean boolean29 = wildcardClassItor28.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor30 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor28);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor32 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor31.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor32);
        int int34 = wildcardClassItor32.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor35 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor32);
        boolean boolean36 = wildcardClassItor35.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor37 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor35);
        int int38 = wildcardClassItor35.previousIndex();
        wildcardClassItor28.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor35);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor40 = wildcardClassItor35.getListIterator();
        wildcardClassItor20.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor35);
        wildcardClassItor11.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor35);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor11.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate12);
        org.junit.Assert.assertNull(wildcardPredicate15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor40);
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        int int18 = wildcardClassItor16.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor21 = wildcardClassItor14.getListIterator();
        int int22 = wildcardClassItor14.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor23.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        int int26 = wildcardClassItor24.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate28 = wildcardClassItor27.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor29 = wildcardClassItor27.getListIterator();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        int int32 = wildcardClassItor31.nextIndex();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor31);
        boolean boolean34 = wildcardClassItor1.hasPrevious();
        int int35 = wildcardClassItor1.previousIndex();
        int int36 = wildcardClassItor1.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass37 = wildcardClassItor1.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertNotNull(wildcardItor13);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate28);
        org.junit.Assert.assertNotNull(wildcardItor29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate19 = wildcardClassItor8.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor21 = wildcardClassItor8.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor8.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertNull(wildcardPredicate19);
        org.junit.Assert.assertNotNull(wildcardItor21);
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        boolean boolean5 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor1.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor8 = wildcardClassItor1.getListIterator();
        boolean boolean9 = wildcardClassItor1.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor11.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        int int14 = wildcardClassItor12.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate17 = wildcardClassItor10.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        boolean boolean21 = wildcardClassItor19.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor22.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor23);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor25 = wildcardClassItor23.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor26 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor28 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor27.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor28);
        int int30 = wildcardClassItor28.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor28);
        wildcardClassItor26.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor31);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor33 = wildcardClassItor26.getListIterator();
        wildcardClassItor23.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        wildcardClassItor19.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor36 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        int int37 = wildcardClassItor26.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor38 = wildcardClassItor26.getListIterator();
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        int int40 = wildcardClassItor26.nextIndex();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        int int42 = wildcardClassItor1.nextIndex();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardPredicate6);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertNull(wildcardItor8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardItor25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int19 = wildcardClassItor8.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor20 = wildcardClassItor8.getListIterator();
        int int21 = wildcardClassItor8.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor23.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor26 = wildcardClassItor24.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor28 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor29 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor28.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor29);
        int int31 = wildcardClassItor29.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor32 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor29);
        wildcardClassItor27.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor32);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor34 = wildcardClassItor27.getListIterator();
        wildcardClassItor24.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor36 = wildcardClassItor27.getListIterator();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor36);
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor8.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(wildcardItor26);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor34);
        org.junit.Assert.assertNotNull(wildcardItor36);
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        boolean boolean4 = wildcardClassItor1.hasNext();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor1.getPredicate();
        int int6 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate7 = wildcardClassItor1.getPredicate();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate7);
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate19 = wildcardClassItor8.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int21 = wildcardClassItor8.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor22.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor23);
        int int25 = wildcardClassItor23.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor26 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor23);
        boolean boolean27 = wildcardClassItor26.hasNext();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        boolean boolean29 = wildcardClassItor26.hasPrevious();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertNull(wildcardPredicate19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate9 = wildcardClassItor0.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor12.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int15 = wildcardClassItor13.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor17 = wildcardClassItor13.getListIterator();
        int int18 = wildcardClassItor13.previousIndex();
        int int19 = wildcardClassItor13.previousIndex();
        boolean boolean20 = wildcardClassItor13.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor25 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        int int26 = wildcardClassItor25.nextIndex();
        boolean boolean27 = wildcardClassItor25.hasPrevious();
        int int28 = wildcardClassItor25.nextIndex();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        annotatedElementItor11.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        java.lang.Class<?> wildcardClass31 = annotatedElementItor11.getClass();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate9);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(wildcardItor17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        int int6 = wildcardClassItor1.previousIndex();
        int int7 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate8 = wildcardClassItor1.getPredicate();
        java.lang.Class<?> wildcardClass9 = wildcardClassItor1.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Object> objItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Object>();
        int int1 = objItor0.nextIndex();
        boolean boolean2 = objItor0.hasPrevious();
        boolean boolean3 = objItor0.hasPrevious();
        boolean boolean4 = objItor0.hasPrevious();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        boolean boolean17 = wildcardClassItor15.hasPrevious();
        int int18 = wildcardClassItor15.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        int int21 = wildcardClassItor20.previousIndex();
        int int22 = wildcardClassItor20.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor23 = wildcardClassItor20.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor24 = wildcardClassItor20.getListIterator();
        wildcardClassItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor24);
        int int26 = wildcardClassItor15.previousIndex();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor28 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor29 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor28.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor29);
        int int31 = wildcardClassItor29.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor32 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor29);
        boolean boolean33 = wildcardClassItor32.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor34 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor32);
        int int35 = wildcardClassItor32.previousIndex();
        boolean boolean36 = wildcardClassItor32.hasNext();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor37 = wildcardClassItor32.getListIterator();
        boolean boolean38 = wildcardClassItor32.hasPrevious();
        wildcardClassItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor32);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor40 = wildcardClassItor15.getListIterator();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(wildcardItor23);
        org.junit.Assert.assertNotNull(wildcardItor24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardItor37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardItor40);
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate19 = wildcardClassItor8.getPredicate();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor8.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertNull(wildcardPredicate19);
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor3 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor3.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor3);
        boolean boolean6 = wildcardClassItor5.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass7 = wildcardClassItor5.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.previousIndex();
        boolean boolean4 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor8 = wildcardClassItor5.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass11 = wildcardClassItor10.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardItor8);
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        int int11 = wildcardClassItor9.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor14 = wildcardClassItor7.getListIterator();
        boolean boolean15 = wildcardClassItor7.hasPrevious();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int17 = wildcardClassItor7.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor18 = wildcardClassItor7.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate19 = wildcardClassItor7.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor20 = wildcardClassItor7.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass21 = wildcardClassItor7.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(wildcardItor18);
        org.junit.Assert.assertNull(wildcardPredicate19);
        org.junit.Assert.assertNotNull(wildcardItor20);
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor7);
        int int9 = typeItor8.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor11.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        int int14 = wildcardClassItor12.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor17 = wildcardClassItor10.getListIterator();
        int int18 = wildcardClassItor10.previousIndex();
        boolean boolean19 = wildcardClassItor10.hasNext();
        int int20 = wildcardClassItor10.nextIndex();
        typeItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int22 = wildcardClassItor10.nextIndex();
        int int23 = wildcardClassItor10.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor25 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        int int27 = wildcardClassItor10.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor28 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor29 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor28.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor29);
        boolean boolean31 = wildcardClassItor29.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor32 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor33 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor32.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor33);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor35 = wildcardClassItor33.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor36 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor37 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor38 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor37.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor38);
        int int40 = wildcardClassItor38.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor41 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor38);
        wildcardClassItor36.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor41);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor43 = wildcardClassItor36.getListIterator();
        wildcardClassItor33.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor36);
        wildcardClassItor29.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor36);
        int int46 = wildcardClassItor36.previousIndex();
        int int47 = wildcardClassItor36.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor48 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor36);
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor36);
        int int50 = wildcardClassItor36.previousIndex();
        int int51 = wildcardClassItor36.nextIndex();
        int int52 = wildcardClassItor36.nextIndex();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(wildcardItor35);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean5 = wildcardClassItor4.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int10 = wildcardClassItor8.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        boolean boolean12 = wildcardClassItor11.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        int int14 = wildcardClassItor11.previousIndex();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor16 = wildcardClassItor11.getListIterator();
        java.lang.Class<?> wildcardClass17 = wildcardItor16.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor10 = wildcardClassItor6.getListIterator();
        java.lang.Class<?> wildcardClass11 = wildcardClassItor6.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardItor10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor4 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate7 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor9.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        int int16 = wildcardClassItor14.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        wildcardClassItor12.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor19 = wildcardClassItor12.getListIterator();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertNull(wildcardItor4);
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNull(wildcardPredicate7);
        org.junit.Assert.assertNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor19);
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor4 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        boolean boolean8 = wildcardClassItor6.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor12 = wildcardClassItor10.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        int int17 = wildcardClassItor15.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor20 = wildcardClassItor13.getListIterator();
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        wildcardClassItor6.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int24 = wildcardClassItor13.previousIndex();
        int int25 = wildcardClassItor13.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor26 = wildcardClassItor13.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor28 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        int int29 = wildcardClassItor28.nextIndex();
        boolean boolean30 = wildcardClassItor28.hasPrevious();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor28);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor32 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor28);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate33 = wildcardClassItor32.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor34 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor32);
        boolean boolean35 = wildcardClassItor32.hasPrevious();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertNull(wildcardItor4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardItor12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(wildcardItor26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(wildcardPredicate33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        int int7 = wildcardClassItor4.nextIndex();
        int int8 = wildcardClassItor4.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        int int11 = wildcardClassItor10.previousIndex();
        int int12 = wildcardClassItor10.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate13 = wildcardClassItor10.getPredicate();
        int int14 = wildcardClassItor10.previousIndex();
        boolean boolean15 = wildcardClassItor10.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor16.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor19 = wildcardClassItor17.getListIterator();
        boolean boolean20 = wildcardClassItor17.hasNext();
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor23 = wildcardClassItor17.getListIterator();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(wildcardPredicate13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardItor19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardItor23);
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean5 = wildcardClassItor4.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        int int7 = wildcardClassItor4.previousIndex();
        boolean boolean8 = wildcardClassItor4.hasNext();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor9 = wildcardClassItor4.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor9);
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor10.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardItor9);
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        boolean boolean13 = wildcardClassItor4.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor4.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor7);
        int int9 = typeItor8.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor11.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        int int14 = wildcardClassItor12.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor17 = wildcardClassItor10.getListIterator();
        int int18 = wildcardClassItor10.previousIndex();
        boolean boolean19 = wildcardClassItor10.hasNext();
        int int20 = wildcardClassItor10.nextIndex();
        typeItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int22 = wildcardClassItor10.nextIndex();
        boolean boolean23 = wildcardClassItor10.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor10.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int18 = wildcardClassItor8.previousIndex();
        int int19 = wildcardClassItor8.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor21 = wildcardClassItor20.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor22.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor23);
        boolean boolean25 = wildcardClassItor23.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor26 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor26.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor29 = wildcardClassItor27.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor30 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor32 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor31.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor32);
        int int34 = wildcardClassItor32.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor35 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor32);
        wildcardClassItor30.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor35);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor37 = wildcardClassItor30.getListIterator();
        wildcardClassItor27.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor30);
        wildcardClassItor23.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor30);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor40 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor30);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate41 = wildcardClassItor30.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor42 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        int int43 = wildcardClassItor42.nextIndex();
        wildcardClassItor30.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor42);
        boolean boolean45 = wildcardClassItor30.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor46 = wildcardClassItor30.getListIterator();
        wildcardClassItor20.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor30);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(wildcardItor21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(wildcardItor29);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor37);
        org.junit.Assert.assertNull(wildcardPredicate41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardItor46);
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        int int7 = wildcardClassItor4.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor8 = wildcardClassItor4.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Object> objItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Object>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        java.lang.Class<?> wildcardClass10 = objItor9.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(wildcardItor8);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        boolean boolean9 = wildcardClassItor0.hasNext();
        int int10 = wildcardClassItor0.nextIndex();
        boolean boolean11 = wildcardClassItor0.hasPrevious();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate12 = wildcardClassItor0.getPredicate();
        int int13 = wildcardClassItor0.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = wildcardClassItor0.getPredicate();
        int int15 = wildcardClassItor0.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass16 = wildcardClassItor0.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardPredicate12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(wildcardPredicate14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean6 = wildcardClassItor5.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        java.lang.Class<?> wildcardClass8 = wildcardClassItor5.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        int int4 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean7 = wildcardClassItor6.hasPrevious();
        java.lang.Class<?> wildcardClass8 = wildcardClassItor6.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        boolean boolean4 = wildcardClassItor1.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass6 = wildcardItor5.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(wildcardItor5);
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        boolean boolean6 = wildcardClassItor1.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass7 = wildcardClassItor1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        int int9 = wildcardClassItor0.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate10 = wildcardClassItor0.getPredicate();
        int int11 = wildcardClassItor0.previousIndex();
        int int12 = wildcardClassItor0.previousIndex();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(wildcardPredicate10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate7 = wildcardClassItor0.getPredicate();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate7);
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        java.util.ListIterator<java.lang.Class<?>> wildcardClassItor7 = null;
        wildcardClassItor4.setListIterator(wildcardClassItor7);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.GenericDeclaration> genericDeclarationItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.GenericDeclaration>();
        boolean boolean1 = genericDeclarationItor0.hasPrevious();
        int int2 = genericDeclarationItor0.previousIndex();
        int int3 = genericDeclarationItor0.nextIndex();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        int int18 = wildcardClassItor16.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor21 = wildcardClassItor14.getListIterator();
        int int22 = wildcardClassItor14.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor23.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        int int26 = wildcardClassItor24.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate28 = wildcardClassItor27.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor29 = wildcardClassItor27.getListIterator();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        int int32 = wildcardClassItor31.nextIndex();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor31);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor34 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor35 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor34.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor35);
        int int37 = wildcardClassItor35.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate38 = wildcardClassItor35.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor39 = wildcardClassItor35.getListIterator();
        boolean boolean40 = wildcardClassItor35.hasNext();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor41 = wildcardClassItor35.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor42 = wildcardClassItor35.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate43 = wildcardClassItor35.getPredicate();
        boolean boolean44 = wildcardClassItor35.hasPrevious();
        boolean boolean45 = wildcardClassItor35.hasPrevious();
        wildcardClassItor31.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor35);
        boolean boolean47 = wildcardClassItor35.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor35.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertNotNull(wildcardItor13);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate28);
        org.junit.Assert.assertNotNull(wildcardItor29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate38);
        org.junit.Assert.assertNull(wildcardItor39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(wildcardItor41);
        org.junit.Assert.assertNull(wildcardItor42);
        org.junit.Assert.assertNull(wildcardPredicate43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        int int4 = wildcardClassItor1.nextIndex();
        boolean boolean5 = wildcardClassItor1.hasNext();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor3 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor3.getPredicate();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor3.getPredicate();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertNull(wildcardPredicate5);
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate7 = wildcardClassItor0.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor8 = wildcardClassItor0.getListIterator();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate7);
        org.junit.Assert.assertNotNull(wildcardItor8);
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass3 = wildcardClassItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        boolean boolean4 = wildcardClassItor1.hasNext();
        boolean boolean5 = wildcardClassItor1.hasNext();
        int int6 = wildcardClassItor1.previousIndex();
        boolean boolean7 = wildcardClassItor1.hasNext();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor7);
        int int9 = typeItor8.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor11.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        int int14 = wildcardClassItor12.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor17 = wildcardClassItor10.getListIterator();
        int int18 = wildcardClassItor10.previousIndex();
        boolean boolean19 = wildcardClassItor10.hasNext();
        int int20 = wildcardClassItor10.nextIndex();
        typeItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int22 = typeItor8.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate23 = typeItor8.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor25 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor26 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor25.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        int int28 = wildcardClassItor26.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor29 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        wildcardClassItor24.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor29);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor31 = wildcardClassItor24.getListIterator();
        int int32 = wildcardClassItor24.previousIndex();
        boolean boolean33 = wildcardClassItor24.hasNext();
        int int34 = wildcardClassItor24.nextIndex();
        boolean boolean35 = wildcardClassItor24.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor36 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        boolean boolean37 = wildcardClassItor24.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor38 = wildcardClassItor24.getListIterator();
        typeItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardItor38);
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        boolean boolean16 = wildcardClassItor14.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor17.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor20 = wildcardClassItor18.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor22.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor23);
        int int25 = wildcardClassItor23.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor26 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor23);
        wildcardClassItor21.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor28 = wildcardClassItor21.getListIterator();
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        int int32 = wildcardClassItor21.previousIndex();
        int int33 = wildcardClassItor21.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor34 = wildcardClassItor21.getListIterator();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor34);
        boolean boolean36 = wildcardClassItor4.hasNext();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor37 = wildcardClassItor4.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor4.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(wildcardItor20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(wildcardItor34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardItor37);
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate19 = wildcardClassItor8.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor21 = wildcardClassItor8.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass23 = wildcardClassItor22.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertNull(wildcardPredicate19);
        org.junit.Assert.assertNotNull(wildcardItor21);
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate9 = wildcardClassItor0.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor12.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor16 = wildcardClassItor13.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate17 = wildcardClassItor13.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate19 = wildcardClassItor13.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor20.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor23 = wildcardClassItor21.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor25 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor26 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor25.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        int int28 = wildcardClassItor26.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor29 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        wildcardClassItor24.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor29);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor31 = wildcardClassItor24.getListIterator();
        wildcardClassItor21.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass35 = wildcardClassItor13.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate9);
        org.junit.Assert.assertNull(wildcardItor15);
        org.junit.Assert.assertNull(wildcardItor16);
        org.junit.Assert.assertNull(wildcardPredicate17);
        org.junit.Assert.assertNull(wildcardPredicate19);
        org.junit.Assert.assertNull(wildcardItor23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor31);
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        boolean boolean9 = wildcardClassItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass10 = wildcardClassItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor0.getListIterator();
        boolean boolean4 = wildcardClassItor0.hasPrevious();
        int int5 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor6.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int9 = wildcardClassItor7.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate11 = wildcardClassItor10.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int13 = wildcardClassItor10.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor14 = wildcardClassItor10.getListIterator();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass16 = wildcardClassItor10.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNotNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardItor14);
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        boolean boolean1 = wildcardClassItor0.hasNext();
        int int2 = wildcardClassItor0.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass3 = wildcardClassItor0.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean5 = wildcardClassItor4.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int10 = wildcardClassItor8.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        boolean boolean12 = wildcardClassItor11.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        int int14 = wildcardClassItor11.previousIndex();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        boolean boolean16 = wildcardClassItor4.hasPrevious();
        int int17 = wildcardClassItor4.nextIndex();
        boolean boolean18 = wildcardClassItor4.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor19 = wildcardClassItor4.getListIterator();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardItor19);
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor6 = wildcardClassItor4.getListIterator();
        int int7 = wildcardClassItor4.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        boolean boolean10 = wildcardClassItor9.hasNext();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        int int12 = wildcardClassItor8.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor8.getListIterator();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNotNull(wildcardItor6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardItor13);
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor4 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor1.getPredicate();
        int int6 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int10 = wildcardClassItor8.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate11 = wildcardClassItor8.getPredicate();
        boolean boolean12 = wildcardClassItor8.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor8.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor13);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.GenericDeclaration> genericDeclarationItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.GenericDeclaration>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean16 = wildcardClassItor1.hasNext();
        int int17 = wildcardClassItor1.previousIndex();
        int int18 = wildcardClassItor1.nextIndex();
        java.lang.Class<?> wildcardClass19 = wildcardClassItor1.getClass();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertNull(wildcardItor4);
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(wildcardItor13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate19 = wildcardClassItor8.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor21 = wildcardClassItor8.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor23);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate25 = wildcardClassItor24.getPredicate();
        int int26 = wildcardClassItor24.nextIndex();
        boolean boolean27 = wildcardClassItor24.hasNext();
        int int28 = wildcardClassItor24.nextIndex();
        wildcardClassItor22.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass30 = wildcardClassItor22.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertNull(wildcardPredicate19);
        org.junit.Assert.assertNotNull(wildcardItor21);
        org.junit.Assert.assertNull(wildcardPredicate25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate19 = wildcardClassItor8.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int21 = wildcardClassItor8.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor22.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor23);
        int int25 = wildcardClassItor23.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor26 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor23);
        boolean boolean27 = wildcardClassItor26.hasNext();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass29 = wildcardClassItor26.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertNull(wildcardPredicate19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = wildcardClassItor13.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        boolean boolean17 = wildcardClassItor0.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass18 = wildcardClassItor0.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate14);
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor7);
        int int9 = typeItor8.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor11.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        int int14 = wildcardClassItor12.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor17 = wildcardClassItor10.getListIterator();
        int int18 = wildcardClassItor10.previousIndex();
        boolean boolean19 = wildcardClassItor10.hasNext();
        int int20 = wildcardClassItor10.nextIndex();
        typeItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int22 = wildcardClassItor10.nextIndex();
        boolean boolean23 = wildcardClassItor10.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor24 = wildcardClassItor10.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate25 = wildcardClassItor10.getPredicate();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate26 = wildcardClassItor10.getPredicate();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItor24);
        org.junit.Assert.assertNull(wildcardPredicate25);
        org.junit.Assert.assertNull(wildcardPredicate26);
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        int int11 = wildcardClassItor9.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor14 = wildcardClassItor7.getListIterator();
        boolean boolean15 = wildcardClassItor7.hasPrevious();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int17 = wildcardClassItor7.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor18 = wildcardClassItor7.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate20 = wildcardClassItor19.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor23 = wildcardClassItor7.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass24 = wildcardClassItor7.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(wildcardItor18);
        org.junit.Assert.assertNull(wildcardPredicate20);
        org.junit.Assert.assertNotNull(wildcardItor23);
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate3 = wildcardClassItor1.getPredicate();
        int int4 = wildcardClassItor1.previousIndex();
        int int5 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor6.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int9 = wildcardClassItor7.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate10 = wildcardClassItor7.getPredicate();
        boolean boolean11 = wildcardClassItor7.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor12 = wildcardClassItor7.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardItor12);
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Object> objItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Object>();
        int int1 = objItor0.nextIndex();
        boolean boolean2 = objItor0.hasPrevious();
        int int3 = objItor0.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            objItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = wildcardClassItor13.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int18 = wildcardClassItor17.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        int int21 = wildcardClassItor20.nextIndex();
        boolean boolean22 = wildcardClassItor20.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor25 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor24.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        int int27 = wildcardClassItor25.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor28 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        wildcardClassItor23.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor28);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor30 = wildcardClassItor23.getListIterator();
        int int31 = wildcardClassItor23.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor32 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor33 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor32.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor33);
        int int35 = wildcardClassItor33.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor36 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor33);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate37 = wildcardClassItor36.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor38 = wildcardClassItor36.getListIterator();
        wildcardClassItor23.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor36);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor40 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor36);
        int int41 = wildcardClassItor40.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor42 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor40);
        wildcardClassItor20.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor40);
        typeItor19.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate14);
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate37);
        org.junit.Assert.assertNotNull(wildcardItor38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate7 = wildcardClassItor0.getPredicate();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate8 = wildcardClassItor0.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        int int13 = wildcardClassItor11.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor16 = wildcardClassItor9.getListIterator();
        int int17 = wildcardClassItor9.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        int int21 = wildcardClassItor19.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate23 = wildcardClassItor22.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor24 = wildcardClassItor22.getListIterator();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor26 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        int int27 = wildcardClassItor26.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor28 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        boolean boolean29 = wildcardClassItor26.hasNext();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor26.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate7);
        org.junit.Assert.assertNull(wildcardPredicate8);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate23);
        org.junit.Assert.assertNotNull(wildcardItor24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        int int4 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        int int7 = wildcardClassItor6.previousIndex();
        int int8 = wildcardClassItor6.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor9 = wildcardClassItor6.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor10 = wildcardClassItor6.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor12 = wildcardClassItor1.getListIterator();
        int int13 = wildcardClassItor1.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor14 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate15 = wildcardClassItor1.getPredicate();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(wildcardItor9);
        org.junit.Assert.assertNotNull(wildcardItor10);
        org.junit.Assert.assertNotNull(wildcardItor12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor14);
        org.junit.Assert.assertNull(wildcardPredicate15);
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        boolean boolean9 = wildcardClassItor0.hasNext();
        int int10 = wildcardClassItor0.nextIndex();
        boolean boolean11 = wildcardClassItor0.hasPrevious();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate12 = wildcardClassItor0.getPredicate();
        int int13 = wildcardClassItor0.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int15 = wildcardClassItor14.nextIndex();
        boolean boolean16 = wildcardClassItor14.hasPrevious();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardPredicate12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        int int5 = wildcardClassItor1.nextIndex();
        boolean boolean6 = wildcardClassItor1.hasNext();
        int int7 = wildcardClassItor1.nextIndex();
        boolean boolean8 = wildcardClassItor1.hasPrevious();
        boolean boolean9 = wildcardClassItor1.hasNext();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor7);
        int int9 = typeItor8.nextIndex();
        int int10 = typeItor8.previousIndex();
        boolean boolean11 = typeItor8.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor12.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor17.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        int int20 = wildcardClassItor18.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        wildcardClassItor16.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor23 = wildcardClassItor16.getListIterator();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor25 = wildcardClassItor16.getListIterator();
        typeItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        boolean boolean27 = wildcardClassItor16.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass28 = wildcardClassItor16.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor23);
        org.junit.Assert.assertNotNull(wildcardItor25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>();
        boolean boolean1 = typeItor0.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor3 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor3.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        int int6 = wildcardClassItor4.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate8 = wildcardClassItor7.getPredicate();
        wildcardClassItor2.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor11.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        int int14 = wildcardClassItor12.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        boolean boolean16 = wildcardClassItor15.hasNext();
        wildcardClassItor2.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        typeItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor19 = wildcardClassItor15.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass20 = wildcardClassItor15.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate8);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardItor19);
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        int int1 = wildcardClassItor0.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor2 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.GenericDeclaration> genericDeclarationItor3 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.GenericDeclaration>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor2);
        int int4 = genericDeclarationItor3.previousIndex();
        java.lang.Class<?> wildcardClass5 = genericDeclarationItor3.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(wildcardItor2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        boolean boolean4 = wildcardClassItor1.hasNext();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor1.getPredicate();
        int int6 = wildcardClassItor1.previousIndex();
        boolean boolean7 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int10 = wildcardClassItor9.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor9.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor12.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        boolean boolean15 = wildcardClassItor13.hasPrevious();
        int int16 = wildcardClassItor13.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor17 = wildcardClassItor13.getListIterator();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate19 = wildcardClassItor13.getPredicate();
        int int20 = wildcardClassItor13.nextIndex();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.lang.Class<?> wildcardClass22 = wildcardClassItor13.getClass();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(wildcardItor17);
        org.junit.Assert.assertNull(wildcardPredicate19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate19 = wildcardClassItor18.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        int int21 = wildcardClassItor18.previousIndex();
        int int22 = wildcardClassItor18.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.GenericDeclaration> genericDeclarationItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.GenericDeclaration>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        org.apache.commons.collections4.iterators.FilterListIterator<java.io.Serializable> serializableItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.io.Serializable>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        // The following exception was thrown during execution in test generation
        try {
            serializableItor24.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertNull(wildcardPredicate19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor6 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int9 = wildcardClassItor8.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor10 = wildcardClassItor8.getListIterator();
        int int11 = wildcardClassItor8.nextIndex();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        java.lang.Class<?> wildcardClass14 = wildcardClassItor13.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertNotNull(wildcardItor6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = annotatedElementItor4.getPredicate();
        boolean boolean6 = annotatedElementItor4.hasPrevious();
        boolean boolean7 = annotatedElementItor4.hasPrevious();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int5 = annotatedElementItor4.nextIndex();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = wildcardClassItor13.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int18 = wildcardClassItor17.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        int int22 = wildcardClassItor19.nextIndex();
        int int23 = wildcardClassItor19.nextIndex();
        wildcardClassItor17.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        boolean boolean25 = wildcardClassItor17.hasPrevious();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate14);
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor7);
        int int9 = typeItor8.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        boolean boolean13 = wildcardClassItor11.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor17 = wildcardClassItor15.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor19.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        int int22 = wildcardClassItor20.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor23);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor25 = wildcardClassItor18.getListIterator();
        wildcardClassItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        wildcardClassItor11.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor28 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        int int29 = wildcardClassItor18.previousIndex();
        int int30 = wildcardClassItor18.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor31 = wildcardClassItor18.getListIterator();
        typeItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor31);
        java.lang.Class<?> wildcardClass33 = wildcardItor31.getClass();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardItor17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(wildcardItor31);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>();
        int int1 = typeItor0.previousIndex();
        boolean boolean2 = typeItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            typeItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor4.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor6.getListIterator();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor5);
        org.junit.Assert.assertNotNull(wildcardItor7);
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor7);
        int int9 = typeItor8.nextIndex();
        int int10 = typeItor8.previousIndex();
        boolean boolean11 = typeItor8.hasNext();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate12 = typeItor8.getPredicate();
        int int13 = typeItor8.previousIndex();
        int int14 = typeItor8.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        boolean boolean18 = wildcardClassItor16.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor19.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor22 = wildcardClassItor20.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor25 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor24.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        int int27 = wildcardClassItor25.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor28 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        wildcardClassItor23.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor28);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor30 = wildcardClassItor23.getListIterator();
        wildcardClassItor20.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor23);
        wildcardClassItor16.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor23);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor33 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor23);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate34 = wildcardClassItor23.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor35 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor23);
        typeItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor23);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardPredicate12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(wildcardItor22);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor30);
        org.junit.Assert.assertNull(wildcardPredicate34);
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor13);
        java.lang.Class<?> wildcardClass15 = wildcardItor13.getClass();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertNotNull(wildcardItor13);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int9 = wildcardClassItor8.previousIndex();
        int int10 = wildcardClassItor8.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor8.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor12 = wildcardClassItor8.getListIterator();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor14 = wildcardClassItor8.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNull(wildcardPredicate6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertNotNull(wildcardItor12);
        org.junit.Assert.assertNotNull(wildcardItor14);
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        java.util.ListIterator<java.lang.Class<?>> wildcardClassItor0 = null;
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>(wildcardClassItor0);
        boolean boolean2 = wildcardClassItor1.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor3 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor3);
        int int5 = wildcardClassItor4.previousIndex();
        int int6 = wildcardClassItor4.previousIndex();
        boolean boolean7 = wildcardClassItor4.hasNext();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate8 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = wildcardClassItor13.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        int int16 = wildcardClassItor13.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.lang.Class<?> wildcardClass21 = wildcardClassItor1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(wildcardPredicate8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate14);
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        int int6 = wildcardClassItor1.previousIndex();
        int int7 = wildcardClassItor1.previousIndex();
        boolean boolean8 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate15 = wildcardClassItor1.getPredicate();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardItor13);
        org.junit.Assert.assertNull(wildcardPredicate15);
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        int int1 = wildcardClassItor0.nextIndex();
        boolean boolean2 = wildcardClassItor0.hasPrevious();
        boolean boolean3 = wildcardClassItor0.hasNext();
        int int4 = wildcardClassItor0.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass5 = wildcardClassItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor5.getPredicate();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        int int11 = wildcardClassItor9.previousIndex();
        int int12 = wildcardClassItor9.nextIndex();
        int int13 = wildcardClassItor9.previousIndex();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        int int15 = wildcardClassItor9.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass16 = wildcardClassItor9.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate6);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        int int7 = wildcardClassItor4.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor8 = wildcardClassItor4.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        int int17 = wildcardClassItor15.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        boolean boolean19 = wildcardClassItor18.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor21.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        int int24 = wildcardClassItor22.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor25 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        boolean boolean26 = wildcardClassItor25.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        int int28 = wildcardClassItor25.previousIndex();
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor30 = wildcardClassItor25.getListIterator();
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        int int33 = wildcardClassItor25.nextIndex();
        boolean boolean34 = wildcardClassItor25.hasNext();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(wildcardItor8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        int int4 = wildcardClassItor1.nextIndex();
        int int5 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean7 = wildcardClassItor6.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor6.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int18 = wildcardClassItor8.previousIndex();
        int int19 = wildcardClassItor8.nextIndex();
        boolean boolean20 = wildcardClassItor8.hasNext();
        boolean boolean21 = wildcardClassItor8.hasNext();
        java.lang.Class<?> wildcardClass22 = wildcardClassItor8.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        int int11 = wildcardClassItor9.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor14 = wildcardClassItor7.getListIterator();
        boolean boolean15 = wildcardClassItor7.hasPrevious();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int17 = wildcardClassItor7.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor18 = wildcardClassItor7.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate20 = wildcardClassItor19.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor23 = wildcardClassItor19.getListIterator();
        int int24 = wildcardClassItor19.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass25 = wildcardClassItor19.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(wildcardItor18);
        org.junit.Assert.assertNull(wildcardPredicate20);
        org.junit.Assert.assertNull(wildcardItor23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor7);
        java.lang.Class<?> wildcardClass9 = wildcardItor7.getClass();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        boolean boolean6 = wildcardClassItor1.hasNext();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor8 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate9 = wildcardClassItor1.getPredicate();
        boolean boolean10 = wildcardClassItor1.hasPrevious();
        boolean boolean11 = wildcardClassItor1.hasPrevious();
        int int12 = wildcardClassItor1.nextIndex();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertNull(wildcardItor8);
        org.junit.Assert.assertNull(wildcardPredicate9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor6 = wildcardClassItor4.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor4.getListIterator();
        boolean boolean8 = wildcardClassItor4.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        boolean boolean12 = wildcardClassItor10.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor16 = wildcardClassItor14.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        int int21 = wildcardClassItor19.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        wildcardClassItor17.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor24 = wildcardClassItor17.getListIterator();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate28 = wildcardClassItor27.getPredicate();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        boolean boolean30 = wildcardClassItor4.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass31 = wildcardClassItor4.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNotNull(wildcardItor6);
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(wildcardItor16);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor24);
        org.junit.Assert.assertNull(wildcardPredicate28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate19 = wildcardClassItor18.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        boolean boolean21 = wildcardClassItor18.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor22 = wildcardClassItor18.getListIterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertNull(wildcardPredicate19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItor22);
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = wildcardClassItor13.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int18 = wildcardClassItor17.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        int int20 = wildcardClassItor17.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass21 = wildcardClassItor17.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate14);
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate3 = wildcardClassItor1.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor4 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor6.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int9 = wildcardClassItor7.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        int int16 = wildcardClassItor14.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        wildcardClassItor12.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor19 = wildcardClassItor12.getListIterator();
        boolean boolean20 = wildcardClassItor12.hasPrevious();
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int23 = wildcardClassItor10.nextIndex();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate3);
        org.junit.Assert.assertNotNull(wildcardItor4);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        boolean boolean5 = wildcardClassItor1.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor6 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor1.getListIterator();
        boolean boolean8 = wildcardClassItor1.hasNext();
        java.lang.Class<?> wildcardClass9 = wildcardClassItor1.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardItor6);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor6 = wildcardClassItor4.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        boolean boolean8 = wildcardClassItor7.hasPrevious();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNotNull(wildcardItor6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        int int7 = wildcardClassItor4.nextIndex();
        int int8 = wildcardClassItor4.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        int int11 = wildcardClassItor10.previousIndex();
        int int12 = wildcardClassItor10.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate13 = wildcardClassItor10.getPredicate();
        int int14 = wildcardClassItor10.previousIndex();
        boolean boolean15 = wildcardClassItor10.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor16.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor19 = wildcardClassItor17.getListIterator();
        boolean boolean20 = wildcardClassItor17.hasNext();
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        boolean boolean23 = wildcardClassItor17.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass24 = wildcardClassItor17.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(wildcardPredicate13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardItor19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor2 = wildcardClassItor1.getListIterator();
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.GenericDeclaration> genericDeclarationItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.GenericDeclaration>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean5 = wildcardClassItor1.hasNext();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor1.getPredicate();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass7 = wildcardClassItor1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNotNull(wildcardItor2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardPredicate6);
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate1 = wildcardClassItor0.getPredicate();
        boolean boolean2 = wildcardClassItor0.hasNext();
        java.util.ListIterator<java.lang.Class<?>> wildcardClassItor3 = null;
        wildcardClassItor0.setListIterator(wildcardClassItor3);
        int int5 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor6.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        boolean boolean9 = wildcardClassItor7.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor11.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        int int18 = wildcardClassItor16.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor21 = wildcardClassItor14.getListIterator();
        wildcardClassItor11.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate25 = wildcardClassItor14.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor26 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor27 = wildcardClassItor14.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor28 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor29 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor30 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor29);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate31 = wildcardClassItor30.getPredicate();
        int int32 = wildcardClassItor30.nextIndex();
        boolean boolean33 = wildcardClassItor30.hasNext();
        int int34 = wildcardClassItor30.nextIndex();
        wildcardClassItor28.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor30);
        boolean boolean36 = wildcardClassItor28.hasNext();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor28);
        org.junit.Assert.assertNull(wildcardPredicate1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(wildcardItor13);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor21);
        org.junit.Assert.assertNull(wildcardPredicate25);
        org.junit.Assert.assertNotNull(wildcardItor27);
        org.junit.Assert.assertNull(wildcardPredicate31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        boolean boolean2 = wildcardClassItor0.hasNext();
        boolean boolean3 = wildcardClassItor0.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor4.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        boolean boolean10 = wildcardClassItor8.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor11.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor14 = wildcardClassItor12.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor16.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        int int19 = wildcardClassItor17.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        wildcardClassItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor22 = wildcardClassItor15.getListIterator();
        wildcardClassItor12.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor25 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        int int26 = wildcardClassItor25.nextIndex();
        boolean boolean27 = wildcardClassItor25.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor28 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor29 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor28.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor29);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor31 = wildcardClassItor29.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor32 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor33 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor34 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor33.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor34);
        int int36 = wildcardClassItor34.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor37 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor34);
        wildcardClassItor32.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor37);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor39 = wildcardClassItor32.getListIterator();
        wildcardClassItor29.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor32);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor41 = wildcardClassItor32.getListIterator();
        wildcardClassItor25.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor32);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor43 = wildcardClassItor32.getListIterator();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor43);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItor5);
        org.junit.Assert.assertNull(wildcardPredicate6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(wildcardItor14);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(wildcardItor31);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor39);
        org.junit.Assert.assertNotNull(wildcardItor41);
        org.junit.Assert.assertNotNull(wildcardItor43);
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        boolean boolean14 = wildcardClassItor13.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor16.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        int int19 = wildcardClassItor17.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate20 = wildcardClassItor17.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor21.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        int int24 = wildcardClassItor22.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor25 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        boolean boolean26 = wildcardClassItor25.hasNext();
        int int27 = wildcardClassItor25.previousIndex();
        boolean boolean28 = wildcardClassItor25.hasNext();
        int int29 = wildcardClassItor25.nextIndex();
        wildcardClassItor17.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        int int31 = wildcardClassItor25.nextIndex();
        boolean boolean32 = wildcardClassItor25.hasNext();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass34 = wildcardClassItor25.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        int int11 = wildcardClassItor9.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor14 = wildcardClassItor7.getListIterator();
        boolean boolean15 = wildcardClassItor7.hasPrevious();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int17 = wildcardClassItor7.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor18 = wildcardClassItor7.getListIterator();
        int int19 = wildcardClassItor7.nextIndex();
        boolean boolean20 = wildcardClassItor7.hasNext();
        boolean boolean21 = wildcardClassItor7.hasPrevious();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate22 = wildcardClassItor7.getPredicate();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(wildcardItor18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardPredicate22);
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate9 = wildcardClassItor0.getPredicate();
        int int10 = wildcardClassItor0.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor12.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        boolean boolean15 = wildcardClassItor13.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor16.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor19 = wildcardClassItor17.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor21.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        int int24 = wildcardClassItor22.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor25 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        wildcardClassItor20.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor27 = wildcardClassItor20.getListIterator();
        wildcardClassItor17.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor30 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate31 = wildcardClassItor20.getPredicate();
        boolean boolean32 = wildcardClassItor20.hasNext();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate33 = wildcardClassItor20.getPredicate();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardItor19);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor27);
        org.junit.Assert.assertNull(wildcardPredicate31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(wildcardPredicate33);
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate19 = wildcardClassItor8.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor21 = wildcardClassItor20.getListIterator();
        int int22 = wildcardClassItor20.previousIndex();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertNull(wildcardPredicate19);
        org.junit.Assert.assertNotNull(wildcardItor21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        int int4 = wildcardClassItor1.nextIndex();
        int int5 = wildcardClassItor1.previousIndex();
        boolean boolean6 = wildcardClassItor1.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor1.getListIterator();
        boolean boolean8 = wildcardClassItor1.hasNext();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate9 = wildcardClassItor1.getPredicate();
        boolean boolean10 = wildcardClassItor1.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardPredicate9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        int int4 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor7.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate9 = wildcardClassItor7.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor10 = wildcardClassItor7.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor12.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int15 = wildcardClassItor13.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        wildcardClassItor11.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor19.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        int int22 = wildcardClassItor20.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor23);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor25 = wildcardClassItor18.getListIterator();
        boolean boolean26 = wildcardClassItor18.hasPrevious();
        wildcardClassItor16.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        java.lang.Class<?> wildcardClass30 = wildcardClassItor16.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate9);
        org.junit.Assert.assertNotNull(wildcardItor10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor7);
        int int9 = typeItor8.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor11.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        int int14 = wildcardClassItor12.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor17 = wildcardClassItor10.getListIterator();
        int int18 = wildcardClassItor10.previousIndex();
        boolean boolean19 = wildcardClassItor10.hasNext();
        int int20 = wildcardClassItor10.nextIndex();
        typeItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int22 = typeItor8.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate23 = typeItor8.getPredicate();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate24 = typeItor8.getPredicate();
        java.lang.Class<?> wildcardClass25 = typeItor8.getClass();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate23);
        org.junit.Assert.assertNull(wildcardPredicate24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor6.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor9 = wildcardClassItor7.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor11.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        int int14 = wildcardClassItor12.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor17 = wildcardClassItor10.getListIterator();
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        boolean boolean19 = wildcardClassItor10.hasPrevious();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass21 = wildcardClassItor1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNull(wildcardItor9);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate3 = wildcardClassItor1.getPredicate();
        int int4 = wildcardClassItor1.previousIndex();
        int int5 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor6.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int9 = wildcardClassItor7.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate10 = wildcardClassItor7.getPredicate();
        boolean boolean11 = wildcardClassItor7.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor12 = wildcardClassItor7.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardItor12);
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        int int6 = wildcardClassItor1.previousIndex();
        int int7 = wildcardClassItor1.previousIndex();
        boolean boolean8 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        int int14 = wildcardClassItor13.nextIndex();
        boolean boolean15 = wildcardClassItor13.hasPrevious();
        int int16 = wildcardClassItor13.nextIndex();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor18 = wildcardClassItor13.getListIterator();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(wildcardItor18);
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        boolean boolean6 = wildcardClassItor1.hasNext();
        int int7 = wildcardClassItor1.nextIndex();
        boolean boolean8 = wildcardClassItor1.hasNext();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.previousIndex();
        boolean boolean4 = wildcardClassItor1.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor6.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int9 = wildcardClassItor7.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor12 = wildcardClassItor5.getListIterator();
        int int13 = wildcardClassItor5.previousIndex();
        boolean boolean14 = wildcardClassItor5.hasNext();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate16 = wildcardClassItor5.getPredicate();
        int int17 = wildcardClassItor5.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor5.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(wildcardPredicate16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean5 = wildcardClassItor4.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        int int7 = wildcardClassItor4.previousIndex();
        boolean boolean8 = wildcardClassItor4.hasNext();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor9 = wildcardClassItor4.getListIterator();
        boolean boolean10 = wildcardClassItor4.hasPrevious();
        boolean boolean11 = wildcardClassItor4.hasPrevious();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardItor9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        boolean boolean8 = wildcardClassItor5.hasPrevious();
        boolean boolean9 = wildcardClassItor5.hasPrevious();
        boolean boolean10 = wildcardClassItor5.hasNext();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        boolean boolean8 = wildcardClassItor5.hasPrevious();
        boolean boolean9 = wildcardClassItor5.hasPrevious();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate10 = wildcardClassItor5.getPredicate();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate11 = wildcardClassItor5.getPredicate();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(wildcardPredicate10);
        org.junit.Assert.assertNull(wildcardPredicate11);
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        int int11 = wildcardClassItor9.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor14 = wildcardClassItor7.getListIterator();
        boolean boolean15 = wildcardClassItor7.hasPrevious();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        boolean boolean17 = wildcardClassItor5.hasNext();
        int int18 = wildcardClassItor5.nextIndex();
        int int19 = wildcardClassItor5.previousIndex();
        int int20 = wildcardClassItor5.previousIndex();
        boolean boolean21 = wildcardClassItor5.hasPrevious();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor4.getListIterator();
        int int6 = wildcardClassItor4.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int9 = wildcardClassItor8.previousIndex();
        int int10 = wildcardClassItor8.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate11 = wildcardClassItor8.getPredicate();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        int int17 = wildcardClassItor15.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor20 = wildcardClassItor13.getListIterator();
        int int21 = wildcardClassItor13.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor22.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor23);
        int int25 = wildcardClassItor23.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor26 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor23);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate27 = wildcardClassItor26.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor28 = wildcardClassItor26.getListIterator();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        boolean boolean30 = wildcardClassItor13.hasNext();
        boolean boolean31 = wildcardClassItor13.hasNext();
        int int32 = wildcardClassItor13.nextIndex();
        boolean boolean33 = wildcardClassItor13.hasNext();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor34 = wildcardClassItor13.getListIterator();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int36 = wildcardClassItor13.previousIndex();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate11);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate27);
        org.junit.Assert.assertNotNull(wildcardItor28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardItor34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate19 = wildcardClassItor8.getPredicate();
        boolean boolean20 = wildcardClassItor8.hasNext();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor21 = wildcardClassItor8.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.GenericDeclaration> genericDeclarationItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.GenericDeclaration>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor21);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor21);
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor23.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertNull(wildcardPredicate19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItor21);
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor5.getPredicate();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        boolean boolean14 = wildcardClassItor13.hasNext();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate6);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        int int4 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        int int7 = wildcardClassItor6.previousIndex();
        int int8 = wildcardClassItor6.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor9 = wildcardClassItor6.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor10 = wildcardClassItor6.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor10);
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(wildcardItor9);
        org.junit.Assert.assertNotNull(wildcardItor10);
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = wildcardClassItor13.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int18 = wildcardClassItor17.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        int int21 = wildcardClassItor19.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate23 = wildcardClassItor22.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        wildcardClassItor17.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate14);
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate23);
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        int int4 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        int int7 = wildcardClassItor6.previousIndex();
        int int8 = wildcardClassItor6.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor9 = wildcardClassItor6.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor10 = wildcardClassItor6.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor10);
        int int12 = wildcardClassItor1.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass13 = wildcardClassItor1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(wildcardItor9);
        org.junit.Assert.assertNotNull(wildcardItor10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate9 = wildcardClassItor0.getPredicate();
        int int10 = wildcardClassItor0.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor12.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        boolean boolean15 = wildcardClassItor13.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor16.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor19 = wildcardClassItor17.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor21.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        int int24 = wildcardClassItor22.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor25 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        wildcardClassItor20.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor27 = wildcardClassItor20.getListIterator();
        wildcardClassItor17.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor30 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate31 = wildcardClassItor20.getPredicate();
        boolean boolean32 = wildcardClassItor20.hasNext();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate33 = wildcardClassItor20.getPredicate();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        int int35 = wildcardClassItor20.previousIndex();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardItor19);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor27);
        org.junit.Assert.assertNull(wildcardPredicate31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(wildcardPredicate33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor4.getListIterator();
        int int6 = wildcardClassItor4.nextIndex();
        boolean boolean7 = wildcardClassItor4.hasPrevious();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate7 = wildcardClassItor0.getPredicate();
        int int8 = wildcardClassItor0.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        int int4 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor7.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor9 = wildcardClassItor7.getListIterator();
        int int10 = wildcardClassItor7.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor7.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate12 = wildcardClassItor7.getPredicate();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor14 = wildcardClassItor7.getListIterator();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertNull(wildcardPredicate12);
        org.junit.Assert.assertNotNull(wildcardItor14);
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        int int11 = wildcardClassItor9.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor14 = wildcardClassItor7.getListIterator();
        boolean boolean15 = wildcardClassItor7.hasPrevious();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        boolean boolean17 = wildcardClassItor5.hasNext();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor18 = wildcardClassItor5.getListIterator();
        boolean boolean19 = wildcardClassItor5.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass20 = wildcardClassItor5.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItor18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        boolean boolean4 = wildcardClassItor1.hasNext();
        boolean boolean5 = wildcardClassItor1.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass7 = wildcardClassItor1.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = wildcardClassItor13.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        boolean boolean17 = wildcardClassItor0.hasNext();
        boolean boolean18 = wildcardClassItor0.hasNext();
        int int19 = wildcardClassItor0.nextIndex();
        boolean boolean20 = wildcardClassItor0.hasNext();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor21 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        int int24 = wildcardClassItor23.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor25 = wildcardClassItor23.getListIterator();
        int int26 = wildcardClassItor23.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor27 = wildcardClassItor23.getListIterator();
        boolean boolean28 = wildcardClassItor23.hasPrevious();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor23);
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor23.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate14);
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItor21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(wildcardItor27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        boolean boolean5 = wildcardClassItor1.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean7 = wildcardClassItor1.hasNext();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean6 = wildcardClassItor5.hasNext();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass8 = wildcardClassItor5.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItor7);
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor4.getListIterator();
        int int14 = wildcardClassItor4.nextIndex();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertNotNull(wildcardItor13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        int int6 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        boolean boolean14 = wildcardClassItor4.hasPrevious();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate19 = wildcardClassItor18.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        int int21 = wildcardClassItor18.previousIndex();
        int int22 = wildcardClassItor18.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.GenericDeclaration> genericDeclarationItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.GenericDeclaration>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass24 = wildcardClassItor18.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertNull(wildcardPredicate19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor6 = wildcardClassItor4.getListIterator();
        boolean boolean7 = wildcardClassItor4.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass8 = wildcardClassItor4.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNotNull(wildcardItor6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        int int11 = wildcardClassItor9.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor14 = wildcardClassItor7.getListIterator();
        boolean boolean15 = wildcardClassItor7.hasPrevious();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int17 = wildcardClassItor7.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor18 = wildcardClassItor7.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate20 = wildcardClassItor19.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate23 = wildcardClassItor19.getPredicate();
        int int24 = wildcardClassItor19.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor25 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor26 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor26.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        int int29 = wildcardClassItor27.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor30 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        wildcardClassItor25.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor30);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor32 = wildcardClassItor25.getListIterator();
        int int33 = wildcardClassItor25.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate34 = wildcardClassItor25.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor35 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate36 = wildcardClassItor25.getPredicate();
        wildcardClassItor19.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        boolean boolean38 = wildcardClassItor19.hasNext();
        java.lang.Class<?> wildcardClass39 = wildcardClassItor19.getClass();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(wildcardItor18);
        org.junit.Assert.assertNull(wildcardPredicate20);
        org.junit.Assert.assertNull(wildcardPredicate23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate34);
        org.junit.Assert.assertNull(wildcardPredicate36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate19 = wildcardClassItor8.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor21 = wildcardClassItor8.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        boolean boolean23 = wildcardClassItor8.hasNext();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertNull(wildcardPredicate19);
        org.junit.Assert.assertNotNull(wildcardItor21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.previousIndex();
        boolean boolean4 = wildcardClassItor1.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor6.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int9 = wildcardClassItor7.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor12 = wildcardClassItor5.getListIterator();
        int int13 = wildcardClassItor5.previousIndex();
        boolean boolean14 = wildcardClassItor5.hasNext();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate16 = wildcardClassItor5.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor17 = wildcardClassItor5.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass18 = wildcardClassItor5.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(wildcardPredicate16);
        org.junit.Assert.assertNotNull(wildcardItor17);
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        int int5 = wildcardClassItor1.previousIndex();
        boolean boolean6 = wildcardClassItor1.hasNext();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor1.getListIterator();
        int int8 = wildcardClassItor1.nextIndex();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        boolean boolean9 = wildcardClassItor0.hasNext();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor10 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate11 = wildcardClassItor0.getPredicate();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass12 = wildcardClassItor0.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItor10);
        org.junit.Assert.assertNull(wildcardPredicate11);
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor6 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int9 = wildcardClassItor8.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor10 = wildcardClassItor8.getListIterator();
        int int11 = wildcardClassItor8.nextIndex();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        boolean boolean14 = wildcardClassItor8.hasNext();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertNotNull(wildcardItor6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate19 = wildcardClassItor18.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        int int21 = wildcardClassItor18.previousIndex();
        int int22 = wildcardClassItor18.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor23 = wildcardClassItor18.getListIterator();
        java.lang.Class<?> wildcardClass24 = wildcardItor23.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertNull(wildcardPredicate19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(wildcardItor23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        int int18 = wildcardClassItor16.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor21 = wildcardClassItor14.getListIterator();
        int int22 = wildcardClassItor14.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor23.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        int int26 = wildcardClassItor24.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate28 = wildcardClassItor27.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor29 = wildcardClassItor27.getListIterator();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        int int32 = wildcardClassItor31.nextIndex();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor31);
        boolean boolean34 = wildcardClassItor1.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor35 = wildcardClassItor1.getListIterator();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertNotNull(wildcardItor13);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate28);
        org.junit.Assert.assertNotNull(wildcardItor29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItor35);
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        int int5 = wildcardClassItor1.previousIndex();
        boolean boolean6 = wildcardClassItor1.hasNext();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor1.getListIterator();
        boolean boolean8 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.GenericDeclaration> genericDeclarationItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.GenericDeclaration>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        boolean boolean2 = wildcardClassItor0.hasNext();
        boolean boolean3 = wildcardClassItor0.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.GenericDeclaration> genericDeclarationItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.GenericDeclaration>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int5 = genericDeclarationItor4.previousIndex();
        int int6 = genericDeclarationItor4.previousIndex();
        int int7 = genericDeclarationItor4.nextIndex();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        int int1 = wildcardClassItor0.nextIndex();
        boolean boolean2 = wildcardClassItor0.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor3 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        boolean boolean4 = typeItor3.hasPrevious();
        int int5 = typeItor3.previousIndex();
        java.lang.Class<?> wildcardClass6 = typeItor3.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        int int1 = wildcardClassItor0.previousIndex();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        int int11 = wildcardClassItor9.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor14 = wildcardClassItor7.getListIterator();
        boolean boolean15 = wildcardClassItor7.hasPrevious();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        boolean boolean17 = wildcardClassItor5.hasNext();
        boolean boolean18 = wildcardClassItor5.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate20 = wildcardClassItor5.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor21 = wildcardClassItor5.getListIterator();
        boolean boolean22 = wildcardClassItor5.hasNext();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor23 = wildcardClassItor5.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass24 = wildcardClassItor5.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(wildcardPredicate20);
        org.junit.Assert.assertNotNull(wildcardItor21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItor23);
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.previousIndex();
        boolean boolean4 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor8 = wildcardClassItor5.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean11 = typeItor10.hasNext();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardItor8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        boolean boolean9 = wildcardClassItor0.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        int int13 = wildcardClassItor11.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = wildcardClassItor11.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor11.getListIterator();
        boolean boolean16 = wildcardClassItor11.hasNext();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor17 = wildcardClassItor11.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate18 = wildcardClassItor11.getPredicate();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor20 = wildcardClassItor0.getListIterator();
        java.lang.Class<?> wildcardClass21 = wildcardItor20.getClass();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate14);
        org.junit.Assert.assertNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(wildcardItor17);
        org.junit.Assert.assertNull(wildcardPredicate18);
        org.junit.Assert.assertNotNull(wildcardItor20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        boolean boolean9 = wildcardClassItor0.hasNext();
        int int10 = wildcardClassItor0.nextIndex();
        boolean boolean11 = wildcardClassItor0.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        boolean boolean13 = wildcardClassItor0.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor14 = wildcardClassItor0.getListIterator();
        boolean boolean15 = wildcardClassItor0.hasNext();
        boolean boolean16 = wildcardClassItor0.hasNext();
        boolean boolean17 = wildcardClassItor0.hasPrevious();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardItor14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        int int4 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor1.getPredicate();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(wildcardPredicate6);
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        int int6 = wildcardClassItor1.previousIndex();
        int int7 = wildcardClassItor1.previousIndex();
        int int8 = wildcardClassItor1.previousIndex();
        boolean boolean9 = wildcardClassItor1.hasNext();
        int int10 = wildcardClassItor1.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = wildcardClassItor13.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int17 = wildcardClassItor13.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor19 = wildcardClassItor13.getListIterator();
        java.lang.Class<?> wildcardClass20 = wildcardItor19.getClass();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate14);
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(wildcardItor19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        int int6 = wildcardClassItor1.previousIndex();
        int int7 = wildcardClassItor1.previousIndex();
        boolean boolean8 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        int int17 = wildcardClassItor15.previousIndex();
        int int18 = wildcardClassItor15.nextIndex();
        int int19 = wildcardClassItor15.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        int int21 = wildcardClassItor20.previousIndex();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        java.lang.Class<?> wildcardClass23 = wildcardClassItor1.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardItor13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        boolean boolean9 = wildcardClassItor0.hasNext();
        int int10 = wildcardClassItor0.nextIndex();
        int int11 = wildcardClassItor0.nextIndex();
        boolean boolean12 = wildcardClassItor0.hasNext();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.previousIndex();
        boolean boolean4 = wildcardClassItor1.hasNext();
        int int5 = wildcardClassItor1.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor6 = wildcardClassItor4.getListIterator();
        int int7 = wildcardClassItor4.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        int int9 = wildcardClassItor4.previousIndex();
        boolean boolean10 = wildcardClassItor4.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor11.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        int int14 = wildcardClassItor12.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate16 = wildcardClassItor15.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        int int21 = wildcardClassItor19.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        wildcardClassItor17.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor24 = wildcardClassItor17.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor25 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor24);
        int int26 = typeItor25.nextIndex();
        int int27 = typeItor25.previousIndex();
        boolean boolean28 = typeItor25.hasNext();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate29 = typeItor25.getPredicate();
        boolean boolean30 = typeItor25.hasPrevious();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate31 = typeItor25.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor32 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor33 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor32.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor33);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor35 = wildcardClassItor32.getListIterator();
        typeItor25.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor35);
        wildcardClassItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor35);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        int int39 = wildcardClassItor15.nextIndex();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNotNull(wildcardItor6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate16);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(wildcardPredicate29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(wildcardPredicate31);
        org.junit.Assert.assertNotNull(wildcardItor35);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        boolean boolean18 = wildcardClassItor8.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor19.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        int int22 = wildcardClassItor20.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor24 = wildcardClassItor20.getListIterator();
        int int25 = wildcardClassItor20.previousIndex();
        int int26 = wildcardClassItor20.previousIndex();
        int int27 = wildcardClassItor20.previousIndex();
        boolean boolean28 = wildcardClassItor20.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor29 = wildcardClassItor20.getListIterator();
        boolean boolean30 = wildcardClassItor20.hasPrevious();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor20.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(wildcardItor24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(wildcardItor29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int19 = wildcardClassItor8.previousIndex();
        int int20 = wildcardClassItor8.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor21 = wildcardClassItor8.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass23 = wildcardClassItor8.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(wildcardItor21);
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        boolean boolean7 = wildcardClassItor5.hasPrevious();
        int int8 = wildcardClassItor5.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor9 = wildcardClassItor5.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate11 = wildcardClassItor5.getPredicate();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass12 = wildcardClassItor5.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(wildcardItor9);
        org.junit.Assert.assertNull(wildcardPredicate11);
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        int int11 = wildcardClassItor9.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor14 = wildcardClassItor7.getListIterator();
        boolean boolean15 = wildcardClassItor7.hasPrevious();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int17 = wildcardClassItor7.nextIndex();
        boolean boolean18 = wildcardClassItor7.hasNext();
        java.lang.Class<?> wildcardClass19 = wildcardClassItor7.getClass();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate9 = wildcardClassItor0.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor12.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor16 = wildcardClassItor13.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate17 = wildcardClassItor13.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate19 = wildcardClassItor13.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor20.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor23 = wildcardClassItor21.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor25 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor26 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor25.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        int int28 = wildcardClassItor26.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor29 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        wildcardClassItor24.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor29);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor31 = wildcardClassItor24.getListIterator();
        wildcardClassItor21.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass35 = wildcardClassItor10.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate9);
        org.junit.Assert.assertNull(wildcardItor15);
        org.junit.Assert.assertNull(wildcardItor16);
        org.junit.Assert.assertNull(wildcardPredicate17);
        org.junit.Assert.assertNull(wildcardPredicate19);
        org.junit.Assert.assertNull(wildcardItor23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor31);
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        boolean boolean9 = wildcardClassItor0.hasNext();
        int int10 = wildcardClassItor0.nextIndex();
        boolean boolean11 = wildcardClassItor0.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        boolean boolean13 = wildcardClassItor0.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int15 = wildcardClassItor0.previousIndex();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.previousIndex();
        boolean boolean4 = wildcardClassItor1.hasNext();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean7 = wildcardClassItor6.hasNext();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor4 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor1.getPredicate();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertNull(wildcardItor4);
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNull(wildcardPredicate6);
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate19 = wildcardClassItor8.getPredicate();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass20 = wildcardClassItor8.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertNull(wildcardPredicate19);
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int5 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor6.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int9 = wildcardClassItor7.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        boolean boolean11 = wildcardClassItor10.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int13 = wildcardClassItor10.previousIndex();
        boolean boolean14 = wildcardClassItor10.hasNext();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor10.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor15);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor17 = wildcardClassItor16.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        int int19 = wildcardClassItor16.previousIndex();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertNotNull(wildcardItor17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean5 = wildcardClassItor4.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        int int7 = wildcardClassItor4.previousIndex();
        int int8 = wildcardClassItor4.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor9 = wildcardClassItor4.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor9);
        int int11 = wildcardClassItor10.previousIndex();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(wildcardItor9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        boolean boolean18 = wildcardClassItor8.hasPrevious();
        int int19 = wildcardClassItor8.previousIndex();
        int int20 = wildcardClassItor8.previousIndex();
        int int21 = wildcardClassItor8.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass22 = wildcardClassItor8.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor4 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor1.getPredicate();
        int int6 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int10 = wildcardClassItor8.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate11 = wildcardClassItor8.getPredicate();
        boolean boolean12 = wildcardClassItor8.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor8.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor13);
        int int15 = wildcardClassItor1.nextIndex();
        int int16 = wildcardClassItor1.nextIndex();
        boolean boolean17 = wildcardClassItor1.hasNext();
        int int18 = wildcardClassItor1.previousIndex();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertNull(wildcardItor4);
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(wildcardItor13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        boolean boolean3 = wildcardClassItor2.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass4 = wildcardClassItor2.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate19 = wildcardClassItor8.getPredicate();
        boolean boolean20 = wildcardClassItor8.hasNext();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate21 = wildcardClassItor8.getPredicate();
        int int22 = wildcardClassItor8.nextIndex();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertNull(wildcardPredicate19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardPredicate21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor7);
        int int9 = typeItor8.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor11.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        int int14 = wildcardClassItor12.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor17 = wildcardClassItor10.getListIterator();
        int int18 = wildcardClassItor10.previousIndex();
        boolean boolean19 = wildcardClassItor10.hasNext();
        int int20 = wildcardClassItor10.nextIndex();
        typeItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int22 = wildcardClassItor10.nextIndex();
        int int23 = wildcardClassItor10.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor25 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        int int27 = wildcardClassItor10.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor28 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor29 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor28.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor29);
        boolean boolean31 = wildcardClassItor29.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor32 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor33 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor32.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor33);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor35 = wildcardClassItor33.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor36 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor37 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor38 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor37.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor38);
        int int40 = wildcardClassItor38.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor41 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor38);
        wildcardClassItor36.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor41);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor43 = wildcardClassItor36.getListIterator();
        wildcardClassItor33.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor36);
        wildcardClassItor29.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor36);
        int int46 = wildcardClassItor36.previousIndex();
        int int47 = wildcardClassItor36.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor48 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor36);
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor36);
        int int50 = wildcardClassItor36.previousIndex();
        int int51 = wildcardClassItor36.previousIndex();
        int int52 = wildcardClassItor36.previousIndex();
        java.lang.Class<?> wildcardClass53 = wildcardClassItor36.getClass();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(wildcardItor35);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        boolean boolean7 = wildcardClassItor5.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Object> objItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Object>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        int int13 = wildcardClassItor11.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor17.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        int int20 = wildcardClassItor18.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        wildcardClassItor16.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor23 = wildcardClassItor16.getListIterator();
        boolean boolean24 = wildcardClassItor16.hasPrevious();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        int int26 = wildcardClassItor16.nextIndex();
        boolean boolean27 = wildcardClassItor16.hasNext();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate28 = wildcardClassItor16.getPredicate();
        boolean boolean29 = wildcardClassItor16.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor30 = wildcardClassItor16.getListIterator();
        objItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor30);
        boolean boolean32 = objItor8.hasPrevious();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(wildcardPredicate28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardItor30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        int int18 = wildcardClassItor16.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor21 = wildcardClassItor14.getListIterator();
        int int22 = wildcardClassItor14.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor23.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        int int26 = wildcardClassItor24.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate28 = wildcardClassItor27.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor29 = wildcardClassItor27.getListIterator();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        int int32 = wildcardClassItor31.nextIndex();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor31);
        boolean boolean34 = wildcardClassItor1.hasPrevious();
        int int35 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor36 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor37 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor38 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor37.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor38);
        int int40 = wildcardClassItor38.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor41 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor38);
        wildcardClassItor36.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor41);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor43 = wildcardClassItor36.getListIterator();
        int int44 = wildcardClassItor36.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor45 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor46 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor45.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor46);
        int int48 = wildcardClassItor46.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor49 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor46);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate50 = wildcardClassItor49.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor51 = wildcardClassItor49.getListIterator();
        wildcardClassItor36.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor49);
        int int53 = wildcardClassItor49.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate54 = wildcardClassItor49.getPredicate();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor49);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate56 = wildcardClassItor49.getPredicate();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertNotNull(wildcardItor13);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate28);
        org.junit.Assert.assertNotNull(wildcardItor29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate50);
        org.junit.Assert.assertNotNull(wildcardItor51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate54);
        org.junit.Assert.assertNull(wildcardPredicate56);
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        int int5 = wildcardClassItor1.previousIndex();
        boolean boolean6 = wildcardClassItor1.hasNext();
        int int7 = wildcardClassItor1.previousIndex();
        int int8 = wildcardClassItor1.nextIndex();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean5 = wildcardClassItor4.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        int int7 = wildcardClassItor4.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor8 = wildcardClassItor4.getListIterator();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor8);
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        int int4 = wildcardClassItor1.nextIndex();
        boolean boolean5 = wildcardClassItor1.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor6.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int9 = wildcardClassItor7.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor7.getListIterator();
        int int12 = wildcardClassItor7.previousIndex();
        int int13 = wildcardClassItor7.previousIndex();
        boolean boolean14 = wildcardClassItor7.hasPrevious();
        boolean boolean15 = wildcardClassItor7.hasNext();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Object> objItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Object>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int18 = objItor17.nextIndex();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        boolean boolean6 = wildcardClassItor1.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int9 = wildcardClassItor8.previousIndex();
        int int10 = wildcardClassItor8.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate11 = wildcardClassItor8.getPredicate();
        int int12 = wildcardClassItor8.previousIndex();
        int int13 = wildcardClassItor8.nextIndex();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        int int18 = wildcardClassItor16.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate20 = wildcardClassItor19.getPredicate();
        boolean boolean21 = wildcardClassItor19.hasNext();
        int int22 = wildcardClassItor19.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate23 = wildcardClassItor19.getPredicate();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor25 = wildcardClassItor19.getListIterator();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(wildcardPredicate11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(wildcardPredicate23);
        org.junit.Assert.assertNotNull(wildcardItor25);
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean5 = wildcardClassItor4.hasNext();
        int int6 = wildcardClassItor4.previousIndex();
        int int7 = wildcardClassItor4.previousIndex();
        int int8 = wildcardClassItor4.nextIndex();
        boolean boolean9 = wildcardClassItor4.hasPrevious();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        boolean boolean5 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor1.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor8 = wildcardClassItor1.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass9 = wildcardClassItor1.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardPredicate6);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertNull(wildcardItor8);
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        java.util.ListIterator<java.lang.Class<?>> wildcardClassItor13 = null;
        wildcardClassItor1.setListIterator(wildcardClassItor13);
        boolean boolean15 = wildcardClassItor1.hasNext();
        int int16 = wildcardClassItor1.nextIndex();
        int int17 = wildcardClassItor1.nextIndex();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor6 = wildcardClassItor4.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor4.getListIterator();
        boolean boolean8 = wildcardClassItor4.hasPrevious();
        boolean boolean9 = wildcardClassItor4.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor4.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNotNull(wildcardItor6);
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor2 = wildcardClassItor1.getListIterator();
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.GenericDeclaration> genericDeclarationItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.GenericDeclaration>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass5 = wildcardClassItor1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNotNull(wildcardItor2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor4 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor1.getPredicate();
        int int6 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int10 = wildcardClassItor8.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate11 = wildcardClassItor8.getPredicate();
        boolean boolean12 = wildcardClassItor8.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor8.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor13);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.GenericDeclaration> genericDeclarationItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.GenericDeclaration>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int16 = genericDeclarationItor15.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            genericDeclarationItor15.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertNull(wildcardItor4);
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(wildcardItor13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        int int9 = wildcardClassItor0.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        boolean boolean5 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor1.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor1.getListIterator();
        int int8 = wildcardClassItor1.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardPredicate6);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        int int4 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean7 = wildcardClassItor6.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor11.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        int int18 = wildcardClassItor16.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor21 = wildcardClassItor14.getListIterator();
        wildcardClassItor11.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        boolean boolean23 = wildcardClassItor14.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        boolean boolean25 = wildcardClassItor24.hasPrevious();
        int int26 = wildcardClassItor24.nextIndex();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(wildcardItor13);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        boolean boolean18 = wildcardClassItor8.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor20.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        int int23 = wildcardClassItor21.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        wildcardClassItor19.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor26 = wildcardClassItor19.getListIterator();
        int int27 = wildcardClassItor19.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate28 = wildcardClassItor19.getPredicate();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        boolean boolean30 = wildcardClassItor19.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor32 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor31);
        int int33 = wildcardClassItor32.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor34 = wildcardClassItor32.getListIterator();
        int int35 = wildcardClassItor32.nextIndex();
        wildcardClassItor19.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor32);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor37 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor38 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor37.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor38);
        int int40 = wildcardClassItor38.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor41 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor38);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate42 = wildcardClassItor41.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor43 = wildcardClassItor41.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor44 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor41);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor45 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor46 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor47 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor46.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor47);
        int int49 = wildcardClassItor47.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor50 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor47);
        wildcardClassItor45.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor50);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor52 = wildcardClassItor45.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor53 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor52);
        int int54 = typeItor53.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor55 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor56 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor57 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor56.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor57);
        int int59 = wildcardClassItor57.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor60 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor57);
        wildcardClassItor55.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor60);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor62 = wildcardClassItor55.getListIterator();
        int int63 = wildcardClassItor55.previousIndex();
        boolean boolean64 = wildcardClassItor55.hasNext();
        int int65 = wildcardClassItor55.nextIndex();
        typeItor53.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor55);
        int int67 = wildcardClassItor55.nextIndex();
        int int68 = wildcardClassItor55.nextIndex();
        wildcardClassItor44.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor55);
        wildcardClassItor19.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor55);
        int int71 = wildcardClassItor55.previousIndex();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate42);
        org.junit.Assert.assertNotNull(wildcardItor43);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean5 = wildcardClassItor4.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor4.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor8 = wildcardClassItor4.getListIterator();
        int int9 = wildcardClassItor4.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor10 = wildcardClassItor4.getListIterator();
        java.lang.Class<?> wildcardClass11 = wildcardItor10.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertNotNull(wildcardItor8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor3 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int5 = wildcardClassItor0.nextIndex();
        int int6 = wildcardClassItor0.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass7 = wildcardClassItor0.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1284");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        int int11 = wildcardClassItor9.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor14 = wildcardClassItor7.getListIterator();
        boolean boolean15 = wildcardClassItor7.hasPrevious();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        boolean boolean17 = wildcardClassItor5.hasNext();
        boolean boolean18 = wildcardClassItor5.hasPrevious();
        boolean boolean19 = wildcardClassItor5.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass20 = wildcardClassItor5.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1285");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        int int6 = wildcardClassItor1.previousIndex();
        int int7 = wildcardClassItor1.previousIndex();
        boolean boolean8 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.io.Serializable> serializableItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.io.Serializable>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor13);
        org.apache.commons.collections4.iterators.FilterListIterator<java.io.Serializable> serializableItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.io.Serializable>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor13);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardItor13);
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1286");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate2 = wildcardClassItor0.getPredicate();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass3 = wildcardPredicate2.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardPredicate2);
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1287");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        int int18 = wildcardClassItor16.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor21 = wildcardClassItor14.getListIterator();
        int int22 = wildcardClassItor14.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor23.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        int int26 = wildcardClassItor24.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate28 = wildcardClassItor27.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor29 = wildcardClassItor27.getListIterator();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        int int32 = wildcardClassItor31.nextIndex();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor31);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor34 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor35 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor34.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor35);
        int int37 = wildcardClassItor35.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate38 = wildcardClassItor35.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor39 = wildcardClassItor35.getListIterator();
        boolean boolean40 = wildcardClassItor35.hasNext();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor41 = wildcardClassItor35.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor42 = wildcardClassItor35.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate43 = wildcardClassItor35.getPredicate();
        boolean boolean44 = wildcardClassItor35.hasPrevious();
        boolean boolean45 = wildcardClassItor35.hasPrevious();
        wildcardClassItor31.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor35);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate47 = wildcardClassItor35.getPredicate();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertNotNull(wildcardItor13);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate28);
        org.junit.Assert.assertNotNull(wildcardItor29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate38);
        org.junit.Assert.assertNull(wildcardItor39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(wildcardItor41);
        org.junit.Assert.assertNull(wildcardItor42);
        org.junit.Assert.assertNull(wildcardPredicate43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(wildcardPredicate47);
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1288");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        int int5 = wildcardClassItor1.previousIndex();
        int int6 = wildcardClassItor1.nextIndex();
        int int7 = wildcardClassItor1.previousIndex();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1289");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.previousIndex();
        boolean boolean4 = wildcardClassItor1.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor6.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int9 = wildcardClassItor7.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor12 = wildcardClassItor5.getListIterator();
        int int13 = wildcardClassItor5.previousIndex();
        boolean boolean14 = wildcardClassItor5.hasNext();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate16 = wildcardClassItor5.getPredicate();
        int int17 = wildcardClassItor5.nextIndex();
        int int18 = wildcardClassItor5.nextIndex();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(wildcardPredicate16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1290");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean5 = wildcardClassItor4.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        boolean boolean7 = wildcardClassItor4.hasNext();
        java.lang.Class<?> wildcardClass8 = wildcardClassItor4.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1291");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        int int4 = wildcardClassItor1.nextIndex();
        int int5 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        int int7 = wildcardClassItor6.nextIndex();
        boolean boolean8 = wildcardClassItor6.hasPrevious();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor11.previousIndex();
        int int13 = wildcardClassItor11.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor14 = wildcardClassItor11.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor11.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor16 = wildcardClassItor11.getListIterator();
        wildcardClassItor6.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass18 = wildcardClassItor6.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardItor14);
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertNotNull(wildcardItor16);
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1292");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor4.getListIterator();
        int int6 = wildcardClassItor4.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate7 = wildcardClassItor4.getPredicate();
        java.lang.Class<?> wildcardClass8 = wildcardClassItor4.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(wildcardPredicate7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1293");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor6 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int9 = wildcardClassItor8.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor10 = wildcardClassItor8.getListIterator();
        int int11 = wildcardClassItor8.nextIndex();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        java.lang.Class<?> wildcardClass13 = wildcardClassItor8.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertNotNull(wildcardItor6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1294");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor6 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate8 = wildcardClassItor7.getPredicate();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass9 = wildcardClassItor7.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertNotNull(wildcardItor6);
        org.junit.Assert.assertNull(wildcardPredicate8);
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1295");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        boolean boolean7 = wildcardClassItor5.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Object> objItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Object>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate9 = wildcardClassItor5.getPredicate();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor5.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(wildcardPredicate9);
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1296");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor3 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        boolean boolean4 = wildcardClassItor3.hasPrevious();
        boolean boolean5 = wildcardClassItor3.hasPrevious();
        java.lang.Class<?> wildcardClass6 = wildcardClassItor3.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1297");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        boolean boolean5 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor1.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor1.getListIterator();
        int int8 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        int int13 = wildcardClassItor11.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor16 = wildcardClassItor9.getListIterator();
        int int17 = wildcardClassItor9.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        int int21 = wildcardClassItor19.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate23 = wildcardClassItor22.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor24 = wildcardClassItor22.getListIterator();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        int int26 = wildcardClassItor22.nextIndex();
        boolean boolean27 = wildcardClassItor22.hasPrevious();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass29 = wildcardClassItor22.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardPredicate6);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate23);
        org.junit.Assert.assertNotNull(wildcardItor24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1298");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        boolean boolean9 = wildcardClassItor0.hasNext();
        int int10 = wildcardClassItor0.nextIndex();
        boolean boolean11 = wildcardClassItor0.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        boolean boolean13 = wildcardClassItor0.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass15 = wildcardClassItor14.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1299");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean6 = wildcardClassItor5.hasPrevious();
        int int7 = wildcardClassItor5.nextIndex();
        boolean boolean8 = wildcardClassItor5.hasPrevious();
        int int9 = wildcardClassItor5.previousIndex();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1300");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor7);
        int int9 = typeItor8.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor11.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        int int14 = wildcardClassItor12.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor17 = wildcardClassItor10.getListIterator();
        int int18 = wildcardClassItor10.previousIndex();
        boolean boolean19 = wildcardClassItor10.hasNext();
        int int20 = wildcardClassItor10.nextIndex();
        typeItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int22 = wildcardClassItor10.nextIndex();
        boolean boolean23 = wildcardClassItor10.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor24 = wildcardClassItor10.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate25 = wildcardClassItor10.getPredicate();
        java.lang.Class<?> wildcardClass26 = wildcardClassItor10.getClass();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItor24);
        org.junit.Assert.assertNull(wildcardPredicate25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1301");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor4 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate7 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor9.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        int int16 = wildcardClassItor14.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        wildcardClassItor12.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor19 = wildcardClassItor12.getListIterator();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor22 = wildcardClassItor9.getListIterator();
        int int23 = wildcardClassItor9.nextIndex();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertNull(wildcardItor4);
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNull(wildcardPredicate7);
        org.junit.Assert.assertNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor19);
        org.junit.Assert.assertNotNull(wildcardItor22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1302");
        java.util.ListIterator<java.lang.Class<?>> wildcardClassItor0 = null;
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>(wildcardClassItor0);
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1303");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        boolean boolean6 = wildcardClassItor1.hasNext();
        boolean boolean7 = wildcardClassItor1.hasPrevious();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1304");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        int int7 = wildcardClassItor4.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        int int11 = wildcardClassItor9.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate13 = wildcardClassItor12.getPredicate();
        boolean boolean14 = wildcardClassItor12.hasNext();
        int int15 = wildcardClassItor12.nextIndex();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass17 = wildcardClassItor12.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1305");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int19 = wildcardClassItor18.nextIndex();
        boolean boolean20 = wildcardClassItor18.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor21.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor24 = wildcardClassItor22.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor25 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor26 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor26.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        int int29 = wildcardClassItor27.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor30 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        wildcardClassItor25.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor30);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor32 = wildcardClassItor25.getListIterator();
        wildcardClassItor22.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor34 = wildcardClassItor25.getListIterator();
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        boolean boolean36 = wildcardClassItor25.hasNext();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor37 = wildcardClassItor25.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor25.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardItor24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor32);
        org.junit.Assert.assertNotNull(wildcardItor34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardItor37);
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1306");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor4.getListIterator();
        int int6 = wildcardClassItor4.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor4.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass8 = wildcardClassItor4.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(wildcardItor7);
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1307");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = wildcardClassItor13.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int18 = wildcardClassItor17.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        int int21 = wildcardClassItor20.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor22.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor23);
        int int25 = wildcardClassItor23.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate26 = wildcardClassItor23.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor27 = wildcardClassItor23.getListIterator();
        boolean boolean28 = wildcardClassItor23.hasNext();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor29 = wildcardClassItor23.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor30 = wildcardClassItor23.getListIterator();
        wildcardClassItor20.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor23);
        boolean boolean32 = wildcardClassItor23.hasNext();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate14);
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate26);
        org.junit.Assert.assertNull(wildcardItor27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(wildcardItor29);
        org.junit.Assert.assertNull(wildcardItor30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1308");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate1 = wildcardClassItor0.getPredicate();
        boolean boolean2 = wildcardClassItor0.hasNext();
        int int3 = wildcardClassItor0.nextIndex();
        org.junit.Assert.assertNull(wildcardPredicate1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1309");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        boolean boolean10 = wildcardClassItor9.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor12.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int15 = wildcardClassItor13.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        boolean boolean17 = wildcardClassItor16.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        int int19 = wildcardClassItor16.previousIndex();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor21 = wildcardClassItor16.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass23 = wildcardClassItor1.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor21);
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1310");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean5 = wildcardClassItor4.hasNext();
        int int6 = wildcardClassItor4.previousIndex();
        int int7 = wildcardClassItor4.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        boolean boolean11 = wildcardClassItor9.hasPrevious();
        int int12 = wildcardClassItor9.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int15 = wildcardClassItor14.previousIndex();
        int int16 = wildcardClassItor14.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor17 = wildcardClassItor14.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor18 = wildcardClassItor14.getListIterator();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor18);
        int int20 = wildcardClassItor9.previousIndex();
        boolean boolean21 = wildcardClassItor9.hasPrevious();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        boolean boolean23 = wildcardClassItor9.hasPrevious();
        int int24 = wildcardClassItor9.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor25 = wildcardClassItor9.getListIterator();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(wildcardItor17);
        org.junit.Assert.assertNotNull(wildcardItor18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(wildcardItor25);
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1311");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor0.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor0.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass4 = wildcardClassItor0.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(wildcardItor3);
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1312");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor5.getPredicate();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor9 = wildcardClassItor8.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor10 = wildcardClassItor8.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor8.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate6);
        org.junit.Assert.assertNotNull(wildcardItor9);
        org.junit.Assert.assertNotNull(wildcardItor10);
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1313");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate1 = wildcardClassItor0.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor2 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor3 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        int int7 = wildcardClassItor5.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        wildcardClassItor3.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor10 = wildcardClassItor3.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor10);
        int int12 = typeItor11.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        int int17 = wildcardClassItor15.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor20 = wildcardClassItor13.getListIterator();
        int int21 = wildcardClassItor13.previousIndex();
        boolean boolean22 = wildcardClassItor13.hasNext();
        int int23 = wildcardClassItor13.nextIndex();
        typeItor11.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int25 = wildcardClassItor13.nextIndex();
        int int26 = wildcardClassItor13.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor28 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor28);
        int int30 = wildcardClassItor13.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor32 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor31.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor32);
        boolean boolean34 = wildcardClassItor32.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor35 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor36 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor35.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor36);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor38 = wildcardClassItor36.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor39 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor40 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor41 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor40.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor41);
        int int43 = wildcardClassItor41.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor44 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor41);
        wildcardClassItor39.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor44);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor46 = wildcardClassItor39.getListIterator();
        wildcardClassItor36.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor39);
        wildcardClassItor32.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor39);
        int int49 = wildcardClassItor39.previousIndex();
        int int50 = wildcardClassItor39.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor51 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor39);
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor39);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate54 = wildcardClassItor0.getPredicate();
        int int55 = wildcardClassItor0.previousIndex();
        org.junit.Assert.assertNull(wildcardPredicate1);
        org.junit.Assert.assertNull(wildcardItor2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(wildcardItor38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNull(wildcardPredicate54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1314");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1315");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        boolean boolean18 = wildcardClassItor8.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor20.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        int int23 = wildcardClassItor21.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        wildcardClassItor19.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor26 = wildcardClassItor19.getListIterator();
        int int27 = wildcardClassItor19.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate28 = wildcardClassItor19.getPredicate();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        boolean boolean30 = wildcardClassItor19.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor32 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor31);
        int int33 = wildcardClassItor32.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor34 = wildcardClassItor32.getListIterator();
        int int35 = wildcardClassItor32.nextIndex();
        wildcardClassItor19.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor32);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate37 = wildcardClassItor32.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor38 = wildcardClassItor32.getListIterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(wildcardPredicate37);
        org.junit.Assert.assertNotNull(wildcardItor38);
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1316");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        int int1 = wildcardClassItor0.nextIndex();
        boolean boolean2 = wildcardClassItor0.hasPrevious();
        boolean boolean3 = wildcardClassItor0.hasNext();
        int int4 = wildcardClassItor0.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass5 = wildcardClassItor0.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1317");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int19 = wildcardClassItor18.nextIndex();
        boolean boolean20 = wildcardClassItor18.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor21.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor24 = wildcardClassItor22.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor25 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor26 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor26.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        int int29 = wildcardClassItor27.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor30 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        wildcardClassItor25.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor30);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor32 = wildcardClassItor25.getListIterator();
        wildcardClassItor22.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor34 = wildcardClassItor25.getListIterator();
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        boolean boolean36 = wildcardClassItor18.hasNext();
        int int37 = wildcardClassItor18.nextIndex();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardItor24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor32);
        org.junit.Assert.assertNotNull(wildcardItor34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1318");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        int int11 = wildcardClassItor9.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor14 = wildcardClassItor7.getListIterator();
        boolean boolean15 = wildcardClassItor7.hasPrevious();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int17 = wildcardClassItor7.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor18 = wildcardClassItor7.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate20 = wildcardClassItor19.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor19.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(wildcardItor18);
        org.junit.Assert.assertNull(wildcardPredicate20);
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1319");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor6 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int9 = wildcardClassItor8.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor10 = wildcardClassItor8.getListIterator();
        int int11 = wildcardClassItor8.nextIndex();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int14 = wildcardClassItor13.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        boolean boolean16 = wildcardClassItor13.hasNext();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertNotNull(wildcardItor6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1320");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        int int4 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        int int7 = wildcardClassItor6.previousIndex();
        int int8 = wildcardClassItor6.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor9 = wildcardClassItor6.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor10 = wildcardClassItor6.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate13 = wildcardClassItor1.getPredicate();
        int int14 = wildcardClassItor1.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor1.getListIterator();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(wildcardItor9);
        org.junit.Assert.assertNotNull(wildcardItor10);
        org.junit.Assert.assertNull(wildcardPredicate13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1321");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate19 = wildcardClassItor8.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        int int21 = wildcardClassItor20.nextIndex();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        boolean boolean23 = wildcardClassItor8.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor24 = wildcardClassItor8.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass25 = wildcardClassItor8.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertNull(wildcardPredicate19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItor24);
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1322");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        int int7 = wildcardClassItor4.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor8 = wildcardClassItor4.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        int int17 = wildcardClassItor15.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        boolean boolean19 = wildcardClassItor18.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor21.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        int int24 = wildcardClassItor22.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor25 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        boolean boolean26 = wildcardClassItor25.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        int int28 = wildcardClassItor25.previousIndex();
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor30 = wildcardClassItor25.getListIterator();
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor33 = wildcardClassItor25.getListIterator();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(wildcardItor8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor30);
        org.junit.Assert.assertNotNull(wildcardItor33);
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1323");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        int int4 = wildcardClassItor1.nextIndex();
        int int5 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor1.getPredicate();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate6);
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1324");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        int int7 = wildcardClassItor4.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate8 = wildcardClassItor4.getPredicate();
        boolean boolean9 = wildcardClassItor4.hasPrevious();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(wildcardPredicate8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1325");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        int int14 = annotatedElementItor13.previousIndex();
        int int15 = annotatedElementItor13.previousIndex();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1326");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        boolean boolean4 = wildcardClassItor1.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.lang.Class<?> wildcardClass6 = wildcardClassItor5.getClass();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1327");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = wildcardClassItor13.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int17 = wildcardClassItor13.nextIndex();
        boolean boolean18 = wildcardClassItor13.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor19.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        int int22 = wildcardClassItor20.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        int int24 = wildcardClassItor23.nextIndex();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor23);
        java.lang.Class<?> wildcardClass26 = wildcardClassItor13.getClass();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate14);
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1328");
        java.util.ListIterator<java.lang.Class<?>> wildcardClassItor0 = null;
        org.apache.commons.collections4.iterators.FilterListIterator<java.io.Serializable> serializableItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.io.Serializable>(wildcardClassItor0);
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1329");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        java.lang.Class<?> wildcardClass19 = wildcardClassItor18.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1330");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = wildcardClassItor13.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int17 = wildcardClassItor13.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        int int21 = wildcardClassItor19.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate23 = wildcardClassItor22.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        int int25 = wildcardClassItor22.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor26 = wildcardClassItor22.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor28 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor27.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor28);
        int int30 = wildcardClassItor28.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor28);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor32 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor33 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor32.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor33);
        int int35 = wildcardClassItor33.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor36 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor33);
        boolean boolean37 = wildcardClassItor36.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor38 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor36);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor39 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor40 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor39.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor40);
        int int42 = wildcardClassItor40.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor43 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor40);
        boolean boolean44 = wildcardClassItor43.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor45 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor43);
        int int46 = wildcardClassItor43.previousIndex();
        wildcardClassItor36.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor43);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor48 = wildcardClassItor43.getListIterator();
        wildcardClassItor28.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor43);
        wildcardClassItor22.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor43);
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor43);
        boolean boolean52 = wildcardClassItor13.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass53 = wildcardClassItor13.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate14);
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(wildcardItor26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1331");
        org.apache.commons.collections4.iterators.FilterListIterator<java.util.Iterator<java.lang.Class<?>>> wildcardClassItorItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.util.Iterator<java.lang.Class<?>>>();
        boolean boolean1 = wildcardClassItorItor0.hasPrevious();
        java.lang.Class<?> wildcardClass2 = wildcardClassItorItor0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1332");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>();
        boolean boolean1 = typeItor0.hasPrevious();
        boolean boolean2 = typeItor0.hasNext();
        boolean boolean3 = typeItor0.hasNext();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1333");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.previousIndex();
        boolean boolean4 = wildcardClassItor1.hasNext();
        boolean boolean5 = wildcardClassItor1.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1334");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean5 = wildcardClassItor4.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        boolean boolean7 = wildcardClassItor4.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass8 = wildcardClassItor4.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1335");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor4.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate7 = wildcardClassItor6.getPredicate();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass8 = wildcardClassItor6.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor5);
        org.junit.Assert.assertNull(wildcardPredicate7);
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1336");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        boolean boolean5 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor1.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor8 = wildcardClassItor1.getListIterator();
        boolean boolean9 = wildcardClassItor1.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor11.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        int int14 = wildcardClassItor12.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate17 = wildcardClassItor10.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        boolean boolean21 = wildcardClassItor19.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor22.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor23);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor25 = wildcardClassItor23.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor26 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor28 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor27.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor28);
        int int30 = wildcardClassItor28.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor28);
        wildcardClassItor26.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor31);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor33 = wildcardClassItor26.getListIterator();
        wildcardClassItor23.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        wildcardClassItor19.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor36 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        int int37 = wildcardClassItor26.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor38 = wildcardClassItor26.getListIterator();
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        int int40 = wildcardClassItor26.nextIndex();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass42 = wildcardClassItor1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardPredicate6);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertNull(wildcardItor8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardItor25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1337");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor4 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        boolean boolean8 = wildcardClassItor6.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor12 = wildcardClassItor10.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        int int17 = wildcardClassItor15.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor20 = wildcardClassItor13.getListIterator();
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        wildcardClassItor6.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int24 = wildcardClassItor13.previousIndex();
        int int25 = wildcardClassItor13.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor26 = wildcardClassItor13.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor28 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        int int29 = wildcardClassItor28.nextIndex();
        boolean boolean30 = wildcardClassItor28.hasPrevious();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor28);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor32 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor28);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate33 = wildcardClassItor32.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor34 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor32);
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor32.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertNull(wildcardItor4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardItor12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(wildcardItor26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(wildcardPredicate33);
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1338");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        int int6 = wildcardClassItor1.previousIndex();
        int int7 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate8 = wildcardClassItor1.getPredicate();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass9 = wildcardClassItor1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate8);
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1339");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        int int11 = wildcardClassItor9.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor14 = wildcardClassItor7.getListIterator();
        boolean boolean15 = wildcardClassItor7.hasPrevious();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        boolean boolean17 = wildcardClassItor5.hasNext();
        boolean boolean18 = wildcardClassItor5.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate20 = wildcardClassItor19.getPredicate();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(wildcardPredicate20);
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1340");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate19 = wildcardClassItor8.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int21 = wildcardClassItor8.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate22 = wildcardClassItor8.getPredicate();
        java.lang.Class<?> wildcardClass23 = wildcardClassItor8.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertNull(wildcardPredicate19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(wildcardPredicate22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1341");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate9 = wildcardClassItor0.getPredicate();
        int int10 = wildcardClassItor0.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor12.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        boolean boolean15 = wildcardClassItor13.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor16.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor19 = wildcardClassItor17.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor21.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        int int24 = wildcardClassItor22.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor25 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        wildcardClassItor20.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor27 = wildcardClassItor20.getListIterator();
        wildcardClassItor17.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor30 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate31 = wildcardClassItor20.getPredicate();
        boolean boolean32 = wildcardClassItor20.hasNext();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate33 = wildcardClassItor20.getPredicate();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        int int35 = wildcardClassItor20.previousIndex();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardItor19);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor27);
        org.junit.Assert.assertNull(wildcardPredicate31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(wildcardPredicate33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1342");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int9 = wildcardClassItor8.previousIndex();
        int int10 = wildcardClassItor8.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor8.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor12 = wildcardClassItor8.getListIterator();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        boolean boolean14 = wildcardClassItor4.hasPrevious();
        int int15 = wildcardClassItor4.previousIndex();
        int int16 = wildcardClassItor4.previousIndex();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNull(wildcardPredicate6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertNotNull(wildcardItor12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1343");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate19 = wildcardClassItor18.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        int int22 = wildcardClassItor21.nextIndex();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertNull(wildcardPredicate19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1344");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate3 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate3);
        org.junit.Assert.assertNull(wildcardPredicate4);
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1345");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        boolean boolean9 = wildcardClassItor0.hasNext();
        int int10 = wildcardClassItor0.nextIndex();
        boolean boolean11 = wildcardClassItor0.hasPrevious();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate12 = wildcardClassItor0.getPredicate();
        int int13 = wildcardClassItor0.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor14 = wildcardClassItor0.getListIterator();
        int int15 = wildcardClassItor0.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardPredicate12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardItor14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1346");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate1 = wildcardClassItor0.getPredicate();
        boolean boolean2 = wildcardClassItor0.hasNext();
        java.util.ListIterator<java.lang.Class<?>> wildcardClassItor3 = null;
        wildcardClassItor0.setListIterator(wildcardClassItor3);
        java.lang.Class<?> wildcardClass5 = wildcardClassItor0.getClass();
        org.junit.Assert.assertNull(wildcardPredicate1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1347");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate1 = wildcardClassItor0.getPredicate();
        boolean boolean2 = wildcardClassItor0.hasNext();
        java.util.ListIterator<java.lang.Class<?>> wildcardClassItor3 = null;
        wildcardClassItor0.setListIterator(wildcardClassItor3);
        int int5 = wildcardClassItor0.previousIndex();
        int int6 = wildcardClassItor0.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        org.junit.Assert.assertNull(wildcardPredicate1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1348");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor14.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass16 = wildcardClassItor14.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertNotNull(wildcardItor13);
        org.junit.Assert.assertNotNull(wildcardItor15);
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1349");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor3 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        boolean boolean5 = wildcardClassItor0.hasNext();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1350");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        boolean boolean1 = wildcardClassItor0.hasNext();
        int int2 = wildcardClassItor0.nextIndex();
        boolean boolean3 = wildcardClassItor0.hasNext();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor4 = wildcardClassItor0.getListIterator();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor4);
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1351");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        boolean boolean4 = wildcardClassItor1.hasNext();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor1.getPredicate();
        int int6 = wildcardClassItor1.previousIndex();
        int int7 = wildcardClassItor1.previousIndex();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1352");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor7);
        int int9 = typeItor8.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor11.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        int int14 = wildcardClassItor12.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor17 = wildcardClassItor10.getListIterator();
        int int18 = wildcardClassItor10.previousIndex();
        boolean boolean19 = wildcardClassItor10.hasNext();
        int int20 = wildcardClassItor10.nextIndex();
        typeItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int22 = typeItor8.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate23 = typeItor8.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor25 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor26 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor25.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        int int28 = wildcardClassItor26.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor29 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        wildcardClassItor24.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor29);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor31 = wildcardClassItor24.getListIterator();
        int int32 = wildcardClassItor24.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor33 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor34 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor33.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor34);
        int int36 = wildcardClassItor34.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor37 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor34);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate38 = wildcardClassItor37.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor39 = wildcardClassItor37.getListIterator();
        wildcardClassItor24.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor37);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor41 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor37);
        int int42 = wildcardClassItor41.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor43 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor41);
        typeItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor41);
        int int45 = typeItor8.nextIndex();
        int int46 = typeItor8.nextIndex();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate38);
        org.junit.Assert.assertNotNull(wildcardItor39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1353");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate3 = wildcardClassItor1.getPredicate();
        int int4 = wildcardClassItor1.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor6.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        boolean boolean9 = wildcardClassItor7.hasPrevious();
        int int10 = wildcardClassItor7.nextIndex();
        int int11 = wildcardClassItor7.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        boolean boolean14 = wildcardClassItor1.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass15 = wildcardClassItor1.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1354");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        boolean boolean18 = wildcardClassItor8.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor20.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        int int23 = wildcardClassItor21.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        wildcardClassItor19.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor26 = wildcardClassItor19.getListIterator();
        int int27 = wildcardClassItor19.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate28 = wildcardClassItor19.getPredicate();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        boolean boolean30 = wildcardClassItor19.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor32 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor31);
        int int33 = wildcardClassItor32.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor34 = wildcardClassItor32.getListIterator();
        int int35 = wildcardClassItor32.nextIndex();
        wildcardClassItor19.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor32);
        boolean boolean37 = wildcardClassItor19.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor19.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1355");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        boolean boolean5 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor1.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor8 = wildcardClassItor1.getListIterator();
        boolean boolean9 = wildcardClassItor1.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor11.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        int int14 = wildcardClassItor12.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate17 = wildcardClassItor10.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        boolean boolean21 = wildcardClassItor19.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor22.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor23);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor25 = wildcardClassItor23.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor26 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor28 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor27.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor28);
        int int30 = wildcardClassItor28.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor28);
        wildcardClassItor26.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor31);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor33 = wildcardClassItor26.getListIterator();
        wildcardClassItor23.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        wildcardClassItor19.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor36 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        int int37 = wildcardClassItor26.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor38 = wildcardClassItor26.getListIterator();
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        int int40 = wildcardClassItor26.nextIndex();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor42 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor43 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor42.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor43);
        int int45 = wildcardClassItor43.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor46 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor43);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor47 = wildcardClassItor46.getListIterator();
        int int48 = wildcardClassItor46.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor49 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor50 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor49);
        int int51 = wildcardClassItor50.previousIndex();
        int int52 = wildcardClassItor50.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate53 = wildcardClassItor50.getPredicate();
        wildcardClassItor46.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor50);
        int int55 = wildcardClassItor46.previousIndex();
        int int56 = wildcardClassItor46.previousIndex();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor46);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor58 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor46);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardPredicate6);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertNull(wildcardItor8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardItor25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1356");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        boolean boolean8 = wildcardClassItor5.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate13 = wildcardClassItor10.getPredicate();
        boolean boolean14 = wildcardClassItor10.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor10.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor16 = wildcardClassItor10.getListIterator();
        int int17 = wildcardClassItor10.nextIndex();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor19 = wildcardClassItor10.getListIterator();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(wildcardItor15);
        org.junit.Assert.assertNull(wildcardItor16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(wildcardItor19);
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1357");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate19 = wildcardClassItor8.getPredicate();
        boolean boolean20 = wildcardClassItor8.hasPrevious();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate21 = wildcardClassItor8.getPredicate();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertNull(wildcardPredicate19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardPredicate21);
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1358");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.GenericDeclaration> genericDeclarationItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.GenericDeclaration>();
        int int1 = genericDeclarationItor0.previousIndex();
        int int2 = genericDeclarationItor0.nextIndex();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1359");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        int int11 = wildcardClassItor9.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor14 = wildcardClassItor7.getListIterator();
        boolean boolean15 = wildcardClassItor7.hasPrevious();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int17 = wildcardClassItor7.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor18 = wildcardClassItor7.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate19 = wildcardClassItor7.getPredicate();
        boolean boolean20 = wildcardClassItor7.hasNext();
        java.lang.Class<?> wildcardClass21 = wildcardClassItor7.getClass();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(wildcardItor18);
        org.junit.Assert.assertNull(wildcardPredicate19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1360");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int19 = wildcardClassItor18.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass20 = wildcardClassItor18.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1361");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        boolean boolean9 = wildcardClassItor0.hasNext();
        int int10 = wildcardClassItor0.nextIndex();
        boolean boolean11 = wildcardClassItor0.hasPrevious();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate12 = wildcardClassItor0.getPredicate();
        int int13 = wildcardClassItor0.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int15 = wildcardClassItor14.nextIndex();
        boolean boolean16 = wildcardClassItor14.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass17 = wildcardClassItor14.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardPredicate12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1362");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor5.getPredicate();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        boolean boolean14 = wildcardClassItor13.hasNext();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass16 = wildcardClassItor0.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate6);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1363");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor7);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        boolean boolean12 = wildcardClassItor10.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor16 = wildcardClassItor14.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        int int21 = wildcardClassItor19.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        wildcardClassItor17.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor24 = wildcardClassItor17.getListIterator();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate28 = wildcardClassItor27.getPredicate();
        typeItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        org.apache.commons.collections4.iterators.FilterListIterator<java.io.Serializable> serializableItor30 = new org.apache.commons.collections4.iterators.FilterListIterator<java.io.Serializable>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        int int31 = wildcardClassItor27.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass32 = wildcardClassItor27.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(wildcardItor16);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor24);
        org.junit.Assert.assertNull(wildcardPredicate28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1364");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        boolean boolean3 = wildcardClassItor2.hasPrevious();
        boolean boolean4 = wildcardClassItor2.hasPrevious();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1365");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        boolean boolean14 = wildcardClassItor13.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        int int17 = wildcardClassItor16.previousIndex();
        int int18 = wildcardClassItor16.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate19 = wildcardClassItor16.getPredicate();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        boolean boolean21 = wildcardClassItor16.hasPrevious();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1366");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor6 = wildcardClassItor5.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor5.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertNotNull(wildcardItor6);
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1367");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate1 = wildcardClassItor0.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor2 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor3 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        int int7 = wildcardClassItor5.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        wildcardClassItor3.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor10 = wildcardClassItor3.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor10);
        int int12 = typeItor11.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        int int17 = wildcardClassItor15.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor20 = wildcardClassItor13.getListIterator();
        int int21 = wildcardClassItor13.previousIndex();
        boolean boolean22 = wildcardClassItor13.hasNext();
        int int23 = wildcardClassItor13.nextIndex();
        typeItor11.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int25 = wildcardClassItor13.nextIndex();
        int int26 = wildcardClassItor13.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor28 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor28);
        int int30 = wildcardClassItor13.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor32 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor31.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor32);
        boolean boolean34 = wildcardClassItor32.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor35 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor36 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor35.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor36);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor38 = wildcardClassItor36.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor39 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor40 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor41 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor40.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor41);
        int int43 = wildcardClassItor41.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor44 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor41);
        wildcardClassItor39.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor44);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor46 = wildcardClassItor39.getListIterator();
        wildcardClassItor36.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor39);
        wildcardClassItor32.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor39);
        int int49 = wildcardClassItor39.previousIndex();
        int int50 = wildcardClassItor39.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor51 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor39);
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor39);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate54 = wildcardClassItor0.getPredicate();
        org.junit.Assert.assertNull(wildcardPredicate1);
        org.junit.Assert.assertNull(wildcardItor2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(wildcardItor38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNull(wildcardPredicate54);
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1368");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor7);
        int int9 = typeItor8.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor11.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        int int14 = wildcardClassItor12.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor17 = wildcardClassItor10.getListIterator();
        int int18 = wildcardClassItor10.previousIndex();
        boolean boolean19 = wildcardClassItor10.hasNext();
        int int20 = wildcardClassItor10.nextIndex();
        typeItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int22 = typeItor8.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            typeItor8.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1369");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        boolean boolean9 = wildcardClassItor0.hasNext();
        int int10 = wildcardClassItor0.nextIndex();
        boolean boolean11 = wildcardClassItor0.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor0.getListIterator();
        int int14 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor16.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        int int19 = wildcardClassItor17.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        wildcardClassItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor22 = wildcardClassItor15.getListIterator();
        int int23 = wildcardClassItor15.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor25 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor24.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        int int27 = wildcardClassItor25.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor28 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate29 = wildcardClassItor28.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor30 = wildcardClassItor28.getListIterator();
        wildcardClassItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor28);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor32 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor28);
        int int33 = wildcardClassItor32.nextIndex();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor32);
        int int35 = wildcardClassItor0.previousIndex();
        java.lang.Class<?> wildcardClass36 = wildcardClassItor0.getClass();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItor13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate29);
        org.junit.Assert.assertNotNull(wildcardItor30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1370");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean5 = wildcardClassItor4.hasNext();
        int int6 = wildcardClassItor4.previousIndex();
        int int7 = wildcardClassItor4.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        boolean boolean11 = wildcardClassItor9.hasPrevious();
        int int12 = wildcardClassItor9.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int15 = wildcardClassItor14.previousIndex();
        int int16 = wildcardClassItor14.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor17 = wildcardClassItor14.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor18 = wildcardClassItor14.getListIterator();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor18);
        int int20 = wildcardClassItor9.previousIndex();
        boolean boolean21 = wildcardClassItor9.hasPrevious();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass23 = wildcardClassItor9.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(wildcardItor17);
        org.junit.Assert.assertNotNull(wildcardItor18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1371");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        boolean boolean7 = wildcardClassItor0.hasNext();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1372");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int18 = wildcardClassItor8.previousIndex();
        int int19 = wildcardClassItor8.previousIndex();
        int int20 = wildcardClassItor8.nextIndex();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1373");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int3 = wildcardClassItor0.nextIndex();
        int int4 = wildcardClassItor0.nextIndex();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1374");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.io.Serializable> serializableItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.io.Serializable>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor6.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int9 = wildcardClassItor7.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor12 = wildcardClassItor5.getListIterator();
        int int13 = wildcardClassItor5.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        int int17 = wildcardClassItor15.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate19 = wildcardClassItor18.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor20 = wildcardClassItor18.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        int int22 = wildcardClassItor18.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor23.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        int int26 = wildcardClassItor24.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate28 = wildcardClassItor27.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor29 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        int int30 = wildcardClassItor27.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor31 = wildcardClassItor27.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor32 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor33 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor32.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor33);
        int int35 = wildcardClassItor33.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor36 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor33);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor37 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor38 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor37.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor38);
        int int40 = wildcardClassItor38.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor41 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor38);
        boolean boolean42 = wildcardClassItor41.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor43 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor41);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor44 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor45 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor44.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor45);
        int int47 = wildcardClassItor45.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor48 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor45);
        boolean boolean49 = wildcardClassItor48.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor50 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor48);
        int int51 = wildcardClassItor48.previousIndex();
        wildcardClassItor41.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor48);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor53 = wildcardClassItor48.getListIterator();
        wildcardClassItor33.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor48);
        wildcardClassItor27.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor48);
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor48);
        boolean boolean57 = wildcardClassItor18.hasNext();
        int int58 = wildcardClassItor18.nextIndex();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor60 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor61 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor62 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor61.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor62);
        int int64 = wildcardClassItor62.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor65 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor62);
        wildcardClassItor60.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor65);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor67 = wildcardClassItor60.getListIterator();
        int int68 = wildcardClassItor60.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate69 = wildcardClassItor60.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor70 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor60);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor71 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor70);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor72 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor73 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor72.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor73);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor75 = wildcardClassItor73.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor76 = wildcardClassItor73.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate77 = wildcardClassItor73.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor78 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor73);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate79 = wildcardClassItor73.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor80 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor81 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor80.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor81);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor83 = wildcardClassItor81.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor84 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor85 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor86 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor85.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor86);
        int int88 = wildcardClassItor86.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor89 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor86);
        wildcardClassItor84.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor89);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor91 = wildcardClassItor84.getListIterator();
        wildcardClassItor81.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor84);
        wildcardClassItor73.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor81);
        wildcardClassItor70.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor73);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor70);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate19);
        org.junit.Assert.assertNotNull(wildcardItor20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(wildcardItor31);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor53);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate69);
        org.junit.Assert.assertNull(wildcardItor75);
        org.junit.Assert.assertNull(wildcardItor76);
        org.junit.Assert.assertNull(wildcardPredicate77);
        org.junit.Assert.assertNull(wildcardPredicate79);
        org.junit.Assert.assertNull(wildcardItor83);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor91);
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1375");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        boolean boolean5 = wildcardClassItor1.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int7 = wildcardClassItor6.nextIndex();
        int int8 = wildcardClassItor6.previousIndex();
        java.lang.Class<?> wildcardClass9 = wildcardClassItor6.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1376");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        boolean boolean18 = wildcardClassItor8.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor20.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        int int23 = wildcardClassItor21.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        wildcardClassItor19.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor26 = wildcardClassItor19.getListIterator();
        int int27 = wildcardClassItor19.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate28 = wildcardClassItor19.getPredicate();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        boolean boolean30 = wildcardClassItor19.hasPrevious();
        int int31 = wildcardClassItor19.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor19.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1377");
        java.util.ListIterator<java.lang.Class<?>> wildcardClassItor0 = null;
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Object> objItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Object>(wildcardClassItor0);
        boolean boolean2 = objItor1.hasPrevious();
        java.lang.Class<?> wildcardClass3 = objItor1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1378");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int9 = wildcardClassItor8.previousIndex();
        int int10 = wildcardClassItor8.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor8.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor12 = wildcardClassItor8.getListIterator();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass14 = wildcardClassItor8.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNull(wildcardPredicate6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertNotNull(wildcardItor12);
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1379");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor7.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate9 = wildcardClassItor7.getPredicate();
        int int10 = wildcardClassItor7.previousIndex();
        int int11 = wildcardClassItor7.previousIndex();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int13 = wildcardClassItor7.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        int int18 = wildcardClassItor16.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor21 = wildcardClassItor14.getListIterator();
        int int22 = wildcardClassItor14.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor23.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        int int26 = wildcardClassItor24.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate28 = wildcardClassItor27.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor29 = wildcardClassItor27.getListIterator();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        int int32 = wildcardClassItor31.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor33 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor31);
        boolean boolean34 = wildcardClassItor31.hasNext();
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor31);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor36 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor37 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor38 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor37.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor38);
        int int40 = wildcardClassItor38.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor41 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor38);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate42 = wildcardClassItor41.getPredicate();
        wildcardClassItor36.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor41);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor44 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate45 = wildcardClassItor44.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor46 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor44);
        wildcardClassItor41.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor46);
        boolean boolean48 = wildcardClassItor41.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor49 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor50 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor49.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor50);
        int int52 = wildcardClassItor50.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor53 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor50);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor54 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor55 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor54.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor55);
        int int57 = wildcardClassItor55.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor58 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor55);
        boolean boolean59 = wildcardClassItor58.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor60 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor58);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor61 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor62 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor61.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor62);
        int int64 = wildcardClassItor62.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor65 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor62);
        boolean boolean66 = wildcardClassItor65.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor67 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor65);
        int int68 = wildcardClassItor65.previousIndex();
        wildcardClassItor58.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor65);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor70 = wildcardClassItor65.getListIterator();
        wildcardClassItor50.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor65);
        wildcardClassItor41.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor65);
        wildcardClassItor31.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor41);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate28);
        org.junit.Assert.assertNotNull(wildcardItor29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate42);
        org.junit.Assert.assertNull(wildcardPredicate45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor70);
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1380");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        int int6 = wildcardClassItor1.previousIndex();
        int int7 = wildcardClassItor1.previousIndex();
        boolean boolean8 = wildcardClassItor1.hasNext();
        boolean boolean9 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate10 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(wildcardPredicate10);
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1381");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor5.getPredicate();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        boolean boolean14 = wildcardClassItor13.hasNext();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        java.lang.Class<?> wildcardClass17 = wildcardClassItor0.getClass();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate6);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1382");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass7 = wildcardClassItor6.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1383");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        boolean boolean4 = wildcardClassItor1.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass5 = wildcardClassItor1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1384");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate1 = wildcardClassItor0.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        boolean boolean3 = wildcardClassItor0.hasPrevious();
        java.lang.Class<?> wildcardClass4 = wildcardClassItor0.getClass();
        org.junit.Assert.assertNull(wildcardPredicate1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1385");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        int int6 = wildcardClassItor1.previousIndex();
        int int7 = wildcardClassItor1.previousIndex();
        boolean boolean8 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass15 = wildcardClassItor1.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardItor13);
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1386");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        int int6 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Object> objItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Object>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int8 = wildcardClassItor1.previousIndex();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1387");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        int int4 = wildcardClassItor1.nextIndex();
        int int5 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean7 = wildcardClassItor6.hasPrevious();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1388");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean5 = wildcardClassItor4.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        int int7 = wildcardClassItor4.previousIndex();
        boolean boolean8 = wildcardClassItor4.hasNext();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor9 = wildcardClassItor4.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor9);
        int int11 = wildcardClassItor10.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate13 = wildcardClassItor10.getPredicate();
        boolean boolean14 = wildcardClassItor10.hasNext();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardItor9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(wildcardPredicate13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1389");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = wildcardClassItor13.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int18 = wildcardClassItor17.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass22 = wildcardClassItor20.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate14);
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1390");
        org.apache.commons.collections4.iterators.FilterListIterator<java.io.Serializable> serializableItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.io.Serializable>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor2.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor4 = wildcardClassItor2.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor2.getPredicate();
        serializableItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int7 = serializableItor0.previousIndex();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor4);
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1391");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        boolean boolean5 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor1.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor8 = wildcardClassItor1.getListIterator();
        boolean boolean9 = wildcardClassItor1.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor11.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        int int14 = wildcardClassItor12.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate17 = wildcardClassItor10.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        boolean boolean21 = wildcardClassItor19.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor22.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor23);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor25 = wildcardClassItor23.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor26 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor28 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor27.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor28);
        int int30 = wildcardClassItor28.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor28);
        wildcardClassItor26.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor31);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor33 = wildcardClassItor26.getListIterator();
        wildcardClassItor23.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        wildcardClassItor19.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor36 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        int int37 = wildcardClassItor26.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor38 = wildcardClassItor26.getListIterator();
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        int int40 = wildcardClassItor26.nextIndex();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor42 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor43 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor42.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor43);
        int int45 = wildcardClassItor43.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor46 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor43);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor47 = wildcardClassItor46.getListIterator();
        int int48 = wildcardClassItor46.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor49 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor50 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor49);
        int int51 = wildcardClassItor50.previousIndex();
        int int52 = wildcardClassItor50.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate53 = wildcardClassItor50.getPredicate();
        wildcardClassItor46.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor50);
        int int55 = wildcardClassItor46.previousIndex();
        int int56 = wildcardClassItor46.previousIndex();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor46);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass58 = wildcardClassItor1.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardPredicate6);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertNull(wildcardItor8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardItor25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1392");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        boolean boolean14 = wildcardClassItor13.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        int int16 = wildcardClassItor13.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor13.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1393");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = wildcardClassItor13.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int17 = wildcardClassItor0.previousIndex();
        java.lang.Class<?> wildcardClass18 = wildcardClassItor0.getClass();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate14);
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1394");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean5 = wildcardClassItor4.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor4.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor8 = wildcardClassItor4.getListIterator();
        int int9 = wildcardClassItor4.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor10 = wildcardClassItor4.getListIterator();
        java.lang.Class<?> wildcardClass11 = wildcardClassItor4.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertNotNull(wildcardItor8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1395");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = wildcardClassItor13.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int17 = wildcardClassItor13.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate14);
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1396");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        int int6 = wildcardClassItor1.previousIndex();
        int int7 = wildcardClassItor1.previousIndex();
        boolean boolean8 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardItor13);
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1397");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor6.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor9 = wildcardClassItor7.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor11.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        int int14 = wildcardClassItor12.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor17 = wildcardClassItor10.getListIterator();
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        boolean boolean19 = wildcardClassItor10.hasPrevious();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        boolean boolean21 = wildcardClassItor10.hasNext();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNull(wildcardItor9);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1398");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate9 = wildcardClassItor0.getPredicate();
        int int10 = wildcardClassItor0.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1399");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor7.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate9 = wildcardClassItor7.getPredicate();
        int int10 = wildcardClassItor7.previousIndex();
        int int11 = wildcardClassItor7.previousIndex();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor13.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1400");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        boolean boolean10 = wildcardClassItor9.hasNext();
        int int11 = wildcardClassItor9.previousIndex();
        boolean boolean12 = wildcardClassItor9.hasNext();
        int int13 = wildcardClassItor9.nextIndex();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        int int15 = wildcardClassItor9.nextIndex();
        boolean boolean16 = wildcardClassItor9.hasNext();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate17 = wildcardClassItor9.getPredicate();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate18 = wildcardClassItor9.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor19 = wildcardClassItor9.getListIterator();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(wildcardPredicate17);
        org.junit.Assert.assertNull(wildcardPredicate18);
        org.junit.Assert.assertNotNull(wildcardItor19);
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1401");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        int int1 = wildcardClassItor0.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor3 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor2.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor3);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor3.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int10 = wildcardClassItor8.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor6.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor6.getListIterator();
        wildcardClassItor3.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor6.getListIterator();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int17 = wildcardClassItor6.previousIndex();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor13);
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1402");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor3 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor3.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor3);
        boolean boolean6 = wildcardClassItor5.hasNext();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1403");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.GenericDeclaration> genericDeclarationItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.GenericDeclaration>();
        int int1 = genericDeclarationItor0.previousIndex();
        int int2 = genericDeclarationItor0.nextIndex();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1404");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        boolean boolean8 = wildcardClassItor5.hasPrevious();
        boolean boolean9 = wildcardClassItor5.hasPrevious();
        boolean boolean10 = wildcardClassItor5.hasNext();
        int int11 = wildcardClassItor5.previousIndex();
        int int12 = wildcardClassItor5.previousIndex();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1405");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        int int4 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate7 = wildcardClassItor1.getPredicate();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass8 = wildcardClassItor1.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNull(wildcardPredicate7);
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1406");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor7);
        int int9 = typeItor8.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor11.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        int int14 = wildcardClassItor12.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor17 = wildcardClassItor10.getListIterator();
        int int18 = wildcardClassItor10.previousIndex();
        boolean boolean19 = wildcardClassItor10.hasNext();
        int int20 = wildcardClassItor10.nextIndex();
        typeItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        boolean boolean22 = wildcardClassItor10.hasNext();
        boolean boolean23 = wildcardClassItor10.hasPrevious();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1407");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        int int4 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass7 = wildcardClassItor1.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(wildcardPredicate5);
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1408");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor2 = wildcardClassItor1.getListIterator();
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        boolean boolean19 = wildcardClassItor1.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor20 = wildcardClassItor1.getListIterator();
        org.junit.Assert.assertNotNull(wildcardItor2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItor20);
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1409");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        int int4 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate7 = wildcardClassItor1.getPredicate();
        boolean boolean8 = wildcardClassItor1.hasPrevious();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNull(wildcardPredicate7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1410");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate19 = wildcardClassItor8.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate21 = wildcardClassItor8.getPredicate();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass22 = wildcardClassItor8.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertNull(wildcardPredicate19);
        org.junit.Assert.assertNull(wildcardPredicate21);
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1411");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        int int5 = wildcardClassItor1.previousIndex();
        boolean boolean6 = wildcardClassItor1.hasNext();
        int int7 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate10 = wildcardClassItor9.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        boolean boolean12 = wildcardClassItor9.hasPrevious();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass14 = wildcardClassItor9.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1412");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor4 = wildcardClassItor1.getListIterator();
        int int5 = wildcardClassItor1.nextIndex();
        boolean boolean6 = wildcardClassItor1.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(wildcardItor4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1413");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int9 = wildcardClassItor8.previousIndex();
        int int10 = wildcardClassItor8.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor8.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor12 = wildcardClassItor8.getListIterator();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass14 = wildcardClassItor8.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNull(wildcardPredicate6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertNotNull(wildcardItor12);
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1414");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor6 = wildcardClassItor4.getListIterator();
        int int7 = wildcardClassItor4.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor9 = wildcardClassItor4.getListIterator();
        boolean boolean10 = wildcardClassItor4.hasPrevious();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNotNull(wildcardItor6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1415");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate1 = wildcardClassItor0.getPredicate();
        boolean boolean2 = wildcardClassItor0.hasNext();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate3 = wildcardClassItor0.getPredicate();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor0.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass6 = wildcardClassItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardPredicate1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(wildcardPredicate3);
        org.junit.Assert.assertNull(wildcardPredicate4);
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1416");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean5 = wildcardClassItor4.hasNext();
        int int6 = wildcardClassItor4.previousIndex();
        boolean boolean7 = wildcardClassItor4.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        boolean boolean16 = wildcardClassItor13.hasPrevious();
        boolean boolean17 = wildcardClassItor13.hasPrevious();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        boolean boolean19 = wildcardClassItor4.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass20 = wildcardClassItor4.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1417");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor4 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate7 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor9.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        int int16 = wildcardClassItor14.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        wildcardClassItor12.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor19 = wildcardClassItor12.getListIterator();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor22 = wildcardClassItor9.getListIterator();
        boolean boolean23 = wildcardClassItor9.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor25 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor26 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor25.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        int int28 = wildcardClassItor26.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor29 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        wildcardClassItor24.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor29);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor31 = wildcardClassItor24.getListIterator();
        int int32 = wildcardClassItor24.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor33 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor34 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor33.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor34);
        int int36 = wildcardClassItor34.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor37 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor34);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate38 = wildcardClassItor37.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor39 = wildcardClassItor37.getListIterator();
        wildcardClassItor24.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor37);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor41 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor37);
        int int42 = wildcardClassItor41.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor43 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor41);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor44 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor41);
        int int45 = wildcardClassItor44.nextIndex();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor44);
        int int47 = wildcardClassItor9.nextIndex();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertNull(wildcardItor4);
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNull(wildcardPredicate7);
        org.junit.Assert.assertNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor19);
        org.junit.Assert.assertNotNull(wildcardItor22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate38);
        org.junit.Assert.assertNotNull(wildcardItor39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1418");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>();
        boolean boolean1 = typeItor0.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor3 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor3.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        int int6 = wildcardClassItor4.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate8 = wildcardClassItor7.getPredicate();
        wildcardClassItor2.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor11.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        int int14 = wildcardClassItor12.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        boolean boolean16 = wildcardClassItor15.hasNext();
        wildcardClassItor2.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        typeItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        int int19 = typeItor0.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate20 = typeItor0.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor21.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        int int24 = wildcardClassItor22.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor25 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor26 = wildcardClassItor22.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor28 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        int int29 = wildcardClassItor28.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate30 = wildcardClassItor28.getPredicate();
        int int31 = wildcardClassItor28.previousIndex();
        int int32 = wildcardClassItor28.previousIndex();
        wildcardClassItor22.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor28);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor34 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        int int35 = wildcardClassItor22.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor36 = wildcardClassItor22.getListIterator();
        typeItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor22.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate8);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(wildcardItor26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(wildcardItor36);
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1419");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor4 = wildcardClassItor1.getListIterator();
        int int5 = wildcardClassItor1.nextIndex();
        boolean boolean6 = wildcardClassItor1.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        int int11 = wildcardClassItor9.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor14 = wildcardClassItor7.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor14);
        int int16 = typeItor15.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        int int21 = wildcardClassItor19.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        wildcardClassItor17.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor24 = wildcardClassItor17.getListIterator();
        int int25 = wildcardClassItor17.previousIndex();
        boolean boolean26 = wildcardClassItor17.hasNext();
        int int27 = wildcardClassItor17.nextIndex();
        typeItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        int int29 = wildcardClassItor17.nextIndex();
        int int30 = wildcardClassItor17.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor32 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor31);
        wildcardClassItor17.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor32);
        int int34 = wildcardClassItor17.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor35 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor36 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor35.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor36);
        boolean boolean38 = wildcardClassItor36.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor39 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor40 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor39.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor40);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor42 = wildcardClassItor40.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor43 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor44 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor45 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor44.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor45);
        int int47 = wildcardClassItor45.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor48 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor45);
        wildcardClassItor43.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor48);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor50 = wildcardClassItor43.getListIterator();
        wildcardClassItor40.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor43);
        wildcardClassItor36.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor43);
        int int53 = wildcardClassItor43.previousIndex();
        int int54 = wildcardClassItor43.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor55 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor43);
        wildcardClassItor17.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor43);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor43);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate58 = wildcardClassItor43.getPredicate();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(wildcardItor4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(wildcardItor42);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNull(wildcardPredicate58);
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1420");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int19 = wildcardClassItor8.previousIndex();
        int int20 = wildcardClassItor8.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor21 = wildcardClassItor8.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.io.Serializable> serializableItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.io.Serializable>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        boolean boolean23 = serializableItor22.hasPrevious();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate24 = serializableItor22.getPredicate();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate25 = serializableItor22.getPredicate();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(wildcardItor21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(wildcardPredicate24);
        org.junit.Assert.assertNull(wildcardPredicate25);
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1421");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        int int7 = wildcardClassItor4.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor8 = wildcardClassItor4.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        int int17 = wildcardClassItor15.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        boolean boolean19 = wildcardClassItor18.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor21.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        int int24 = wildcardClassItor22.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor25 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        boolean boolean26 = wildcardClassItor25.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        int int28 = wildcardClassItor25.previousIndex();
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor30 = wildcardClassItor25.getListIterator();
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor33 = wildcardClassItor25.getListIterator();
        int int34 = wildcardClassItor25.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor35 = wildcardClassItor25.getListIterator();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(wildcardItor8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor30);
        org.junit.Assert.assertNotNull(wildcardItor33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor35);
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1422");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor3 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int4 = wildcardClassItor3.nextIndex();
        boolean boolean5 = wildcardClassItor3.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor6 = wildcardClassItor3.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass7 = wildcardClassItor3.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItor6);
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1423");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor4.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate7 = wildcardClassItor6.getPredicate();
        boolean boolean8 = wildcardClassItor6.hasNext();
        boolean boolean9 = wildcardClassItor6.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate11 = wildcardClassItor10.getPredicate();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor5);
        org.junit.Assert.assertNull(wildcardPredicate7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(wildcardPredicate11);
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1424");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        int int7 = wildcardClassItor5.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int10 = wildcardClassItor1.previousIndex();
        boolean boolean11 = wildcardClassItor1.hasNext();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1425");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        boolean boolean18 = wildcardClassItor8.hasPrevious();
        int int19 = wildcardClassItor8.previousIndex();
        int int20 = wildcardClassItor8.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor8.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1426");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean5 = wildcardClassItor4.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        int int7 = wildcardClassItor4.previousIndex();
        boolean boolean8 = wildcardClassItor4.hasNext();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor9 = wildcardClassItor4.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor9);
        int int11 = wildcardClassItor10.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate13 = wildcardClassItor10.getPredicate();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass14 = wildcardClassItor10.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardItor9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(wildcardPredicate13);
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1427");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        int int4 = wildcardClassItor1.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        int int6 = wildcardClassItor1.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass7 = wildcardClassItor1.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1428");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        boolean boolean6 = wildcardClassItor1.hasNext();
        boolean boolean7 = wildcardClassItor1.hasNext();
        int int8 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        int int13 = wildcardClassItor11.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor16 = wildcardClassItor9.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor16);
        int int18 = typeItor17.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor20.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        int int23 = wildcardClassItor21.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        wildcardClassItor19.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor26 = wildcardClassItor19.getListIterator();
        int int27 = wildcardClassItor19.previousIndex();
        boolean boolean28 = wildcardClassItor19.hasNext();
        int int29 = wildcardClassItor19.nextIndex();
        typeItor17.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        int int31 = wildcardClassItor19.nextIndex();
        int int32 = wildcardClassItor19.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor33 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor34 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor33);
        wildcardClassItor19.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor34);
        int int36 = wildcardClassItor19.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor37 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor38 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor37.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor38);
        boolean boolean40 = wildcardClassItor38.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor41 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor42 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor41.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor42);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor44 = wildcardClassItor42.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor45 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor46 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor47 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor46.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor47);
        int int49 = wildcardClassItor47.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor50 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor47);
        wildcardClassItor45.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor50);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor52 = wildcardClassItor45.getListIterator();
        wildcardClassItor42.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor45);
        wildcardClassItor38.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor45);
        int int55 = wildcardClassItor45.previousIndex();
        int int56 = wildcardClassItor45.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor57 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor45);
        wildcardClassItor19.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor45);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass60 = wildcardClassItor19.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(wildcardItor44);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1429");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate1 = wildcardClassItor0.getPredicate();
        boolean boolean2 = wildcardClassItor0.hasNext();
        java.util.ListIterator<java.lang.Class<?>> wildcardClassItor3 = null;
        wildcardClassItor0.setListIterator(wildcardClassItor3);
        int int5 = wildcardClassItor0.previousIndex();
        int int6 = wildcardClassItor0.nextIndex();
        int int7 = wildcardClassItor0.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass8 = wildcardClassItor0.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardPredicate1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1430");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        int int4 = wildcardClassItor1.nextIndex();
        int int5 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int7 = wildcardClassItor6.previousIndex();
        int int8 = wildcardClassItor6.nextIndex();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1431");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean5 = wildcardClassItor4.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        int int7 = wildcardClassItor4.previousIndex();
        boolean boolean8 = wildcardClassItor4.hasNext();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate9 = wildcardClassItor4.getPredicate();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardPredicate9);
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1432");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = wildcardClassItor13.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        boolean boolean17 = wildcardClassItor0.hasNext();
        boolean boolean18 = wildcardClassItor0.hasNext();
        int int19 = wildcardClassItor0.nextIndex();
        boolean boolean20 = wildcardClassItor0.hasNext();
        java.lang.Class<?> wildcardClass21 = wildcardClassItor0.getClass();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate14);
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1433");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        int int18 = wildcardClassItor16.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor21 = wildcardClassItor14.getListIterator();
        int int22 = wildcardClassItor14.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor23.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        int int26 = wildcardClassItor24.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate28 = wildcardClassItor27.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor29 = wildcardClassItor27.getListIterator();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        int int32 = wildcardClassItor31.nextIndex();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor31);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor34 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor35 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor36 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor35.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor36);
        int int38 = wildcardClassItor36.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor39 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor36);
        wildcardClassItor34.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor39);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor41 = wildcardClassItor34.getListIterator();
        int int42 = wildcardClassItor34.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate43 = wildcardClassItor34.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor44 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor34);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor45 = wildcardClassItor44.getListIterator();
        wildcardClassItor31.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor44);
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor44.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertNotNull(wildcardItor13);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate28);
        org.junit.Assert.assertNotNull(wildcardItor29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate43);
        org.junit.Assert.assertNotNull(wildcardItor45);
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1434");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor7);
        int int9 = typeItor8.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor11.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        int int14 = wildcardClassItor12.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor17 = wildcardClassItor10.getListIterator();
        int int18 = wildcardClassItor10.previousIndex();
        boolean boolean19 = wildcardClassItor10.hasNext();
        int int20 = wildcardClassItor10.nextIndex();
        typeItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int22 = wildcardClassItor10.nextIndex();
        int int23 = wildcardClassItor10.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor25 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        boolean boolean27 = wildcardClassItor10.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor28 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor29 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor30 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor29.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor30);
        int int32 = wildcardClassItor30.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor33 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor30);
        wildcardClassItor28.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor33);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor35 = wildcardClassItor28.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor36 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor35);
        int int37 = typeItor36.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor38 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor39 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor40 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor39.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor40);
        int int42 = wildcardClassItor40.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor43 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor40);
        wildcardClassItor38.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor43);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor45 = wildcardClassItor38.getListIterator();
        int int46 = wildcardClassItor38.previousIndex();
        boolean boolean47 = wildcardClassItor38.hasNext();
        int int48 = wildcardClassItor38.nextIndex();
        typeItor36.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor38);
        int int50 = wildcardClassItor38.nextIndex();
        int int51 = wildcardClassItor38.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor52 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor53 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor52);
        wildcardClassItor38.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor53);
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor38);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass56 = wildcardClassItor38.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1435");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        boolean boolean10 = wildcardClassItor9.hasNext();
        int int11 = wildcardClassItor9.previousIndex();
        boolean boolean12 = wildcardClassItor9.hasNext();
        int int13 = wildcardClassItor9.nextIndex();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        int int15 = wildcardClassItor9.nextIndex();
        boolean boolean16 = wildcardClassItor9.hasNext();
        boolean boolean17 = wildcardClassItor9.hasPrevious();
        java.lang.Class<?> wildcardClass18 = wildcardClassItor9.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1436");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate1 = typeItor0.getPredicate();
        int int2 = typeItor0.nextIndex();
        boolean boolean3 = typeItor0.hasPrevious();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = typeItor0.getPredicate();
        org.junit.Assert.assertNull(wildcardPredicate1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardPredicate4);
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1437");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate9 = wildcardClassItor0.getPredicate();
        int int10 = wildcardClassItor0.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor12.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        boolean boolean15 = wildcardClassItor13.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor16.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor19 = wildcardClassItor17.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor21.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        int int24 = wildcardClassItor22.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor25 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        wildcardClassItor20.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor25);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor27 = wildcardClassItor20.getListIterator();
        wildcardClassItor17.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor30 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate31 = wildcardClassItor20.getPredicate();
        boolean boolean32 = wildcardClassItor20.hasNext();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate33 = wildcardClassItor20.getPredicate();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass35 = wildcardClassItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardItor19);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor27);
        org.junit.Assert.assertNull(wildcardPredicate31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(wildcardPredicate33);
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1438");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        int int4 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        int int7 = wildcardClassItor6.previousIndex();
        int int8 = wildcardClassItor6.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor9 = wildcardClassItor6.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor10 = wildcardClassItor6.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor10);
        int int12 = wildcardClassItor1.previousIndex();
        boolean boolean13 = wildcardClassItor1.hasPrevious();
        int int14 = wildcardClassItor1.nextIndex();
        int int15 = wildcardClassItor1.nextIndex();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(wildcardItor9);
        org.junit.Assert.assertNotNull(wildcardItor10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1439");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        int int6 = wildcardClassItor1.previousIndex();
        int int7 = wildcardClassItor1.previousIndex();
        boolean boolean8 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        int int14 = wildcardClassItor13.nextIndex();
        boolean boolean15 = wildcardClassItor13.hasPrevious();
        int int16 = wildcardClassItor13.nextIndex();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int18 = wildcardClassItor13.previousIndex();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1440");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass4 = wildcardClassItor1.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1441");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor0.getListIterator();
        boolean boolean4 = wildcardClassItor0.hasPrevious();
        int int5 = wildcardClassItor0.previousIndex();
        int int6 = wildcardClassItor0.previousIndex();
        org.junit.Assert.assertNotNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1442");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass5 = wildcardClassItor4.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1443");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        java.util.ListIterator<java.lang.Class<?>> wildcardClassItor13 = null;
        wildcardClassItor1.setListIterator(wildcardClassItor13);
        boolean boolean15 = wildcardClassItor1.hasNext();
        int int16 = wildcardClassItor1.previousIndex();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1444");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor4.getListIterator();
        int int6 = wildcardClassItor4.nextIndex();
        int int7 = wildcardClassItor4.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate8 = wildcardClassItor4.getPredicate();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(wildcardPredicate8);
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1445");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = wildcardClassItor13.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int18 = wildcardClassItor17.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        int int20 = wildcardClassItor17.previousIndex();
        int int21 = wildcardClassItor17.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate22 = wildcardClassItor17.getPredicate();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass23 = wildcardClassItor17.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate14);
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(wildcardPredicate22);
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1446");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor3 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        boolean boolean4 = wildcardClassItor3.hasPrevious();
        boolean boolean5 = wildcardClassItor3.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor3.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1447");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int19 = wildcardClassItor18.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate20 = wildcardClassItor18.getPredicate();
        boolean boolean21 = wildcardClassItor18.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        int int23 = wildcardClassItor18.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor18.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1448");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor2 = wildcardClassItor1.getListIterator();
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.junit.Assert.assertNotNull(wildcardItor2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1449");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate3 = wildcardClassItor1.getPredicate();
        int int4 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor5.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1450");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean5 = wildcardClassItor4.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        boolean boolean7 = wildcardClassItor6.hasPrevious();
        int int8 = wildcardClassItor6.previousIndex();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1451");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        boolean boolean13 = wildcardClassItor4.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        int int15 = wildcardClassItor4.previousIndex();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1452");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = annotatedElementItor4.getPredicate();
        int int6 = annotatedElementItor4.previousIndex();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1453");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        boolean boolean7 = wildcardClassItor6.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass8 = wildcardClassItor6.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1454");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean5 = wildcardClassItor4.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass7 = wildcardClassItor4.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1455");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        int int11 = wildcardClassItor9.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor14 = wildcardClassItor7.getListIterator();
        boolean boolean15 = wildcardClassItor7.hasPrevious();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int17 = wildcardClassItor7.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor18 = wildcardClassItor7.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate20 = wildcardClassItor19.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        int int23 = wildcardClassItor7.nextIndex();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(wildcardItor18);
        org.junit.Assert.assertNull(wildcardPredicate20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1456");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor5.getPredicate();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        boolean boolean14 = wildcardClassItor13.hasNext();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate16 = wildcardClassItor0.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate6);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(wildcardPredicate16);
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1457");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        int int4 = wildcardClassItor1.nextIndex();
        boolean boolean5 = wildcardClassItor1.hasNext();
        boolean boolean6 = wildcardClassItor1.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass7 = wildcardClassItor1.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1458");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor4 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        boolean boolean8 = wildcardClassItor6.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor12 = wildcardClassItor10.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        int int17 = wildcardClassItor15.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor20 = wildcardClassItor13.getListIterator();
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        wildcardClassItor6.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int24 = wildcardClassItor13.previousIndex();
        int int25 = wildcardClassItor13.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor26 = wildcardClassItor13.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int28 = wildcardClassItor13.nextIndex();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertNull(wildcardItor4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardItor12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(wildcardItor26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1459");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        boolean boolean9 = wildcardClassItor0.hasNext();
        int int10 = wildcardClassItor0.nextIndex();
        boolean boolean11 = wildcardClassItor0.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        boolean boolean13 = wildcardClassItor0.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor14 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate15 = wildcardClassItor0.getPredicate();
        int int16 = wildcardClassItor0.previousIndex();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardItor14);
        org.junit.Assert.assertNull(wildcardPredicate15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1460");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        boolean boolean13 = wildcardClassItor4.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        int int15 = wildcardClassItor14.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass16 = wildcardClassItor14.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1461");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        int int4 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean7 = wildcardClassItor6.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        java.lang.Class<?> wildcardClass10 = wildcardClassItor9.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1462");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor6 = wildcardClassItor4.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor4.getListIterator();
        boolean boolean8 = wildcardClassItor4.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        boolean boolean12 = wildcardClassItor10.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor16 = wildcardClassItor14.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        int int21 = wildcardClassItor19.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        wildcardClassItor17.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor24 = wildcardClassItor17.getListIterator();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate28 = wildcardClassItor27.getPredicate();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor30 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor32 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor31.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor32);
        int int34 = wildcardClassItor32.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor35 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor32);
        wildcardClassItor30.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor35);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor37 = wildcardClassItor30.getListIterator();
        int int38 = wildcardClassItor30.previousIndex();
        boolean boolean39 = wildcardClassItor30.hasNext();
        int int40 = wildcardClassItor30.nextIndex();
        boolean boolean41 = wildcardClassItor30.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor42 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor30);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor43 = wildcardClassItor30.getListIterator();
        int int44 = wildcardClassItor30.previousIndex();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor30);
        java.lang.Class<?> wildcardClass46 = wildcardClassItor30.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNotNull(wildcardItor6);
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(wildcardItor16);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor24);
        org.junit.Assert.assertNull(wildcardPredicate28);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardItor43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1463");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int18 = wildcardClassItor8.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor8.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1464");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        int int7 = wildcardClassItor5.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        int int13 = wildcardClassItor11.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        boolean boolean15 = wildcardClassItor14.hasNext();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass17 = wildcardClassItor14.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1465");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate2 = wildcardClassItor1.getPredicate();
        int int3 = wildcardClassItor1.nextIndex();
        boolean boolean4 = wildcardClassItor1.hasNext();
        int int5 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.lang.Class<?> wildcardClass7 = wildcardClassItor1.getClass();
        org.junit.Assert.assertNull(wildcardPredicate2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1466");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int9 = wildcardClassItor8.previousIndex();
        int int10 = wildcardClassItor8.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor8.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor12 = wildcardClassItor8.getListIterator();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        boolean boolean14 = wildcardClassItor4.hasPrevious();
        int int15 = wildcardClassItor4.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate16 = wildcardClassItor4.getPredicate();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNull(wildcardPredicate6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertNotNull(wildcardItor12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(wildcardPredicate16);
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1467");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = wildcardClassItor13.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        boolean boolean17 = wildcardClassItor0.hasNext();
        boolean boolean18 = wildcardClassItor0.hasNext();
        int int19 = wildcardClassItor0.nextIndex();
        int int20 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate21 = wildcardClassItor0.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor22 = wildcardClassItor0.getListIterator();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate14);
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate21);
        org.junit.Assert.assertNotNull(wildcardItor22);
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1468");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int10 = wildcardClassItor8.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor6.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor6.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor13);
        int int15 = typeItor14.nextIndex();
        int int16 = typeItor14.previousIndex();
        boolean boolean17 = typeItor14.hasNext();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate18 = typeItor14.getPredicate();
        boolean boolean19 = typeItor14.hasPrevious();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate20 = typeItor14.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor21.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor24 = wildcardClassItor21.getListIterator();
        typeItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor24);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor24);
        java.lang.Class<?> wildcardClass27 = wildcardClassItor4.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(wildcardPredicate18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(wildcardPredicate20);
        org.junit.Assert.assertNotNull(wildcardItor24);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1469");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean5 = wildcardClassItor4.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        int int7 = wildcardClassItor4.previousIndex();
        int int8 = wildcardClassItor4.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor9 = wildcardClassItor4.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor9);
        boolean boolean11 = wildcardClassItor10.hasNext();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(wildcardItor9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1470");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.CharSequence> charSequenceItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.CharSequence>();
        boolean boolean1 = charSequenceItor0.hasNext();
        int int2 = charSequenceItor0.previousIndex();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1471");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        int int4 = wildcardClassItor1.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor1.getPredicate();
        int int7 = wildcardClassItor1.nextIndex();
        int int8 = wildcardClassItor1.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass9 = wildcardClassItor1.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(wildcardItor5);
        org.junit.Assert.assertNull(wildcardPredicate6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1472");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        boolean boolean13 = wildcardClassItor4.hasPrevious();
        int int14 = wildcardClassItor4.nextIndex();
        int int15 = wildcardClassItor4.nextIndex();
        boolean boolean16 = wildcardClassItor4.hasNext();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor17 = wildcardClassItor4.getListIterator();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardItor17);
    }

    @Test
    public void test1473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1473");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        boolean boolean5 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate6 = wildcardClassItor1.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor1.getListIterator();
        int int8 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.GenericDeclaration> genericDeclarationItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.GenericDeclaration>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.lang.Class<?> wildcardClass10 = genericDeclarationItor9.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardPredicate6);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1474");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>();
        boolean boolean1 = typeItor0.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor3 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor3.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        int int6 = wildcardClassItor4.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate8 = wildcardClassItor7.getPredicate();
        wildcardClassItor2.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor11.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        int int14 = wildcardClassItor12.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        boolean boolean16 = wildcardClassItor15.hasNext();
        wildcardClassItor2.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        typeItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        int int19 = typeItor0.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate20 = typeItor0.getPredicate();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate8);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate20);
    }

    @Test
    public void test1475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1475");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor6 = wildcardClassItor4.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor4.getListIterator();
        boolean boolean8 = wildcardClassItor4.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        boolean boolean12 = wildcardClassItor10.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor16 = wildcardClassItor14.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor19 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        int int21 = wildcardClassItor19.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor19);
        wildcardClassItor17.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor22);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor24 = wildcardClassItor17.getListIterator();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate28 = wildcardClassItor27.getPredicate();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor30 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor32 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor31.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor32);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor34 = wildcardClassItor32.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor35 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor36 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor37 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor36.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor37);
        int int39 = wildcardClassItor37.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor40 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor37);
        wildcardClassItor35.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor40);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor42 = wildcardClassItor35.getListIterator();
        wildcardClassItor32.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor35);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor44 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor35);
        boolean boolean45 = wildcardClassItor44.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor46 = wildcardClassItor44.getListIterator();
        wildcardClassItor27.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor44);
        int int48 = wildcardClassItor44.previousIndex();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNotNull(wildcardItor6);
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(wildcardItor16);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor24);
        org.junit.Assert.assertNull(wildcardPredicate28);
        org.junit.Assert.assertNull(wildcardItor34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardItor46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
    }

    @Test
    public void test1476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1476");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        boolean boolean7 = wildcardClassItor5.hasNext();
        int int8 = wildcardClassItor5.previousIndex();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test1477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1477");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor1.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor6 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        int int8 = wildcardClassItor5.nextIndex();
        boolean boolean9 = wildcardClassItor5.hasNext();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertNotNull(wildcardItor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1478");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor5 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<java.lang.Class<?>> wildcardClassItor6 = null;
        wildcardClassItor1.setListIterator(wildcardClassItor6);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass8 = wildcardClassItor1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardItor5);
    }

    @Test
    public void test1479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1479");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate1 = wildcardClassItor0.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor2 = wildcardClassItor0.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor3 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        int int7 = wildcardClassItor5.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        wildcardClassItor3.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor10 = wildcardClassItor3.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type> typeItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.Type>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor10);
        int int12 = typeItor11.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        int int17 = wildcardClassItor15.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor20 = wildcardClassItor13.getListIterator();
        int int21 = wildcardClassItor13.previousIndex();
        boolean boolean22 = wildcardClassItor13.hasNext();
        int int23 = wildcardClassItor13.nextIndex();
        typeItor11.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int25 = wildcardClassItor13.nextIndex();
        int int26 = wildcardClassItor13.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor27 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor28 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor27);
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor28);
        int int30 = wildcardClassItor13.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor32 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor31.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor32);
        boolean boolean34 = wildcardClassItor32.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor35 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor36 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor35.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor36);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor38 = wildcardClassItor36.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor39 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor40 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor41 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor40.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor41);
        int int43 = wildcardClassItor41.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor44 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor41);
        wildcardClassItor39.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor44);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor46 = wildcardClassItor39.getListIterator();
        wildcardClassItor36.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor39);
        wildcardClassItor32.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor39);
        int int49 = wildcardClassItor39.previousIndex();
        int int50 = wildcardClassItor39.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor51 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor39);
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor39);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int54 = wildcardClassItor0.nextIndex();
        org.junit.Assert.assertNull(wildcardPredicate1);
        org.junit.Assert.assertNull(wildcardItor2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(wildcardItor38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
    }

    @Test
    public void test1480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1480");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        int int4 = wildcardClassItor1.nextIndex();
        int int5 = wildcardClassItor1.previousIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor6 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int8 = wildcardClassItor1.nextIndex();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(wildcardItor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test1481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1481");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor4 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        boolean boolean8 = wildcardClassItor6.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor12 = wildcardClassItor10.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        int int17 = wildcardClassItor15.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor20 = wildcardClassItor13.getListIterator();
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        wildcardClassItor6.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int24 = wildcardClassItor13.previousIndex();
        int int25 = wildcardClassItor13.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor26 = wildcardClassItor13.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor28 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        int int29 = wildcardClassItor28.nextIndex();
        boolean boolean30 = wildcardClassItor28.hasPrevious();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor28);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor32 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor28);
        int int33 = wildcardClassItor32.nextIndex();
        int int34 = wildcardClassItor32.previousIndex();
        int int35 = wildcardClassItor32.previousIndex();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertNull(wildcardItor4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardItor12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(wildcardItor26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
    }

    @Test
    public void test1482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1482");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean5 = wildcardClassItor4.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass7 = wildcardClassItor4.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test1483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1483");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean5 = wildcardClassItor4.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor7.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int10 = wildcardClassItor8.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        boolean boolean12 = wildcardClassItor11.hasNext();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        int int14 = wildcardClassItor11.previousIndex();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor11);
        boolean boolean16 = wildcardClassItor11.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor11.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1484");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        int int4 = wildcardClassItor1.nextIndex();
        int int5 = wildcardClassItor1.previousIndex();
        boolean boolean6 = wildcardClassItor1.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate8 = wildcardClassItor1.getPredicate();
        int int9 = wildcardClassItor1.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass10 = wildcardClassItor1.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertNull(wildcardPredicate8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test1485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1485");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor2 = wildcardClassItor1.getListIterator();
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNotNull(wildcardItor2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
    }

    @Test
    public void test1486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1486");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate9 = wildcardClassItor0.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor11 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor11.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor14 = wildcardClassItor12.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor15 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor16.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        int int19 = wildcardClassItor17.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor20 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        wildcardClassItor15.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor20);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor22 = wildcardClassItor15.getListIterator();
        wildcardClassItor12.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor24 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor15);
        boolean boolean25 = wildcardClassItor24.hasPrevious();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor26 = wildcardClassItor24.getListIterator();
        int int27 = wildcardClassItor24.nextIndex();
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor24);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate29 = wildcardClassItor24.getPredicate();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate9);
        org.junit.Assert.assertNull(wildcardItor14);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardItor26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNull(wildcardPredicate29);
    }

    @Test
    public void test1487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1487");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        boolean boolean9 = wildcardClassItor0.hasNext();
        int int10 = wildcardClassItor0.nextIndex();
        boolean boolean11 = wildcardClassItor0.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor13 = wildcardClassItor0.getListIterator();
        int int14 = wildcardClassItor0.previousIndex();
        boolean boolean15 = wildcardClassItor0.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass16 = wildcardClassItor0.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItor13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1488");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean5 = wildcardClassItor4.hasNext();
        int int6 = wildcardClassItor4.previousIndex();
        int int7 = wildcardClassItor4.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        boolean boolean11 = wildcardClassItor9.hasPrevious();
        int int12 = wildcardClassItor9.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int15 = wildcardClassItor14.previousIndex();
        int int16 = wildcardClassItor14.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor17 = wildcardClassItor14.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor18 = wildcardClassItor14.getListIterator();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor18);
        int int20 = wildcardClassItor9.previousIndex();
        boolean boolean21 = wildcardClassItor9.hasPrevious();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        boolean boolean23 = wildcardClassItor9.hasNext();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate24 = wildcardClassItor9.getPredicate();
        boolean boolean25 = wildcardClassItor9.hasPrevious();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(wildcardItor17);
        org.junit.Assert.assertNotNull(wildcardItor18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(wildcardPredicate24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test1489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1489");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor6 = wildcardClassItor4.getListIterator();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor4.getListIterator();
        boolean boolean8 = wildcardClassItor4.hasPrevious();
        boolean boolean9 = wildcardClassItor4.hasPrevious();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate10 = wildcardClassItor4.getPredicate();
        int int11 = wildcardClassItor4.previousIndex();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertNotNull(wildcardItor6);
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(wildcardPredicate10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test1490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1490");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        int int4 = wildcardClassItor2.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor2);
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor0.getListIterator();
        int int8 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate14 = wildcardClassItor13.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor13.getListIterator();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        int int17 = wildcardClassItor13.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        boolean boolean19 = wildcardClassItor18.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            wildcardClassItor18.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: FilterListIterator.remove() is not supported.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate14);
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1491");
        java.util.ListIterator<java.lang.Class<?>> wildcardClassItor0 = null;
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>(wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass3 = wildcardClassItor1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
    }

    @Test
    public void test1492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1492");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        boolean boolean13 = wildcardClassItor4.hasPrevious();
        int int14 = wildcardClassItor4.nextIndex();
        int int15 = wildcardClassItor4.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor16 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate17 = wildcardClassItor16.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor18 = wildcardClassItor16.getListIterator();
        int int19 = wildcardClassItor16.previousIndex();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor16);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate21 = wildcardClassItor4.getPredicate();
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(wildcardPredicate17);
        org.junit.Assert.assertNull(wildcardItor18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate21);
    }

    @Test
    public void test1493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1493");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor0.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor3 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate4 = wildcardClassItor3.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor3);
        int int6 = wildcardClassItor3.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass7 = wildcardClassItor3.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }

    @Test
    public void test1494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1494");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor3 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        int int8 = wildcardClassItor6.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor6);
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor9);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor4.getListIterator();
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        boolean boolean16 = wildcardClassItor14.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor17.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor18);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor20 = wildcardClassItor18.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor21 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor22.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor23);
        int int25 = wildcardClassItor23.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor26 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor23);
        wildcardClassItor21.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor26);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor28 = wildcardClassItor21.getListIterator();
        wildcardClassItor18.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        wildcardClassItor14.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor31 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor21);
        int int32 = wildcardClassItor21.previousIndex();
        int int33 = wildcardClassItor21.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor34 = wildcardClassItor21.getListIterator();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardItor34);
        boolean boolean36 = wildcardClassItor4.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass37 = wildcardClassItor4.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertNull(wildcardItor3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(wildcardItor20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(wildcardItor34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test1495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1495");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        int int3 = wildcardClassItor1.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor4 = wildcardClassItor1.getListIterator();
        int int5 = wildcardClassItor1.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass6 = wildcardClassItor1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
            /* And violated CMM Protocol confirms this too: 
			"Constructs a new <code>FilterListIterator</code> that will not function until {@link #setListIterator(ListIterator) setListIterator} and {@link #setPredicate(Predicate) setPredicate} are invoked. "*/
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(wildcardItor4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test1496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1496");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        int int3 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate5 = wildcardClassItor4.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        int int7 = wildcardClassItor4.nextIndex();
        int int8 = wildcardClassItor4.previousIndex();
        int int9 = wildcardClassItor4.nextIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor4);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor11 = wildcardClassItor10.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardItor11);
        java.lang.Class<?> wildcardClass13 = wildcardItor11.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardItor11);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1497");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor0.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        boolean boolean3 = wildcardClassItor1.hasPrevious();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor4 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor4.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor5);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor7 = wildcardClassItor5.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor8 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor9 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor9.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        int int12 = wildcardClassItor10.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        wildcardClassItor8.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor13);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor15 = wildcardClassItor8.getListIterator();
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor18 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        int int19 = wildcardClassItor8.previousIndex();
        int int20 = wildcardClassItor8.nextIndex();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor21 = wildcardClassItor8.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor22 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor8);
        boolean boolean23 = wildcardClassItor8.hasNext();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor24 = wildcardClassItor8.getListIterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardItor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(wildcardItor21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItor24);
    }

    @Test
    public void test1498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1498");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int2 = wildcardClassItor1.previousIndex();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate3 = wildcardClassItor1.getPredicate();
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor4 = wildcardClassItor1.getListIterator();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor5 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor6 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor7 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor6.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        int int9 = wildcardClassItor7.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor10 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor7);
        wildcardClassItor5.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor12 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor13 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor14 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        wildcardClassItor13.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        int int16 = wildcardClassItor14.previousIndex();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor17 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor14);
        wildcardClassItor12.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor17);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor19 = wildcardClassItor12.getListIterator();
        boolean boolean20 = wildcardClassItor12.hasPrevious();
        wildcardClassItor10.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor12);
        wildcardClassItor1.setListIterator((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor10);
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor23 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(wildcardPredicate3);
        org.junit.Assert.assertNotNull(wildcardItor4);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(wildcardItor19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1499");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.Predicate<? super java.lang.Class<?>> wildcardPredicate1 = wildcardClassItor0.getPredicate();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor2 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.reflect.AnnotatedElement>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        int int3 = wildcardClassItor0.previousIndex();
        org.junit.Assert.assertNull(wildcardPredicate1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test1500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1500");
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>();
        org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>> wildcardClassItor1 = new org.apache.commons.collections4.iterators.FilterListIterator<java.lang.Class<?>>((java.util.ListIterator<java.lang.Class<?>>) wildcardClassItor0);
        java.util.ListIterator<? extends java.lang.Class<?>> wildcardItor2 = wildcardClassItor1.getListIterator();
        java.lang.Class<?> wildcardClass3 = wildcardClassItor1.getClass();
        org.junit.Assert.assertNotNull(wildcardItor2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }
}

