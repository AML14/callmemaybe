[
  {
    "signature": "java.util.zip.ZipFile(java.lang.String name)",
    "name": "java.util.zip.ZipFile",
    "containingClass": {
      "qualifiedName": "java.util.zip.ZipFile",
      "name": "ZipFile",
      "isArray": false
    },
    "targetClass": "java.util.zip.ZipFile",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "name"
      }
    ],
    "protocol": {
      "member": "java.util.zip.ZipFile(java.lang.String name)",
      "comment": "Opens a zip file for reading. First, if there is a security manager, its checkRead method is called with the name argument as its argument to ensure the read is allowed. The UTF-8 javamethod_0method_1method_2 charset is used to decode the entry names and comments.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "java.util.zip.ZipFile(java.io.File file, int mode)",
    "name": "java.util.zip.ZipFile",
    "containingClass": {
      "qualifiedName": "java.util.zip.ZipFile",
      "name": "ZipFile",
      "isArray": false
    },
    "targetClass": "java.util.zip.ZipFile",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.File",
          "name": "File",
          "isArray": false
        },
        "name": "file"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "mode"
      }
    ],
    "protocol": {
      "member": "java.util.zip.ZipFile(java.io.File file, int mode)",
      "comment": "Opens a new ZipFile to read from the specified File object in the specified mode. The mode argument must be either OPEN_READ or OPEN_READ | OPEN_DELETE. First, if there is a security manager, its checkRead method is called with the name argument as its argument to ensure the read is allowed. The UTF-8 javamethod_0method_1method_2 charset is used to decode the entry names and comments",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "java.util.zip.ZipFile(java.io.File file)",
    "name": "java.util.zip.ZipFile",
    "containingClass": {
      "qualifiedName": "java.util.zip.ZipFile",
      "name": "ZipFile",
      "isArray": false
    },
    "targetClass": "java.util.zip.ZipFile",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.File",
          "name": "File",
          "isArray": false
        },
        "name": "file"
      }
    ],
    "protocol": {
      "member": "java.util.zip.ZipFile(java.io.File file)",
      "comment": "Opens a ZIP file for reading given the specified File object. The UTF-8 javamethod_0method_1method_2 charset is used to decode the entry names and comments.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "java.util.zip.ZipFile(java.io.File file, int mode, java.nio.charset.Charset charset)",
    "name": "java.util.zip.ZipFile",
    "containingClass": {
      "qualifiedName": "java.util.zip.ZipFile",
      "name": "ZipFile",
      "isArray": false
    },
    "targetClass": "java.util.zip.ZipFile",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.File",
          "name": "File",
          "isArray": false
        },
        "name": "file"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "mode"
      },
      {
        "type": {
          "qualifiedName": "java.nio.charset.Charset",
          "name": "Charset",
          "isArray": false
        },
        "name": "charset"
      }
    ],
    "protocol": {
      "member": "java.util.zip.ZipFile(java.io.File file, int mode, java.nio.charset.Charset charset)",
      "comment": "Opens a new ZipFile to read from the specified File object in the specified mode. The mode argument must be either OPEN_READ or OPEN_READ | OPEN_DELETE. First, if there is a security manager, its checkRead method is called with the name argument as its argument to ensure the read is allowed.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "java.util.zip.ZipFile(java.lang.String name, java.nio.charset.Charset charset)",
    "name": "java.util.zip.ZipFile",
    "containingClass": {
      "qualifiedName": "java.util.zip.ZipFile",
      "name": "ZipFile",
      "isArray": false
    },
    "targetClass": "java.util.zip.ZipFile",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "name"
      },
      {
        "type": {
          "qualifiedName": "java.nio.charset.Charset",
          "name": "Charset",
          "isArray": false
        },
        "name": "charset"
      }
    ],
    "protocol": {
      "member": "java.util.zip.ZipFile(java.lang.String name, java.nio.charset.Charset charset)",
      "comment": "Opens a zip file for reading. First, if there is a security manager, its checkRead method is called with the name argument as its argument to ensure the read is allowed.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "java.util.zip.ZipFile(java.io.File file, java.nio.charset.Charset charset)",
    "name": "java.util.zip.ZipFile",
    "containingClass": {
      "qualifiedName": "java.util.zip.ZipFile",
      "name": "ZipFile",
      "isArray": false
    },
    "targetClass": "java.util.zip.ZipFile",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.File",
          "name": "File",
          "isArray": false
        },
        "name": "file"
      },
      {
        "type": {
          "qualifiedName": "java.nio.charset.Charset",
          "name": "Charset",
          "isArray": false
        },
        "name": "charset"
      }
    ],
    "protocol": {
      "member": "java.util.zip.ZipFile(java.io.File file, java.nio.charset.Charset charset)",
      "comment": "Opens a ZIP file for reading given the specified File object.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getComment()",
    "name": "getComment",
    "containingClass": {
      "qualifiedName": "java.util.zip.ZipFile",
      "name": "ZipFile",
      "isArray": false
    },
    "targetClass": "java.util.zip.ZipFile",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getComment()",
      "comment": "Returns the zip file comment, or null if none.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getEntry(java.lang.String name)",
    "name": "getEntry",
    "containingClass": {
      "qualifiedName": "java.util.zip.ZipFile",
      "name": "ZipFile",
      "isArray": false
    },
    "targetClass": "java.util.zip.ZipFile",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.zip.ZipEntry",
      "name": "java.util.zip.ZipEntry",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "name"
      }
    ],
    "protocol": {
      "member": "getEntry(java.lang.String name)",
      "comment": "Returns the zip file entry for the specified name, or null if not found.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getInputStream(java.util.zip.ZipEntry entry)",
    "name": "getInputStream",
    "containingClass": {
      "qualifiedName": "java.util.zip.ZipFile",
      "name": "ZipFile",
      "isArray": false
    },
    "targetClass": "java.util.zip.ZipFile",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.io.InputStream",
      "name": "java.io.InputStream",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.zip.ZipEntry",
          "name": "ZipEntry",
          "isArray": false
        },
        "name": "entry"
      }
    ],
    "protocol": {
      "member": "getInputStream(java.util.zip.ZipEntry entry)",
      "comment": "Returns an input stream for reading the contents of the specified zip file entry.  Closing this ZIP file will, in turn, close all input streams that have been returned by invocations of this method.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getName()",
    "name": "getName",
    "containingClass": {
      "qualifiedName": "java.util.zip.ZipFile",
      "name": "ZipFile",
      "isArray": false
    },
    "targetClass": "java.util.zip.ZipFile",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getName()",
      "comment": "Returns the path name of the ZIP file.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "entries()",
    "name": "entries",
    "containingClass": {
      "qualifiedName": "java.util.zip.ZipFile",
      "name": "ZipFile",
      "isArray": false
    },
    "targetClass": "java.util.zip.ZipFile",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Enumeration<? extends java.util.zip.ZipEntry>",
      "name": "java.util.Enumeration<? extends java.util.zip.ZipEntry>",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "entries()",
      "comment": "Returns an enumeration of the ZIP file entries.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "stream()",
    "name": "stream",
    "containingClass": {
      "qualifiedName": "java.util.zip.ZipFile",
      "name": "ZipFile",
      "isArray": false
    },
    "targetClass": "java.util.zip.ZipFile",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.stream.Stream<? extends java.util.zip.ZipEntry>",
      "name": "java.util.stream.Stream<? extends java.util.zip.ZipEntry>",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "stream()",
      "comment": "Return an ordered Stream over the ZIP file entries. Entries appear in the Stream in the order they appear in the central directory of the ZIP file.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "size()",
    "name": "size",
    "containingClass": {
      "qualifiedName": "java.util.zip.ZipFile",
      "name": "ZipFile",
      "isArray": false
    },
    "targetClass": "java.util.zip.ZipFile",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "size()",
      "comment": "Returns the number of entries in the ZIP file.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "close()",
    "name": "close",
    "containingClass": {
      "qualifiedName": "java.util.zip.ZipFile",
      "name": "ZipFile",
      "isArray": false
    },
    "targetClass": "java.util.zip.ZipFile",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "close()",
      "comment": "Closes the ZIP file.  Closing this ZIP file will close all of the input streams previously returned by invocations of the method_0 getInputStream method.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "finalize()",
    "name": "finalize",
    "containingClass": {
      "qualifiedName": "java.util.zip.ZipFile",
      "name": "ZipFile",
      "isArray": false
    },
    "targetClass": "java.util.zip.ZipFile",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "finalize()",
      "comment": "Ensures that the system resources held by this ZipFile object are released when there are no more references to it.  Since the time when GC would invoke this method is undetermined, it is strongly recommended that applications invoke the close method as soon they have finished accessing this ZipFile. This will prevent holding up system resources for an undetermined length of time.",
      "kind": "FreeText",
      "condition": ""
    }
  }
]