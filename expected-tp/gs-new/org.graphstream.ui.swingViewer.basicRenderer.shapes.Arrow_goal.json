[
  {
    "signature": "setArrowLengthGu(int lengthGu)",
    "name": "setArrowLengthGu",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.basicRenderer.shapes.Arrow",
      "name": "Arrow",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.basicRenderer.shapes.Arrow",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "lengthGu"
      }
    ],
    "protocol": {
      "member": "setArrowLengthGu(int lengthGu)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setArrowWidthGu(int widthGu)",
    "name": "setArrowWidthGu",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.basicRenderer.shapes.Arrow",
      "name": "Arrow",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.basicRenderer.shapes.Arrow",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "widthGu"
      }
    ],
    "protocol": {
      "member": "setArrowWidthGu(int widthGu)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setFillColor(java.awt.Color color)",
    "name": "setFillColor",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.basicRenderer.shapes.Arrow",
      "name": "Arrow",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.basicRenderer.shapes.Arrow",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.awt.Color",
          "name": "Color",
          "isArray": false
        },
        "name": "color"
      }
    ],
    "protocol": {
      "member": "setFillColor(java.awt.Color color)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setStrokeColor(java.awt.Color color)",
    "name": "setStrokeColor",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.basicRenderer.shapes.Arrow",
      "name": "Arrow",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.basicRenderer.shapes.Arrow",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.awt.Color",
          "name": "Color",
          "isArray": false
        },
        "name": "color"
      }
    ],
    "protocol": {
      "member": "setStrokeColor(java.awt.Color color)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "renderFill(java.awt.Graphics2D g, org.graphstream.ui.swingViewer.util.GraphMetrics metrics)",
    "name": "renderFill",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.basicRenderer.shapes.Arrow",
      "name": "Arrow",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.basicRenderer.shapes.Arrow",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.awt.Graphics2D",
          "name": "Graphics2D",
          "isArray": false
        },
        "name": "g"
      },
      {
        "type": {
          "qualifiedName": "org.graphstream.ui.swingViewer.util.GraphMetrics",
          "name": "GraphMetrics",
          "isArray": false
        },
        "name": "metrics"
      }
    ],
    "protocol": {
      "member": "renderFill(java.awt.Graphics2D g, org.graphstream.ui.swingViewer.util.GraphMetrics metrics)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "renderStroke(java.awt.Graphics2D g, org.graphstream.ui.swingViewer.util.GraphMetrics metrics)",
    "name": "renderStroke",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.basicRenderer.shapes.Arrow",
      "name": "Arrow",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.basicRenderer.shapes.Arrow",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.awt.Graphics2D",
          "name": "Graphics2D",
          "isArray": false
        },
        "name": "g"
      },
      {
        "type": {
          "qualifiedName": "org.graphstream.ui.swingViewer.util.GraphMetrics",
          "name": "GraphMetrics",
          "isArray": false
        },
        "name": "metrics"
      }
    ],
    "protocol": {
      "member": "renderStroke(java.awt.Graphics2D g, org.graphstream.ui.swingViewer.util.GraphMetrics metrics)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setPositionAndShape(org.graphstream.ui.graphicGraph.GraphicEdge edge, org.graphstream.ui.swingViewer.util.GraphMetrics metrics)",
    "name": "setPositionAndShape",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.basicRenderer.shapes.Arrow",
      "name": "Arrow",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.basicRenderer.shapes.Arrow",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.graphstream.ui.graphicGraph.GraphicEdge",
          "name": "GraphicEdge",
          "isArray": false
        },
        "name": "edge"
      },
      {
        "type": {
          "qualifiedName": "org.graphstream.ui.swingViewer.util.GraphMetrics",
          "name": "GraphMetrics",
          "isArray": false
        },
        "name": "metrics"
      }
    ],
    "protocol": {
      "member": "setPositionAndShape(org.graphstream.ui.graphicGraph.GraphicEdge edge, org.graphstream.ui.swingViewer.util.GraphMetrics metrics)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setShapeAt(double x, double y, double dx, double dy)",
    "name": "setShapeAt",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.basicRenderer.shapes.Arrow",
      "name": "Arrow",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.basicRenderer.shapes.Arrow",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "x"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "y"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "dx"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "dy"
      }
    ],
    "protocol": {
      "member": "setShapeAt(double x, double y, double dx, double dy)",
      "comment": "Compute the shape of the arrow.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "evalTargetRadius(org.graphstream.ui.graphicGraph.GraphicEdge edge, org.graphstream.ui.swingViewer.util.GraphMetrics metrics)",
    "name": "evalTargetRadius",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.basicRenderer.shapes.Arrow",
      "name": "Arrow",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.basicRenderer.shapes.Arrow",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.graphstream.ui.graphicGraph.GraphicEdge",
          "name": "GraphicEdge",
          "isArray": false
        },
        "name": "edge"
      },
      {
        "type": {
          "qualifiedName": "org.graphstream.ui.swingViewer.util.GraphMetrics",
          "name": "GraphMetrics",
          "isArray": false
        },
        "name": "metrics"
      }
    ],
    "protocol": {
      "member": "evalTargetRadius(org.graphstream.ui.graphicGraph.GraphicEdge edge, org.graphstream.ui.swingViewer.util.GraphMetrics metrics)",
      "comment": "Evaluate the position of the arrow to avoid putting it above or under the target node.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "evalEllipseRadius(org.graphstream.ui.graphicGraph.GraphicEdge edge, double w, double h)",
    "name": "evalEllipseRadius",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.basicRenderer.shapes.Arrow",
      "name": "Arrow",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.basicRenderer.shapes.Arrow",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.graphstream.ui.graphicGraph.GraphicEdge",
          "name": "GraphicEdge",
          "isArray": false
        },
        "name": "edge"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "w"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "h"
      }
    ],
    "protocol": {
      "member": "evalEllipseRadius(org.graphstream.ui.graphicGraph.GraphicEdge edge, double w, double h)",
      "comment": "Compute the length of a vector along the edge from the ellipse centre to the intersection between the edge and the ellipse.",
      "kind": "FreeText",
      "condition": ""
    }
  }
]