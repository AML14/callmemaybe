[
  {
    "signature": "getCapabilities()",
    "name": "getCapabilities",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.SGD",
      "name": "SGD",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.SGD",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "weka.core.Capabilities",
      "name": "weka.core.Capabilities",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getCapabilities()",
      "comment": "Returns default capabilities of the classifier.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "epsilonTipText()",
    "name": "epsilonTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.SGD",
      "name": "SGD",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.SGD",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "epsilonTipText()",
      "comment": "Returns the tip text for this property",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setEpsilon(double e)",
    "name": "setEpsilon",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.SGD",
      "name": "SGD",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.SGD",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "e"
      }
    ],
    "protocol": {
      "member": "setEpsilon(double e)",
      "comment": "Set the epsilon threshold on the error for epsilon insensitive and Huber loss functions",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getEpsilon()",
    "name": "getEpsilon",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.SGD",
      "name": "SGD",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.SGD",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getEpsilon()",
      "comment": "Get the epsilon threshold on the error for epsilon insensitive and Huber loss functions",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "lambdaTipText()",
    "name": "lambdaTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.SGD",
      "name": "SGD",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.SGD",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "lambdaTipText()",
      "comment": "Returns the tip text for this property",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setLambda(double lambda)",
    "name": "setLambda",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.SGD",
      "name": "SGD",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.SGD",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "lambda"
      }
    ],
    "protocol": {
      "member": "setLambda(double lambda)",
      "comment": "Set the value of lambda to use",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getLambda()",
    "name": "getLambda",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.SGD",
      "name": "SGD",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.SGD",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getLambda()",
      "comment": "Get the current value of lambda",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setLearningRate(double lr)",
    "name": "setLearningRate",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.SGD",
      "name": "SGD",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.SGD",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "lr"
      }
    ],
    "protocol": {
      "member": "setLearningRate(double lr)",
      "comment": "Set the learning rate.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getLearningRate()",
    "name": "getLearningRate",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.SGD",
      "name": "SGD",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.SGD",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getLearningRate()",
      "comment": "Get the learning rate.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "learningRateTipText()",
    "name": "learningRateTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.SGD",
      "name": "SGD",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.SGD",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "learningRateTipText()",
      "comment": "Returns the tip text for this property",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "epochsTipText()",
    "name": "epochsTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.SGD",
      "name": "SGD",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.SGD",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "epochsTipText()",
      "comment": "Returns the tip text for this property",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setEpochs(int e)",
    "name": "setEpochs",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.SGD",
      "name": "SGD",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.SGD",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "e"
      }
    ],
    "protocol": {
      "member": "setEpochs(int e)",
      "comment": "Set the number of epochs to use",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getEpochs()",
    "name": "getEpochs",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.SGD",
      "name": "SGD",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.SGD",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getEpochs()",
      "comment": "Get current number of epochs",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setDontNormalize(boolean m)",
    "name": "setDontNormalize",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.SGD",
      "name": "SGD",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.SGD",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "m"
      }
    ],
    "protocol": {
      "member": "setDontNormalize(boolean m)",
      "comment": "Turn normalization off/on.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getDontNormalize()",
    "name": "getDontNormalize",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.SGD",
      "name": "SGD",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.SGD",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getDontNormalize()",
      "comment": "Get whether normalization has been turned off.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "dontNormalizeTipText()",
    "name": "dontNormalizeTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.SGD",
      "name": "SGD",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.SGD",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "dontNormalizeTipText()",
      "comment": "Returns the tip text for this property",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setDontReplaceMissing(boolean m)",
    "name": "setDontReplaceMissing",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.SGD",
      "name": "SGD",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.SGD",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "m"
      }
    ],
    "protocol": {
      "member": "setDontReplaceMissing(boolean m)",
      "comment": "Turn global replacement of missing values off/on. If turned off, then missing values are effectively ignored.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getDontReplaceMissing()",
    "name": "getDontReplaceMissing",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.SGD",
      "name": "SGD",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.SGD",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getDontReplaceMissing()",
      "comment": "Get whether global replacement of missing values has been disabled.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "dontReplaceMissingTipText()",
    "name": "dontReplaceMissingTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.SGD",
      "name": "SGD",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.SGD",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "dontReplaceMissingTipText()",
      "comment": "Returns the tip text for this property",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setLossFunction(weka.core.SelectedTag function)",
    "name": "setLossFunction",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.SGD",
      "name": "SGD",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.SGD",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "weka.core.SelectedTag",
          "name": "SelectedTag",
          "isArray": false
        },
        "name": "function"
      }
    ],
    "protocol": {
      "member": "setLossFunction(weka.core.SelectedTag function)",
      "comment": "Set the loss function to use.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getLossFunction()",
    "name": "getLossFunction",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.SGD",
      "name": "SGD",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.SGD",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "weka.core.SelectedTag",
      "name": "weka.core.SelectedTag",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getLossFunction()",
      "comment": "Get the current loss function.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "lossFunctionTipText()",
    "name": "lossFunctionTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.SGD",
      "name": "SGD",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.SGD",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "lossFunctionTipText()",
      "comment": "Returns the tip text for this property",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "listOptions()",
    "name": "listOptions",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.SGD",
      "name": "SGD",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.SGD",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Enumeration<weka.core.Option>",
      "name": "java.util.Enumeration<weka.core.Option>",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "listOptions()",
      "comment": "Returns an enumeration describing the available options.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setOptions(java.lang.String[] options)",
    "name": "setOptions",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.SGD",
      "name": "SGD",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.SGD",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Ljava.lang.String;",
          "name": "String[]",
          "isArray": true
        },
        "name": "options"
      }
    ],
    "protocol": {
      "member": "setOptions(java.lang.String[] options)",
      "comment": "Parses a given list of options.   -F Set the loss function to minimize. 0 = hinge loss (SVM), 1 = log loss (logistic regression), 2 = squared loss (regression), 3 = epsilon insensitive loss (regression), 4 = Huber loss (regression). (default = 0)  -L The learning rate. If normalization is turned off (as it is automatically for streaming data), then the default learning rate will need to be reduced (try 0method_0). (default = 0method_1).  -R <double> The lambda regularization constant (default = 0method_0)  -E <integer> The number of epochs to perform (batch learning only, default = 500)  -C <double> The epsilon threshold (epsilon-insenstive and Huber loss only, default = 1e-3)  -N Don't normalize the data  -M Don't replace missing values  -S <num> Random number seed. (default 1)  -output-debug-info If set, classifier is run in debug mode and may output additional info to the console  -do-not-check-capabilities If set, classifier capabilities are not checked before classifier is built (use with caution).",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getOptions()",
    "name": "getOptions",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.SGD",
      "name": "SGD",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.SGD",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String[]",
      "name": "java.lang.String[]",
      "isArray": true
    },
    "parameters": [],
    "protocol": {
      "member": "getOptions()",
      "comment": "Gets the current settings of the classifier.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "globalInfo()",
    "name": "globalInfo",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.SGD",
      "name": "SGD",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.SGD",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "globalInfo()",
      "comment": "Returns a string describing classifier",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "reset()",
    "name": "reset",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.SGD",
      "name": "SGD",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.SGD",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "reset()",
      "comment": "Reset the classifier.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "buildClassifier(weka.core.Instances data)",
    "name": "buildClassifier",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.SGD",
      "name": "SGD",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.SGD",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "weka.core.Instances",
          "name": "Instances",
          "isArray": false
        },
        "name": "data"
      }
    ],
    "protocol": {
      "member": "buildClassifier(weka.core.Instances data)",
      "comment": "Method for building the classifier.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "dloss(double z)",
    "name": "dloss",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.SGD",
      "name": "SGD",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.SGD",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "z"
      }
    ],
    "protocol": {
      "member": "dloss(double z)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "dotProd(weka.core.Instance inst1, double[] weights, int classIndex)",
    "name": "dotProd",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.SGD",
      "name": "SGD",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.SGD",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "weka.core.Instance",
          "name": "Instance",
          "isArray": false
        },
        "name": "inst1"
      },
      {
        "type": {
          "qualifiedName": "[D",
          "name": "double[]",
          "isArray": true
        },
        "name": "weights"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "classIndex"
      }
    ],
    "protocol": {
      "member": "dotProd(weka.core.Instance inst1, double[] weights, int classIndex)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "updateClassifier(weka.core.Instance instance, boolean filter)",
    "name": "updateClassifier",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.SGD",
      "name": "SGD",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.SGD",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "weka.core.Instance",
          "name": "Instance",
          "isArray": false
        },
        "name": "instance"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "filter"
      }
    ],
    "protocol": {
      "member": "updateClassifier(weka.core.Instance instance, boolean filter)",
      "comment": "Updates the classifier with the given instance.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "updateClassifier(weka.core.Instance instance)",
    "name": "updateClassifier",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.SGD",
      "name": "SGD",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.SGD",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "weka.core.Instance",
          "name": "Instance",
          "isArray": false
        },
        "name": "instance"
      }
    ],
    "protocol": {
      "member": "updateClassifier(weka.core.Instance instance)",
      "comment": "Updates the classifier with the given instance.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "distributionForInstance(weka.core.Instance inst)",
    "name": "distributionForInstance",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.SGD",
      "name": "SGD",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.SGD",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[]",
      "name": "double[]",
      "isArray": true
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "weka.core.Instance",
          "name": "Instance",
          "isArray": false
        },
        "name": "inst"
      }
    ],
    "protocol": {
      "member": "distributionForInstance(weka.core.Instance inst)",
      "comment": "Computes the distribution for a given instance",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getWeights()",
    "name": "getWeights",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.SGD",
      "name": "SGD",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.SGD",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[]",
      "name": "double[]",
      "isArray": true
    },
    "parameters": [],
    "protocol": {
      "member": "getWeights()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "toString()",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.SGD",
      "name": "SGD",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.SGD",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "toString()",
      "comment": "Prints out the classifier.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getRevision()",
    "name": "getRevision",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.SGD",
      "name": "SGD",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.SGD",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getRevision()",
      "comment": "Returns the revision string.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "aggregate(weka.classifiers.functions.SGD toAggregate)",
    "name": "aggregate",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.SGD",
      "name": "SGD",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.SGD",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "weka.classifiers.functions.SGD",
      "name": "weka.classifiers.functions.SGD",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "weka.classifiers.functions.SGD",
          "name": "SGD",
          "isArray": false
        },
        "name": "toAggregate"
      }
    ],
    "protocol": {
      "member": "aggregate(weka.classifiers.functions.SGD toAggregate)",
      "comment": "Aggregate an object with this one",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "finalizeAggregation()",
    "name": "finalizeAggregation",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.SGD",
      "name": "SGD",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.SGD",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "finalizeAggregation()",
      "comment": "Call to complete the aggregation process. Allows implementers to do any final processing based on how many objects were aggregated.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "main(java.lang.String[] args)",
    "name": "main",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.SGD",
      "name": "SGD",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.SGD",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Ljava.lang.String;",
          "name": "String[]",
          "isArray": true
        },
        "name": "args"
      }
    ],
    "protocol": {
      "member": "main(java.lang.String[] args)",
      "comment": "Main method for testing this class.",
      "kind": "FreeText",
      "condition": ""
    }
  }
]