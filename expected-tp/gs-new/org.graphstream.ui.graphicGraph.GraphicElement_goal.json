[
  {
    "signature": "org.graphstream.ui.graphicGraph.GraphicElement(java.lang.String id, org.graphstream.ui.graphicGraph.GraphicGraph graph)",
    "name": "org.graphstream.ui.graphicGraph.GraphicElement",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.graphicGraph.GraphicElement",
      "name": "GraphicElement",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.graphicGraph.GraphicElement",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      },
      {
        "type": {
          "qualifiedName": "org.graphstream.ui.graphicGraph.GraphicGraph",
          "name": "GraphicGraph",
          "isArray": false
        },
        "name": "graph"
      }
    ],
    "protocol": {
      "member": "org.graphstream.ui.graphicGraph.GraphicElement(java.lang.String id, org.graphstream.ui.graphicGraph.GraphicGraph graph)",
      "comment": "New element.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "myGraph()",
    "name": "myGraph",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.graphicGraph.GraphicElement",
      "name": "GraphicElement",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.graphicGraph.GraphicElement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.graphstream.ui.graphicGraph.GraphicGraph",
      "name": "org.graphstream.ui.graphicGraph.GraphicGraph",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "myGraph()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "nullAttributesAreErrors()",
    "name": "nullAttributesAreErrors",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.graphicGraph.GraphicElement",
      "name": "GraphicElement",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.graphicGraph.GraphicElement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "nullAttributesAreErrors()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getSelectorType()",
    "name": "getSelectorType",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.graphicGraph.GraphicElement",
      "name": "GraphicElement",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.graphicGraph.GraphicElement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.graphstream.ui.graphicGraph.stylesheet.Selector$Type",
      "name": "org.graphstream.ui.graphicGraph.stylesheet.Selector$Type",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getSelectorType()",
      "comment": "Type of selector for the graphic element (Node, Edge, Sprite ?).",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getStyle()",
    "name": "getStyle",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.graphicGraph.GraphicElement",
      "name": "GraphicElement",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.graphicGraph.GraphicElement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.graphstream.ui.graphicGraph.StyleGroup",
      "name": "org.graphstream.ui.graphicGraph.StyleGroup",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getStyle()",
      "comment": "Style group. An style group may reference several elements.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getLabel()",
    "name": "getLabel",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.graphicGraph.GraphicElement",
      "name": "GraphicElement",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.graphicGraph.GraphicElement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getLabel()",
      "comment": "Label or null if not set.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getX()",
    "name": "getX",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.graphicGraph.GraphicElement",
      "name": "GraphicElement",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.graphicGraph.GraphicElement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getX()",
      "comment": "Abscissa of the element, always in GU (graph units). For edges this is the X of the \"from\" node.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getY()",
    "name": "getY",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.graphicGraph.GraphicElement",
      "name": "GraphicElement",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.graphicGraph.GraphicElement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getY()",
      "comment": "Ordinate of the element, always in GU (graph units). For edges this is the Y of the \"from\" node.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getZ()",
    "name": "getZ",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.graphicGraph.GraphicElement",
      "name": "GraphicElement",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.graphicGraph.GraphicElement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getZ()",
      "comment": "Depth of the element, always in GU (graph units). For edges this is the Z of the \"from\" node.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getComponent()",
    "name": "getComponent",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.graphicGraph.GraphicElement",
      "name": "GraphicElement",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.graphicGraph.GraphicElement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Object",
      "name": "java.lang.Object",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getComponent()",
      "comment": "The associated GUI component.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "removed()",
    "name": "removed",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.graphicGraph.GraphicElement",
      "name": "GraphicElement",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.graphicGraph.GraphicElement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "removed()",
      "comment": "The graphic element was removed from the graphic graph, clean up.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "move(double x, double y, double z)",
    "name": "move",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.graphicGraph.GraphicElement",
      "name": "GraphicElement",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.graphicGraph.GraphicElement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "x"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "y"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "z"
      }
    ],
    "protocol": {
      "member": "move(double x, double y, double z)",
      "comment": "Try to force the element to move at the give location in graph units (GU). For edges, this may move the two attached nodes.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setComponent(java.lang.Object component)",
    "name": "setComponent",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.graphicGraph.GraphicElement",
      "name": "GraphicElement",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.graphicGraph.GraphicElement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "component"
      }
    ],
    "protocol": {
      "member": "setComponent(java.lang.Object component)",
      "comment": "Set the GUI component of this element.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "attributeChanged(org.graphstream.graph.implementations.AbstractElement$AttributeChangeEvent event, java.lang.String attribute, java.lang.Object oldValue, java.lang.Object newValue)",
    "name": "attributeChanged",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.graphicGraph.GraphicElement",
      "name": "GraphicElement",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.graphicGraph.GraphicElement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.graphstream.graph.implementations.AbstractElement$AttributeChangeEvent",
          "name": "AttributeChangeEvent",
          "isArray": false
        },
        "name": "event"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "attribute"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "oldValue"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "newValue"
      }
    ],
    "protocol": {
      "member": "attributeChanged(org.graphstream.graph.implementations.AbstractElement$AttributeChangeEvent event, java.lang.String attribute, java.lang.Object oldValue, java.lang.Object newValue)",
      "comment": "Handle the \"uimethod_0\", \"label\", \"uimethod_1\", etc. attributes.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "addAttribute(java.lang.String attribute, java.lang.Object... values)",
    "name": "addAttribute",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.graphicGraph.GraphicElement",
      "name": "GraphicElement",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.graphicGraph.GraphicElement",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "attribute"
      },
      {
        "type": {
          "qualifiedName": "[Ljava.lang.Object;",
          "name": "Object[]",
          "isArray": true
        },
        "name": "values"
      }
    ],
    "protocol": {
      "member": "addAttribute(java.lang.String attribute, java.lang.Object... values)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  }
]