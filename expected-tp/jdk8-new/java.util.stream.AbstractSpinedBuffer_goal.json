[
  {
    "signature": "java.util.stream.AbstractSpinedBuffer()",
    "name": "java.util.stream.AbstractSpinedBuffer",
    "containingClass": {
      "qualifiedName": "java.util.stream.AbstractSpinedBuffer",
      "name": "AbstractSpinedBuffer",
      "isArray": false
    },
    "targetClass": "java.util.stream.AbstractSpinedBuffer",
    "isVarArgs": false,
    "parameters": [],
    "protocol": {
      "member": "java.util.stream.AbstractSpinedBuffer()",
      "comment": "Construct with an initial capacity of 16.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "java.util.stream.AbstractSpinedBuffer(int initialCapacity)",
    "name": "java.util.stream.AbstractSpinedBuffer",
    "containingClass": {
      "qualifiedName": "java.util.stream.AbstractSpinedBuffer",
      "name": "AbstractSpinedBuffer",
      "isArray": false
    },
    "targetClass": "java.util.stream.AbstractSpinedBuffer",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "initialCapacity"
      }
    ],
    "protocol": {
      "member": "java.util.stream.AbstractSpinedBuffer(int initialCapacity)",
      "comment": "Construct with a specified initial capacity.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "isEmpty()",
    "name": "isEmpty",
    "containingClass": {
      "qualifiedName": "java.util.stream.AbstractSpinedBuffer",
      "name": "AbstractSpinedBuffer",
      "isArray": false
    },
    "targetClass": "java.util.stream.AbstractSpinedBuffer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "isEmpty()",
      "comment": "Is the buffer currently empty?",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "count()",
    "name": "count",
    "containingClass": {
      "qualifiedName": "java.util.stream.AbstractSpinedBuffer",
      "name": "AbstractSpinedBuffer",
      "isArray": false
    },
    "targetClass": "java.util.stream.AbstractSpinedBuffer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long",
      "name": "long",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "count()",
      "comment": "How many elements are currently in the buffer?",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "chunkSize(int n)",
    "name": "chunkSize",
    "containingClass": {
      "qualifiedName": "java.util.stream.AbstractSpinedBuffer",
      "name": "AbstractSpinedBuffer",
      "isArray": false
    },
    "targetClass": "java.util.stream.AbstractSpinedBuffer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "n"
      }
    ],
    "protocol": {
      "member": "chunkSize(int n)",
      "comment": "How big should the nth chunk be?",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "clear()",
    "name": "clear",
    "containingClass": {
      "qualifiedName": "java.util.stream.AbstractSpinedBuffer",
      "name": "AbstractSpinedBuffer",
      "isArray": false
    },
    "targetClass": "java.util.stream.AbstractSpinedBuffer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "clear()",
      "comment": "Remove all data from the buffer",
      "kind": "FreeText",
      "condition": ""
    }
  }
]