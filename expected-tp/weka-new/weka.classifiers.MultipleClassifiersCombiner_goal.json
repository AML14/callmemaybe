[
  {
    "signature": "listOptions()",
    "name": "listOptions",
    "containingClass": {
      "qualifiedName": "weka.classifiers.MultipleClassifiersCombiner",
      "name": "MultipleClassifiersCombiner",
      "isArray": false
    },
    "targetClass": "weka.classifiers.MultipleClassifiersCombiner",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Enumeration<weka.core.Option>",
      "name": "java.util.Enumeration<weka.core.Option>",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "listOptions()",
      "comment": "Returns an enumeration describing the available options",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setOptions(java.lang.String[] options)",
    "name": "setOptions",
    "containingClass": {
      "qualifiedName": "weka.classifiers.MultipleClassifiersCombiner",
      "name": "MultipleClassifiersCombiner",
      "isArray": false
    },
    "targetClass": "weka.classifiers.MultipleClassifiersCombiner",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Ljava.lang.String;",
          "name": "String[]",
          "isArray": true
        },
        "name": "options"
      }
    ],
    "protocol": {
      "member": "setOptions(java.lang.String[] options)",
      "comment": "Parses a given list of options. Valid options are: -B classifierstring <br> Classifierstring should contain the full class name of a scheme included for selection followed by options to the classifier (required, option should be used once for each classifier).",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getOptions()",
    "name": "getOptions",
    "containingClass": {
      "qualifiedName": "weka.classifiers.MultipleClassifiersCombiner",
      "name": "MultipleClassifiersCombiner",
      "isArray": false
    },
    "targetClass": "weka.classifiers.MultipleClassifiersCombiner",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String[]",
      "name": "java.lang.String[]",
      "isArray": true
    },
    "parameters": [],
    "protocol": {
      "member": "getOptions()",
      "comment": "Gets the current settings of the Classifier.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "classifiersTipText()",
    "name": "classifiersTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.MultipleClassifiersCombiner",
      "name": "MultipleClassifiersCombiner",
      "isArray": false
    },
    "targetClass": "weka.classifiers.MultipleClassifiersCombiner",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "classifiersTipText()",
      "comment": "Returns the tip text for this property",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setClassifiers(weka.classifiers.Classifier[] classifiers)",
    "name": "setClassifiers",
    "containingClass": {
      "qualifiedName": "weka.classifiers.MultipleClassifiersCombiner",
      "name": "MultipleClassifiersCombiner",
      "isArray": false
    },
    "targetClass": "weka.classifiers.MultipleClassifiersCombiner",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Lweka.classifiers.Classifier;",
          "name": "Classifier[]",
          "isArray": true
        },
        "name": "classifiers"
      }
    ],
    "protocol": {
      "member": "setClassifiers(weka.classifiers.Classifier[] classifiers)",
      "comment": "Sets the list of possible classifers to choose from.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getClassifiers()",
    "name": "getClassifiers",
    "containingClass": {
      "qualifiedName": "weka.classifiers.MultipleClassifiersCombiner",
      "name": "MultipleClassifiersCombiner",
      "isArray": false
    },
    "targetClass": "weka.classifiers.MultipleClassifiersCombiner",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "weka.classifiers.Classifier[]",
      "name": "weka.classifiers.Classifier[]",
      "isArray": true
    },
    "parameters": [],
    "protocol": {
      "member": "getClassifiers()",
      "comment": "Gets the list of possible classifers to choose from.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getClassifier(int index)",
    "name": "getClassifier",
    "containingClass": {
      "qualifiedName": "weka.classifiers.MultipleClassifiersCombiner",
      "name": "MultipleClassifiersCombiner",
      "isArray": false
    },
    "targetClass": "weka.classifiers.MultipleClassifiersCombiner",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "weka.classifiers.Classifier",
      "name": "weka.classifiers.Classifier",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      }
    ],
    "protocol": {
      "member": "getClassifier(int index)",
      "comment": "Gets a single classifier from the set of available classifiers.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getClassifierSpec(int index)",
    "name": "getClassifierSpec",
    "containingClass": {
      "qualifiedName": "weka.classifiers.MultipleClassifiersCombiner",
      "name": "MultipleClassifiersCombiner",
      "isArray": false
    },
    "targetClass": "weka.classifiers.MultipleClassifiersCombiner",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      }
    ],
    "protocol": {
      "member": "getClassifierSpec(int index)",
      "comment": "Gets the classifier specification string, which contains the class name of the classifier and any options to the classifier",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getCapabilities()",
    "name": "getCapabilities",
    "containingClass": {
      "qualifiedName": "weka.classifiers.MultipleClassifiersCombiner",
      "name": "MultipleClassifiersCombiner",
      "isArray": false
    },
    "targetClass": "weka.classifiers.MultipleClassifiersCombiner",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "weka.core.Capabilities",
      "name": "weka.core.Capabilities",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getCapabilities()",
      "comment": "Returns combined capabilities of the base classifiers, imethod_0., the capabilities all of them have in common.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "preExecution()",
    "name": "preExecution",
    "containingClass": {
      "qualifiedName": "weka.classifiers.MultipleClassifiersCombiner",
      "name": "MultipleClassifiersCombiner",
      "isArray": false
    },
    "targetClass": "weka.classifiers.MultipleClassifiersCombiner",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "preExecution()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "postExecution()",
    "name": "postExecution",
    "containingClass": {
      "qualifiedName": "weka.classifiers.MultipleClassifiersCombiner",
      "name": "MultipleClassifiersCombiner",
      "isArray": false
    },
    "targetClass": "weka.classifiers.MultipleClassifiersCombiner",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "postExecution()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  }
]