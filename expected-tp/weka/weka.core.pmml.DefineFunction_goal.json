[
  {
    "signature": "weka.core.pmml.DefineFunction(org.w3c.dom.Element container, weka.core.pmml.TransformationDictionary transDict)",
    "name": "weka.core.pmml.DefineFunction",
    "containingClass": {
      "qualifiedName": "weka.core.pmml.DefineFunction",
      "name": "DefineFunction",
      "isArray": false
    },
    "targetClass": "weka.core.pmml.DefineFunction",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.w3c.dom.Element",
          "name": "Element",
          "isArray": false
        },
        "name": "container"
      },
      {
        "type": {
          "qualifiedName": "weka.core.pmml.TransformationDictionary",
          "name": "TransformationDictionary",
          "isArray": false
        },
        "name": "transDict"
      }
    ],
    "protocol": {
      "member": "weka.core.pmml.DefineFunction(org.w3c.dom.Element container, weka.core.pmml.TransformationDictionary transDict)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "pushParameterDefs()",
    "name": "pushParameterDefs",
    "containingClass": {
      "qualifiedName": "weka.core.pmml.DefineFunction",
      "name": "DefineFunction",
      "isArray": false
    },
    "targetClass": "weka.core.pmml.DefineFunction",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "pushParameterDefs()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getOutputDef()",
    "name": "getOutputDef",
    "containingClass": {
      "qualifiedName": "weka.core.pmml.DefineFunction",
      "name": "DefineFunction",
      "isArray": false
    },
    "targetClass": "weka.core.pmml.DefineFunction",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "weka.core.Attribute",
      "name": "weka.core.Attribute",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getOutputDef()",
      "comment": "Get the structure of the result produced by this function.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getParameterNames()",
    "name": "getParameterNames",
    "containingClass": {
      "qualifiedName": "weka.core.pmml.DefineFunction",
      "name": "DefineFunction",
      "isArray": false
    },
    "targetClass": "weka.core.pmml.DefineFunction",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String[]",
      "name": "java.lang.String[]",
      "isArray": true
    },
    "parameters": [],
    "protocol": {
      "member": "getParameterNames()",
      "comment": "Returns an array of the names of the parameters expected as input by this function. May return null if this function can take an unbounded number of parameters (imethod_0. min, max, etc.).",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getResult(double[] incoming)",
    "name": "getResult",
    "containingClass": {
      "qualifiedName": "weka.core.pmml.DefineFunction",
      "name": "DefineFunction",
      "isArray": false
    },
    "targetClass": "weka.core.pmml.DefineFunction",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[D",
          "name": "double[]",
          "isArray": true
        },
        "name": "incoming"
      }
    ],
    "protocol": {
      "member": "getResult(double[] incoming)",
      "comment": "Get the result of applying this function.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setParameterDefs(java.util.ArrayList<weka.core.Attribute> paramDefs)",
    "name": "setParameterDefs",
    "containingClass": {
      "qualifiedName": "weka.core.pmml.DefineFunction",
      "name": "DefineFunction",
      "isArray": false
    },
    "targetClass": "weka.core.pmml.DefineFunction",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.ArrayList",
          "name": "ArrayList",
          "isArray": false
        },
        "name": "paramDefs"
      }
    ],
    "protocol": {
      "member": "setParameterDefs(java.util.ArrayList<weka.core.Attribute> paramDefs)",
      "comment": "Set the structure of the parameters that are expected as input by this function. This must be called before method_0 is called.",
      "kind": "FreeText",
      "condition": "receiverObjectID.setParameterDefs(args[0])->weka.core.pmml.DefineFunction.getOutputDef()"
    }
  },
  {
    "signature": "toString()",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "weka.core.pmml.DefineFunction",
      "name": "DefineFunction",
      "isArray": false
    },
    "targetClass": "weka.core.pmml.DefineFunction",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "toString()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "toString(java.lang.String pad)",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "weka.core.pmml.DefineFunction",
      "name": "DefineFunction",
      "isArray": false
    },
    "targetClass": "weka.core.pmml.DefineFunction",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "pad"
      }
    ],
    "protocol": {
      "member": "toString(java.lang.String pad)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  }
]