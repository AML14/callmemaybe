[
  {
    "operationSignature": "binarySearch",
    "isConstructor": false,
    "mustPrecede": "",
    "mustFollow": "java.util.Arrays.sort(args[0])",
    "comment": "Searches the specified array of longs for the specified value using the binary search algorithm.  The array must be sorted (as by the {@link #sort(long[])} method) prior to making this call.  If it is not sorted, the results are undefined.  If the array contains multiple elements with the specified value, there is no guarantee which one will be found. "
  },
  {
    "operationSignature": "binarySearch",
    "isConstructor": false,
    "mustPrecede": "",
    "mustFollow": "java.util.Arrays.sort(args[0])",
    "comment": "Searches the specified array of ints for the specified value using the binary search algorithm.  The array must be sorted (as by the {@link #sort(int[])} method) prior to making this call.  If it is not sorted, the results are undefined.  If the array contains multiple elements with the specified value, there is no guarantee which one will be found. "
  },
  {
    "operationSignature": "binarySearch",
    "isConstructor": false,
    "mustPrecede": "",
    "mustFollow": "java.util.Arrays.sort(args[0])",
    "comment": "Searches the specified array of shorts for the specified value using the binary search algorithm.  The array must be sorted (as by the {@link #sort(short[])} method) prior to making this call.  If it is not sorted, the results are undefined.  If the array contains multiple elements with the specified value, there is no guarantee which one will be found. "
  },
  {
    "operationSignature": "binarySearch",
    "isConstructor": false,
    "mustPrecede": "",
    "mustFollow": "java.util.Arrays.sort(args[0])",
    "comment": "Searches the specified array of chars for the specified value using the binary search algorithm.  The array must be sorted (as by the {@link #sort(char[])} method) prior to making this call.  If it is not sorted, the results are undefined.  If the array contains multiple elements with the specified value, there is no guarantee which one will be found. "
  },
  {
    "operationSignature": "binarySearch",
    "isConstructor": false,
    "mustPrecede": "",
    "mustFollow": "java.util.Arrays.sort(args[0])",
    "comment": "Searches the specified array of bytes for the specified value using the binary search algorithm.  The array must be sorted (as by the {@link #sort(byte[])} method) prior to making this call.  If it is not sorted, the results are undefined.  If the array contains multiple elements with the specified value, there is no guarantee which one will be found. "
  },
  {
    "operationSignature": "binarySearch",
    "isConstructor": false,
    "mustPrecede": "",
    "mustFollow": "java.util.Arrays.sort(args[0])",
    "comment": "Searches the specified array of doubles for the specified value using the binary search algorithm.  The array must be sorted (as by the {@link #sort(double[])} method) prior to making this call. If it is not sorted, the results are undefined.  If the array contains multiple elements with the specified value, there is no guarantee which one will be found.  This method considers all NaN values to be equivalent and equal. "
  },
  {
    "operationSignature": "binarySearch",
    "isConstructor": false,
    "mustPrecede": "",
    "mustFollow": "java.util.Arrays.sort(args[0])",
    "comment": "Searches the specified array of floats for the specified value using the binary search algorithm. The array must be sorted (as by the {@link #sort(float[])} method) prior to making this call. If it is not sorted, the results are undefined. If the array contains multiple elements with the specified value, there is no guarantee which one will be found. This method considers all NaN values to be equivalent and equal. "
  }
]