[
  {
    "signature": "java.util.jar.Attributes()",
    "name": "java.util.jar.Attributes",
    "containingClass": {
      "qualifiedName": "java.util.jar.Attributes",
      "name": "Attributes",
      "isArray": false
    },
    "targetClass": "java.util.jar.Attributes",
    "isVarArgs": false,
    "parameters": [],
    "protocol": {
      "member": "java.util.jar.Attributes()",
      "comment": "Constructs a new, empty Attributes object with default size.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "java.util.jar.Attributes(int size)",
    "name": "java.util.jar.Attributes",
    "containingClass": {
      "qualifiedName": "java.util.jar.Attributes",
      "name": "Attributes",
      "isArray": false
    },
    "targetClass": "java.util.jar.Attributes",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "size"
      }
    ],
    "protocol": {
      "member": "java.util.jar.Attributes(int size)",
      "comment": "Constructs a new, empty Attributes object with the specified initial size.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "java.util.jar.Attributes(java.util.jar.Attributes attr)",
    "name": "java.util.jar.Attributes",
    "containingClass": {
      "qualifiedName": "java.util.jar.Attributes",
      "name": "Attributes",
      "isArray": false
    },
    "targetClass": "java.util.jar.Attributes",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.jar.Attributes",
          "name": "Attributes",
          "isArray": false
        },
        "name": "attr"
      }
    ],
    "protocol": {
      "member": "java.util.jar.Attributes(java.util.jar.Attributes attr)",
      "comment": "Constructs a new Attributes object with the same attribute name-value mappings as in the specified Attributes.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "get(java.lang.Object name)",
    "name": "get",
    "containingClass": {
      "qualifiedName": "java.util.jar.Attributes",
      "name": "Attributes",
      "isArray": false
    },
    "targetClass": "java.util.jar.Attributes",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Object",
      "name": "java.lang.Object",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "name"
      }
    ],
    "protocol": {
      "member": "get(java.lang.Object name)",
      "comment": "Returns the value of the specified attribute name, or null if the attribute name was not found.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getValue(java.lang.String name)",
    "name": "getValue",
    "containingClass": {
      "qualifiedName": "java.util.jar.Attributes",
      "name": "Attributes",
      "isArray": false
    },
    "targetClass": "java.util.jar.Attributes",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "name"
      }
    ],
    "protocol": {
      "member": "getValue(java.lang.String name)",
      "comment": "Returns the value of the specified attribute name, specified as a string, or null if the attribute was not found. The attribute name is case-insensitive.  This method is defined as:  return (String)method_0name));",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getValue(java.util.jar.Attributes$Name name)",
    "name": "getValue",
    "containingClass": {
      "qualifiedName": "java.util.jar.Attributes",
      "name": "Attributes",
      "isArray": false
    },
    "targetClass": "java.util.jar.Attributes",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.jar.Attributes$Name",
          "name": "Name",
          "isArray": false
        },
        "name": "name"
      }
    ],
    "protocol": {
      "member": "getValue(java.util.jar.Attributes$Name name)",
      "comment": "Returns the value of the specified method_1, or null if the attribute was not found.  This method is defined as:  return (String)method_0;",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "put(java.lang.Object name, java.lang.Object value)",
    "name": "put",
    "containingClass": {
      "qualifiedName": "java.util.jar.Attributes",
      "name": "Attributes",
      "isArray": false
    },
    "targetClass": "java.util.jar.Attributes",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Object",
      "name": "java.lang.Object",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "name"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "protocol": {
      "member": "put(java.lang.Object name, java.lang.Object value)",
      "comment": "Associates the specified value with the specified attribute name (key) in this Map. If the Map previously contained a mapping for the attribute name, the old value is replaced.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "putValue(java.lang.String name, java.lang.String value)",
    "name": "putValue",
    "containingClass": {
      "qualifiedName": "java.util.jar.Attributes",
      "name": "Attributes",
      "isArray": false
    },
    "targetClass": "java.util.jar.Attributes",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "name"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "protocol": {
      "member": "putValue(java.lang.String name, java.lang.String value)",
      "comment": "Associates the specified value with the specified attribute name, specified as a String. The attributes name is case-insensitive. If the Map previously contained a mapping for the attribute name, the old value is replaced.  This method is defined as:  return (String)method_0, value);",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "remove(java.lang.Object name)",
    "name": "remove",
    "containingClass": {
      "qualifiedName": "java.util.jar.Attributes",
      "name": "Attributes",
      "isArray": false
    },
    "targetClass": "java.util.jar.Attributes",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Object",
      "name": "java.lang.Object",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "name"
      }
    ],
    "protocol": {
      "member": "remove(java.lang.Object name)",
      "comment": "Removes the attribute with the specified name (key) from this Map. Returns the previous attribute value, or null if none.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "containsValue(java.lang.Object value)",
    "name": "containsValue",
    "containingClass": {
      "qualifiedName": "java.util.jar.Attributes",
      "name": "Attributes",
      "isArray": false
    },
    "targetClass": "java.util.jar.Attributes",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "protocol": {
      "member": "containsValue(java.lang.Object value)",
      "comment": "Returns true if this Map maps one or more attribute names (keys) to the specified value.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "containsKey(java.lang.Object name)",
    "name": "containsKey",
    "containingClass": {
      "qualifiedName": "java.util.jar.Attributes",
      "name": "Attributes",
      "isArray": false
    },
    "targetClass": "java.util.jar.Attributes",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "name"
      }
    ],
    "protocol": {
      "member": "containsKey(java.lang.Object name)",
      "comment": "Returns true if this Map contains the specified attribute name (key).",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "putAll(java.util.Map<?, ?> attr)",
    "name": "putAll",
    "containingClass": {
      "qualifiedName": "java.util.jar.Attributes",
      "name": "Attributes",
      "isArray": false
    },
    "targetClass": "java.util.jar.Attributes",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "attr"
      }
    ],
    "protocol": {
      "member": "putAll(java.util.Map<?, ?> attr)",
      "comment": "Copies all of the attribute name-value mappings from the specified Attributes to this Map. Duplicate mappings will be replaced.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "clear()",
    "name": "clear",
    "containingClass": {
      "qualifiedName": "java.util.jar.Attributes",
      "name": "Attributes",
      "isArray": false
    },
    "targetClass": "java.util.jar.Attributes",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "clear()",
      "comment": "Removes all attributes from this Map.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "size()",
    "name": "size",
    "containingClass": {
      "qualifiedName": "java.util.jar.Attributes",
      "name": "Attributes",
      "isArray": false
    },
    "targetClass": "java.util.jar.Attributes",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "size()",
      "comment": "Returns the number of attributes in this Map.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "isEmpty()",
    "name": "isEmpty",
    "containingClass": {
      "qualifiedName": "java.util.jar.Attributes",
      "name": "Attributes",
      "isArray": false
    },
    "targetClass": "java.util.jar.Attributes",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "isEmpty()",
      "comment": "Returns true if this Map contains no attributes.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "keySet()",
    "name": "keySet",
    "containingClass": {
      "qualifiedName": "java.util.jar.Attributes",
      "name": "Attributes",
      "isArray": false
    },
    "targetClass": "java.util.jar.Attributes",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Set<java.lang.Object>",
      "name": "java.util.Set<java.lang.Object>",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "keySet()",
      "comment": "Returns a Set view of the attribute names (keys) contained in this Map.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "values()",
    "name": "values",
    "containingClass": {
      "qualifiedName": "java.util.jar.Attributes",
      "name": "Attributes",
      "isArray": false
    },
    "targetClass": "java.util.jar.Attributes",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Collection<java.lang.Object>",
      "name": "java.util.Collection<java.lang.Object>",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "values()",
      "comment": "Returns a Collection view of the attribute values contained in this Map.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "entrySet()",
    "name": "entrySet",
    "containingClass": {
      "qualifiedName": "java.util.jar.Attributes",
      "name": "Attributes",
      "isArray": false
    },
    "targetClass": "java.util.jar.Attributes",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Set<java.util.Map$Entry<java.lang.Object, java.lang.Object>>",
      "name": "java.util.Set<java.util.Map$Entry<java.lang.Object, java.lang.Object>>",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "entrySet()",
      "comment": "Returns a Collection view of the attribute name-value mappings contained in this Map.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "equals(java.lang.Object o)",
    "name": "equals",
    "containingClass": {
      "qualifiedName": "java.util.jar.Attributes",
      "name": "Attributes",
      "isArray": false
    },
    "targetClass": "java.util.jar.Attributes",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "o"
      }
    ],
    "protocol": {
      "member": "equals(java.lang.Object o)",
      "comment": "Compares the specified Attributes object with this Map for equality. Returns true if the given object is also an instance of Attributes and the two Attributes objects represent the same mappings.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "hashCode()",
    "name": "hashCode",
    "containingClass": {
      "qualifiedName": "java.util.jar.Attributes",
      "name": "Attributes",
      "isArray": false
    },
    "targetClass": "java.util.jar.Attributes",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "hashCode()",
      "comment": "Returns the hash code value for this Map.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "clone()",
    "name": "clone",
    "containingClass": {
      "qualifiedName": "java.util.jar.Attributes",
      "name": "Attributes",
      "isArray": false
    },
    "targetClass": "java.util.jar.Attributes",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Object",
      "name": "java.lang.Object",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "clone()",
      "comment": "Returns a copy of the Attributes, implemented as follows:  public Object method_0 { return method_1; }  Since the attribute names and values are themselves immutable, the Attributes returned can be safely modified without affecting the original.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "write(java.io.DataOutputStream os)",
    "name": "write",
    "containingClass": {
      "qualifiedName": "java.util.jar.Attributes",
      "name": "Attributes",
      "isArray": false
    },
    "targetClass": "java.util.jar.Attributes",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.DataOutputStream",
          "name": "DataOutputStream",
          "isArray": false
        },
        "name": "os"
      }
    ],
    "protocol": {
      "member": "write(java.io.DataOutputStream os)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "writeMain(java.io.DataOutputStream out)",
    "name": "writeMain",
    "containingClass": {
      "qualifiedName": "java.util.jar.Attributes",
      "name": "Attributes",
      "isArray": false
    },
    "targetClass": "java.util.jar.Attributes",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.DataOutputStream",
          "name": "DataOutputStream",
          "isArray": false
        },
        "name": "out"
      }
    ],
    "protocol": {
      "member": "writeMain(java.io.DataOutputStream out)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "read(java.util.jar.Manifest$FastInputStream is, byte[] lbuf)",
    "name": "read",
    "containingClass": {
      "qualifiedName": "java.util.jar.Attributes",
      "name": "Attributes",
      "isArray": false
    },
    "targetClass": "java.util.jar.Attributes",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.jar.Manifest$FastInputStream",
          "name": "FastInputStream",
          "isArray": false
        },
        "name": "is"
      },
      {
        "type": {
          "qualifiedName": "[B",
          "name": "byte[]",
          "isArray": true
        },
        "name": "lbuf"
      }
    ],
    "protocol": {
      "member": "read(java.util.jar.Manifest$FastInputStream is, byte[] lbuf)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  }
]