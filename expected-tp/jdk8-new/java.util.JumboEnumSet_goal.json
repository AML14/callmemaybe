[
  {
    "signature": "java.util.JumboEnumSet(java.lang.Class<E> elementType, java.lang.Enum<?>[] universe)",
    "name": "java.util.JumboEnumSet",
    "containingClass": {
      "qualifiedName": "java.util.JumboEnumSet",
      "name": "JumboEnumSet",
      "isArray": false
    },
    "targetClass": "java.util.JumboEnumSet",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Class",
          "name": "Class",
          "isArray": false
        },
        "name": "elementType"
      },
      {
        "type": {
          "qualifiedName": "[Ljava.lang.Enum;",
          "name": "Enum[]",
          "isArray": true
        },
        "name": "universe"
      }
    ],
    "protocol": {
      "member": "java.util.JumboEnumSet(java.lang.Class<E> elementType, java.lang.Enum<?>[] universe)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "addRange(E from, E to)",
    "name": "addRange",
    "containingClass": {
      "qualifiedName": "java.util.JumboEnumSet",
      "name": "JumboEnumSet",
      "isArray": false
    },
    "targetClass": "java.util.JumboEnumSet",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Enum",
          "name": "Enum",
          "isArray": false
        },
        "name": "from"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Enum",
          "name": "Enum",
          "isArray": false
        },
        "name": "to"
      }
    ],
    "protocol": {
      "member": "addRange(E from, E to)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "addAll()",
    "name": "addAll",
    "containingClass": {
      "qualifiedName": "java.util.JumboEnumSet",
      "name": "JumboEnumSet",
      "isArray": false
    },
    "targetClass": "java.util.JumboEnumSet",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "addAll()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "complement()",
    "name": "complement",
    "containingClass": {
      "qualifiedName": "java.util.JumboEnumSet",
      "name": "JumboEnumSet",
      "isArray": false
    },
    "targetClass": "java.util.JumboEnumSet",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "complement()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "iterator()",
    "name": "iterator",
    "containingClass": {
      "qualifiedName": "java.util.JumboEnumSet",
      "name": "JumboEnumSet",
      "isArray": false
    },
    "targetClass": "java.util.JumboEnumSet",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator<E>",
      "name": "java.util.Iterator<E>",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "iterator()",
      "comment": "Returns an iterator over the elements contained in this set. The iterator traverses the elements in their natural order (which is the order in which the enum constants are declared). The returned Iterator is a \"weakly consistent\" iterator that will never throw ConcurrentModificationException.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "size()",
    "name": "size",
    "containingClass": {
      "qualifiedName": "java.util.JumboEnumSet",
      "name": "JumboEnumSet",
      "isArray": false
    },
    "targetClass": "java.util.JumboEnumSet",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "size()",
      "comment": "Returns the number of elements in this set.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "isEmpty()",
    "name": "isEmpty",
    "containingClass": {
      "qualifiedName": "java.util.JumboEnumSet",
      "name": "JumboEnumSet",
      "isArray": false
    },
    "targetClass": "java.util.JumboEnumSet",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "isEmpty()",
      "comment": "Returns true if this set contains no elements.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "contains(java.lang.Object e)",
    "name": "contains",
    "containingClass": {
      "qualifiedName": "java.util.JumboEnumSet",
      "name": "JumboEnumSet",
      "isArray": false
    },
    "targetClass": "java.util.JumboEnumSet",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "e"
      }
    ],
    "protocol": {
      "member": "contains(java.lang.Object e)",
      "comment": "Returns true if this set contains the specified element.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "add(E e)",
    "name": "add",
    "containingClass": {
      "qualifiedName": "java.util.JumboEnumSet",
      "name": "JumboEnumSet",
      "isArray": false
    },
    "targetClass": "java.util.JumboEnumSet",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Enum",
          "name": "Enum",
          "isArray": false
        },
        "name": "e"
      }
    ],
    "protocol": {
      "member": "add(E e)",
      "comment": "Adds the specified element to this set if it is not already present.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "remove(java.lang.Object e)",
    "name": "remove",
    "containingClass": {
      "qualifiedName": "java.util.JumboEnumSet",
      "name": "JumboEnumSet",
      "isArray": false
    },
    "targetClass": "java.util.JumboEnumSet",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "e"
      }
    ],
    "protocol": {
      "member": "remove(java.lang.Object e)",
      "comment": "Removes the specified element from this set if it is present.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "containsAll(java.util.Collection<?> c)",
    "name": "containsAll",
    "containingClass": {
      "qualifiedName": "java.util.JumboEnumSet",
      "name": "JumboEnumSet",
      "isArray": false
    },
    "targetClass": "java.util.JumboEnumSet",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "c"
      }
    ],
    "protocol": {
      "member": "containsAll(java.util.Collection<?> c)",
      "comment": "Returns true if this set contains all of the elements in the specified collection.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "addAll(java.util.Collection<? extends E> c)",
    "name": "addAll",
    "containingClass": {
      "qualifiedName": "java.util.JumboEnumSet",
      "name": "JumboEnumSet",
      "isArray": false
    },
    "targetClass": "java.util.JumboEnumSet",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "c"
      }
    ],
    "protocol": {
      "member": "addAll(java.util.Collection<? extends E> c)",
      "comment": "Adds all of the elements in the specified collection to this set.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "removeAll(java.util.Collection<?> c)",
    "name": "removeAll",
    "containingClass": {
      "qualifiedName": "java.util.JumboEnumSet",
      "name": "JumboEnumSet",
      "isArray": false
    },
    "targetClass": "java.util.JumboEnumSet",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "c"
      }
    ],
    "protocol": {
      "member": "removeAll(java.util.Collection<?> c)",
      "comment": "Removes from this set all of its elements that are contained in the specified collection.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "retainAll(java.util.Collection<?> c)",
    "name": "retainAll",
    "containingClass": {
      "qualifiedName": "java.util.JumboEnumSet",
      "name": "JumboEnumSet",
      "isArray": false
    },
    "targetClass": "java.util.JumboEnumSet",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "c"
      }
    ],
    "protocol": {
      "member": "retainAll(java.util.Collection<?> c)",
      "comment": "Retains only the elements in this set that are contained in the specified collection.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "clear()",
    "name": "clear",
    "containingClass": {
      "qualifiedName": "java.util.JumboEnumSet",
      "name": "JumboEnumSet",
      "isArray": false
    },
    "targetClass": "java.util.JumboEnumSet",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "clear()",
      "comment": "Removes all of the elements from this set.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "equals(java.lang.Object o)",
    "name": "equals",
    "containingClass": {
      "qualifiedName": "java.util.JumboEnumSet",
      "name": "JumboEnumSet",
      "isArray": false
    },
    "targetClass": "java.util.JumboEnumSet",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "o"
      }
    ],
    "protocol": {
      "member": "equals(java.lang.Object o)",
      "comment": "Compares the specified object with this set for equality. Returns true if the given object is also a set, the two sets have the same size, and every member of the given set is contained in this set.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "clone()",
    "name": "clone",
    "containingClass": {
      "qualifiedName": "java.util.JumboEnumSet",
      "name": "JumboEnumSet",
      "isArray": false
    },
    "targetClass": "java.util.JumboEnumSet",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.EnumSet<E>",
      "name": "java.util.EnumSet<E>",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "clone()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  }
]