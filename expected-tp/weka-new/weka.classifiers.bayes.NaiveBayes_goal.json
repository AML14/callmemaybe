[
  {
    "signature": "globalInfo()",
    "name": "globalInfo",
    "containingClass": {
      "qualifiedName": "weka.classifiers.bayes.NaiveBayes",
      "name": "NaiveBayes",
      "isArray": false
    },
    "targetClass": "weka.classifiers.bayes.NaiveBayes",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "globalInfo()",
      "comment": "Returns a string describing this classifier",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getTechnicalInformation()",
    "name": "getTechnicalInformation",
    "containingClass": {
      "qualifiedName": "weka.classifiers.bayes.NaiveBayes",
      "name": "NaiveBayes",
      "isArray": false
    },
    "targetClass": "weka.classifiers.bayes.NaiveBayes",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "weka.core.TechnicalInformation",
      "name": "weka.core.TechnicalInformation",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getTechnicalInformation()",
      "comment": "Returns an instance of a TechnicalInformation object, containing detailed information about the technical background of this class, emethod_0., paper reference or book this class is based on.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getCapabilities()",
    "name": "getCapabilities",
    "containingClass": {
      "qualifiedName": "weka.classifiers.bayes.NaiveBayes",
      "name": "NaiveBayes",
      "isArray": false
    },
    "targetClass": "weka.classifiers.bayes.NaiveBayes",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "weka.core.Capabilities",
      "name": "weka.core.Capabilities",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getCapabilities()",
      "comment": "Returns default capabilities of the classifier.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "buildClassifier(weka.core.Instances instances)",
    "name": "buildClassifier",
    "containingClass": {
      "qualifiedName": "weka.classifiers.bayes.NaiveBayes",
      "name": "NaiveBayes",
      "isArray": false
    },
    "targetClass": "weka.classifiers.bayes.NaiveBayes",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "weka.core.Instances",
          "name": "Instances",
          "isArray": false
        },
        "name": "instances"
      }
    ],
    "protocol": {
      "member": "buildClassifier(weka.core.Instances instances)",
      "comment": "Generates the classifier.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "updateClassifier(weka.core.Instance instance)",
    "name": "updateClassifier",
    "containingClass": {
      "qualifiedName": "weka.classifiers.bayes.NaiveBayes",
      "name": "NaiveBayes",
      "isArray": false
    },
    "targetClass": "weka.classifiers.bayes.NaiveBayes",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "weka.core.Instance",
          "name": "Instance",
          "isArray": false
        },
        "name": "instance"
      }
    ],
    "protocol": {
      "member": "updateClassifier(weka.core.Instance instance)",
      "comment": "Updates the classifier with the given instance.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "distributionForInstance(weka.core.Instance instance)",
    "name": "distributionForInstance",
    "containingClass": {
      "qualifiedName": "weka.classifiers.bayes.NaiveBayes",
      "name": "NaiveBayes",
      "isArray": false
    },
    "targetClass": "weka.classifiers.bayes.NaiveBayes",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[]",
      "name": "double[]",
      "isArray": true
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "weka.core.Instance",
          "name": "Instance",
          "isArray": false
        },
        "name": "instance"
      }
    ],
    "protocol": {
      "member": "distributionForInstance(weka.core.Instance instance)",
      "comment": "Calculates the class membership probabilities for the given test instance.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "listOptions()",
    "name": "listOptions",
    "containingClass": {
      "qualifiedName": "weka.classifiers.bayes.NaiveBayes",
      "name": "NaiveBayes",
      "isArray": false
    },
    "targetClass": "weka.classifiers.bayes.NaiveBayes",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Enumeration<weka.core.Option>",
      "name": "java.util.Enumeration<weka.core.Option>",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "listOptions()",
      "comment": "Returns an enumeration describing the available options.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setOptions(java.lang.String[] options)",
    "name": "setOptions",
    "containingClass": {
      "qualifiedName": "weka.classifiers.bayes.NaiveBayes",
      "name": "NaiveBayes",
      "isArray": false
    },
    "targetClass": "weka.classifiers.bayes.NaiveBayes",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Ljava.lang.String;",
          "name": "String[]",
          "isArray": true
        },
        "name": "options"
      }
    ],
    "protocol": {
      "member": "setOptions(java.lang.String[] options)",
      "comment": "Parses a given list of options.   -K Use kernel density estimator rather than normal distribution for numeric attributes   -D Use supervised discretization to process numeric attributes   -O Display model in old format (good when there are many classes)  <!-- options-end -->",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getOptions()",
    "name": "getOptions",
    "containingClass": {
      "qualifiedName": "weka.classifiers.bayes.NaiveBayes",
      "name": "NaiveBayes",
      "isArray": false
    },
    "targetClass": "weka.classifiers.bayes.NaiveBayes",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String[]",
      "name": "java.lang.String[]",
      "isArray": true
    },
    "parameters": [],
    "protocol": {
      "member": "getOptions()",
      "comment": "Gets the current settings of the classifier.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "toString()",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "weka.classifiers.bayes.NaiveBayes",
      "name": "NaiveBayes",
      "isArray": false
    },
    "targetClass": "weka.classifiers.bayes.NaiveBayes",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "toString()",
      "comment": "Returns a description of the classifier.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "toStringOriginal()",
    "name": "toStringOriginal",
    "containingClass": {
      "qualifiedName": "weka.classifiers.bayes.NaiveBayes",
      "name": "NaiveBayes",
      "isArray": false
    },
    "targetClass": "weka.classifiers.bayes.NaiveBayes",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "toStringOriginal()",
      "comment": "Returns a description of the classifier in the old format.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "useKernelEstimatorTipText()",
    "name": "useKernelEstimatorTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.bayes.NaiveBayes",
      "name": "NaiveBayes",
      "isArray": false
    },
    "targetClass": "weka.classifiers.bayes.NaiveBayes",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "useKernelEstimatorTipText()",
      "comment": "Returns the tip text for this property",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getUseKernelEstimator()",
    "name": "getUseKernelEstimator",
    "containingClass": {
      "qualifiedName": "weka.classifiers.bayes.NaiveBayes",
      "name": "NaiveBayes",
      "isArray": false
    },
    "targetClass": "weka.classifiers.bayes.NaiveBayes",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getUseKernelEstimator()",
      "comment": "Gets if kernel estimator is being used.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setUseKernelEstimator(boolean v)",
    "name": "setUseKernelEstimator",
    "containingClass": {
      "qualifiedName": "weka.classifiers.bayes.NaiveBayes",
      "name": "NaiveBayes",
      "isArray": false
    },
    "targetClass": "weka.classifiers.bayes.NaiveBayes",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "v"
      }
    ],
    "protocol": {
      "member": "setUseKernelEstimator(boolean v)",
      "comment": "Sets if kernel estimator is to be used.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "useSupervisedDiscretizationTipText()",
    "name": "useSupervisedDiscretizationTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.bayes.NaiveBayes",
      "name": "NaiveBayes",
      "isArray": false
    },
    "targetClass": "weka.classifiers.bayes.NaiveBayes",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "useSupervisedDiscretizationTipText()",
      "comment": "Returns the tip text for this property",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getUseSupervisedDiscretization()",
    "name": "getUseSupervisedDiscretization",
    "containingClass": {
      "qualifiedName": "weka.classifiers.bayes.NaiveBayes",
      "name": "NaiveBayes",
      "isArray": false
    },
    "targetClass": "weka.classifiers.bayes.NaiveBayes",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getUseSupervisedDiscretization()",
      "comment": "Get whether supervised discretization is to be used.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setUseSupervisedDiscretization(boolean newblah)",
    "name": "setUseSupervisedDiscretization",
    "containingClass": {
      "qualifiedName": "weka.classifiers.bayes.NaiveBayes",
      "name": "NaiveBayes",
      "isArray": false
    },
    "targetClass": "weka.classifiers.bayes.NaiveBayes",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "newblah"
      }
    ],
    "protocol": {
      "member": "setUseSupervisedDiscretization(boolean newblah)",
      "comment": "Set whether supervised discretization is to be used.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "displayModelInOldFormatTipText()",
    "name": "displayModelInOldFormatTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.bayes.NaiveBayes",
      "name": "NaiveBayes",
      "isArray": false
    },
    "targetClass": "weka.classifiers.bayes.NaiveBayes",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "displayModelInOldFormatTipText()",
      "comment": "Returns the tip text for this property",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setDisplayModelInOldFormat(boolean d)",
    "name": "setDisplayModelInOldFormat",
    "containingClass": {
      "qualifiedName": "weka.classifiers.bayes.NaiveBayes",
      "name": "NaiveBayes",
      "isArray": false
    },
    "targetClass": "weka.classifiers.bayes.NaiveBayes",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "d"
      }
    ],
    "protocol": {
      "member": "setDisplayModelInOldFormat(boolean d)",
      "comment": "Set whether to display model output in the old, original format.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getDisplayModelInOldFormat()",
    "name": "getDisplayModelInOldFormat",
    "containingClass": {
      "qualifiedName": "weka.classifiers.bayes.NaiveBayes",
      "name": "NaiveBayes",
      "isArray": false
    },
    "targetClass": "weka.classifiers.bayes.NaiveBayes",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getDisplayModelInOldFormat()",
      "comment": "Get whether to display model output in the old, original format.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getHeader()",
    "name": "getHeader",
    "containingClass": {
      "qualifiedName": "weka.classifiers.bayes.NaiveBayes",
      "name": "NaiveBayes",
      "isArray": false
    },
    "targetClass": "weka.classifiers.bayes.NaiveBayes",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "weka.core.Instances",
      "name": "weka.core.Instances",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getHeader()",
      "comment": "Return the header that this classifier was trained with",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getConditionalEstimators()",
    "name": "getConditionalEstimators",
    "containingClass": {
      "qualifiedName": "weka.classifiers.bayes.NaiveBayes",
      "name": "NaiveBayes",
      "isArray": false
    },
    "targetClass": "weka.classifiers.bayes.NaiveBayes",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "weka.estimators.Estimator[][]",
      "name": "weka.estimators.Estimator[][]",
      "isArray": true
    },
    "parameters": [],
    "protocol": {
      "member": "getConditionalEstimators()",
      "comment": "Get all the conditional estimators.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getClassEstimator()",
    "name": "getClassEstimator",
    "containingClass": {
      "qualifiedName": "weka.classifiers.bayes.NaiveBayes",
      "name": "NaiveBayes",
      "isArray": false
    },
    "targetClass": "weka.classifiers.bayes.NaiveBayes",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "weka.estimators.Estimator",
      "name": "weka.estimators.Estimator",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getClassEstimator()",
      "comment": "Get the class estimator.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getRevision()",
    "name": "getRevision",
    "containingClass": {
      "qualifiedName": "weka.classifiers.bayes.NaiveBayes",
      "name": "NaiveBayes",
      "isArray": false
    },
    "targetClass": "weka.classifiers.bayes.NaiveBayes",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getRevision()",
      "comment": "Returns the revision string.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "aggregate(weka.classifiers.bayes.NaiveBayes toAggregate)",
    "name": "aggregate",
    "containingClass": {
      "qualifiedName": "weka.classifiers.bayes.NaiveBayes",
      "name": "NaiveBayes",
      "isArray": false
    },
    "targetClass": "weka.classifiers.bayes.NaiveBayes",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "weka.classifiers.bayes.NaiveBayes",
      "name": "weka.classifiers.bayes.NaiveBayes",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "weka.classifiers.bayes.NaiveBayes",
          "name": "NaiveBayes",
          "isArray": false
        },
        "name": "toAggregate"
      }
    ],
    "protocol": {
      "member": "aggregate(weka.classifiers.bayes.NaiveBayes toAggregate)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "finalizeAggregation()",
    "name": "finalizeAggregation",
    "containingClass": {
      "qualifiedName": "weka.classifiers.bayes.NaiveBayes",
      "name": "NaiveBayes",
      "isArray": false
    },
    "targetClass": "weka.classifiers.bayes.NaiveBayes",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "finalizeAggregation()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "main(java.lang.String[] argv)",
    "name": "main",
    "containingClass": {
      "qualifiedName": "weka.classifiers.bayes.NaiveBayes",
      "name": "NaiveBayes",
      "isArray": false
    },
    "targetClass": "weka.classifiers.bayes.NaiveBayes",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Ljava.lang.String;",
          "name": "String[]",
          "isArray": true
        },
        "name": "argv"
      }
    ],
    "protocol": {
      "member": "main(java.lang.String[] argv)",
      "comment": "Main method for testing this class.",
      "kind": "FreeText",
      "condition": ""
    }
  }
]