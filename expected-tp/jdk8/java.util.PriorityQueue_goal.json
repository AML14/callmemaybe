[
  {
    "signature": "java.util.PriorityQueue()",
    "name": "java.util.PriorityQueue",
    "containingClass": {
      "qualifiedName": "java.util.PriorityQueue",
      "name": "PriorityQueue",
      "isArray": false
    },
    "targetClass": "java.util.PriorityQueue",
    "isVarArgs": false,
    "parameters": [],
    "protocol": {
      "member": "java.util.PriorityQueue()",
      "comment": "Creates a PriorityQueue with the default initial capacity (11) that orders its elements according to their Comparable natural ordering.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "java.util.PriorityQueue(int initialCapacity)",
    "name": "java.util.PriorityQueue",
    "containingClass": {
      "qualifiedName": "java.util.PriorityQueue",
      "name": "PriorityQueue",
      "isArray": false
    },
    "targetClass": "java.util.PriorityQueue",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "initialCapacity"
      }
    ],
    "protocol": {
      "member": "java.util.PriorityQueue(int initialCapacity)",
      "comment": "Creates a PriorityQueue with the specified initial capacity that orders its elements according to their Comparable natural ordering.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "java.util.PriorityQueue(java.util.Comparator<? super E> comparator)",
    "name": "java.util.PriorityQueue",
    "containingClass": {
      "qualifiedName": "java.util.PriorityQueue",
      "name": "PriorityQueue",
      "isArray": false
    },
    "targetClass": "java.util.PriorityQueue",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Comparator",
          "name": "Comparator",
          "isArray": false
        },
        "name": "comparator"
      }
    ],
    "protocol": {
      "member": "java.util.PriorityQueue(java.util.Comparator<? super E> comparator)",
      "comment": "Creates a PriorityQueue with the default initial capacity and whose elements are ordered according to the specified comparator.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "java.util.PriorityQueue(int initialCapacity, java.util.Comparator<? super E> comparator)",
    "name": "java.util.PriorityQueue",
    "containingClass": {
      "qualifiedName": "java.util.PriorityQueue",
      "name": "PriorityQueue",
      "isArray": false
    },
    "targetClass": "java.util.PriorityQueue",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "initialCapacity"
      },
      {
        "type": {
          "qualifiedName": "java.util.Comparator",
          "name": "Comparator",
          "isArray": false
        },
        "name": "comparator"
      }
    ],
    "protocol": {
      "member": "java.util.PriorityQueue(int initialCapacity, java.util.Comparator<? super E> comparator)",
      "comment": "Creates a PriorityQueue with the specified initial capacity that orders its elements according to the specified comparator.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "java.util.PriorityQueue(java.util.Collection<? extends E> c)",
    "name": "java.util.PriorityQueue",
    "containingClass": {
      "qualifiedName": "java.util.PriorityQueue",
      "name": "PriorityQueue",
      "isArray": false
    },
    "targetClass": "java.util.PriorityQueue",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "c"
      }
    ],
    "protocol": {
      "member": "java.util.PriorityQueue(java.util.Collection<? extends E> c)",
      "comment": "Creates a PriorityQueue containing the elements in the specified collection. If the specified collection is an instance of a SortedSet or is another PriorityQueue, this priority queue will be ordered according to the same ordering. Otherwise, this priority queue will be ordered according to the Comparable natural ordering of its elements.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "java.util.PriorityQueue(java.util.PriorityQueue<? extends E> c)",
    "name": "java.util.PriorityQueue",
    "containingClass": {
      "qualifiedName": "java.util.PriorityQueue",
      "name": "PriorityQueue",
      "isArray": false
    },
    "targetClass": "java.util.PriorityQueue",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.PriorityQueue",
          "name": "PriorityQueue",
          "isArray": false
        },
        "name": "c"
      }
    ],
    "protocol": {
      "member": "java.util.PriorityQueue(java.util.PriorityQueue<? extends E> c)",
      "comment": "Creates a PriorityQueue containing the elements in the specified priority queue. This priority queue will be ordered according to the same ordering as the given priority queue.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "java.util.PriorityQueue(java.util.SortedSet<? extends E> c)",
    "name": "java.util.PriorityQueue",
    "containingClass": {
      "qualifiedName": "java.util.PriorityQueue",
      "name": "PriorityQueue",
      "isArray": false
    },
    "targetClass": "java.util.PriorityQueue",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.SortedSet",
          "name": "SortedSet",
          "isArray": false
        },
        "name": "c"
      }
    ],
    "protocol": {
      "member": "java.util.PriorityQueue(java.util.SortedSet<? extends E> c)",
      "comment": "Creates a PriorityQueue containing the elements in the specified sorted set. This priority queue will be ordered according to the same ordering as the given sorted set.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "add(E e)",
    "name": "add",
    "containingClass": {
      "qualifiedName": "java.util.PriorityQueue",
      "name": "PriorityQueue",
      "isArray": false
    },
    "targetClass": "java.util.PriorityQueue",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "e"
      }
    ],
    "protocol": {
      "member": "add(E e)",
      "comment": "Inserts the specified element into this priority queue.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "offer(E e)",
    "name": "offer",
    "containingClass": {
      "qualifiedName": "java.util.PriorityQueue",
      "name": "PriorityQueue",
      "isArray": false
    },
    "targetClass": "java.util.PriorityQueue",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "e"
      }
    ],
    "protocol": {
      "member": "offer(E e)",
      "comment": "Inserts the specified element into this priority queue.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "peek()",
    "name": "peek",
    "containingClass": {
      "qualifiedName": "java.util.PriorityQueue",
      "name": "PriorityQueue",
      "isArray": false
    },
    "targetClass": "java.util.PriorityQueue",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "E",
      "name": "E",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "peek()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "remove(java.lang.Object o)",
    "name": "remove",
    "containingClass": {
      "qualifiedName": "java.util.PriorityQueue",
      "name": "PriorityQueue",
      "isArray": false
    },
    "targetClass": "java.util.PriorityQueue",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "o"
      }
    ],
    "protocol": {
      "member": "remove(java.lang.Object o)",
      "comment": "Removes a single instance of the specified element from this queue, if it is present. More formally, removes an element e such that method_0, if this queue contains one or more such elements. Returns true if and only if this queue contained the specified element (or equivalently, if this queue changed as a result of the call).",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "removeEq(java.lang.Object o)",
    "name": "removeEq",
    "containingClass": {
      "qualifiedName": "java.util.PriorityQueue",
      "name": "PriorityQueue",
      "isArray": false
    },
    "targetClass": "java.util.PriorityQueue",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "o"
      }
    ],
    "protocol": {
      "member": "removeEq(java.lang.Object o)",
      "comment": "Version of remove using reference equality, not equals. Needed by iteratormethod_0.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "contains(java.lang.Object o)",
    "name": "contains",
    "containingClass": {
      "qualifiedName": "java.util.PriorityQueue",
      "name": "PriorityQueue",
      "isArray": false
    },
    "targetClass": "java.util.PriorityQueue",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "o"
      }
    ],
    "protocol": {
      "member": "contains(java.lang.Object o)",
      "comment": "Returns true if this queue contains the specified element. More formally, returns true if and only if this queue contains at least one element e such that method_0.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "toArray()",
    "name": "toArray",
    "containingClass": {
      "qualifiedName": "java.util.PriorityQueue",
      "name": "PriorityQueue",
      "isArray": false
    },
    "targetClass": "java.util.PriorityQueue",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Object[]",
      "name": "java.lang.Object[]",
      "isArray": true
    },
    "parameters": [],
    "protocol": {
      "member": "toArray()",
      "comment": "Returns an array containing all of the elements in this queue. The elements are in no particular order. The returned array will be \"safe\" in that no references to it are maintained by this queue. (In other words, this method must allocate a new array). The caller is thus free to modify the returned array. This method acts as bridge between array-based and collection-based APIs.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "toArray(T[] a)",
    "name": "toArray",
    "containingClass": {
      "qualifiedName": "java.util.PriorityQueue",
      "name": "PriorityQueue",
      "isArray": false
    },
    "targetClass": "java.util.PriorityQueue",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T[]",
      "name": "T[]",
      "isArray": true
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Ljava.lang.Object;",
          "name": "Object[]",
          "isArray": true
        },
        "name": "a"
      }
    ],
    "protocol": {
      "member": "toArray(T[] a)",
      "comment": "Returns an array containing all of the elements in this queue; the runtime type of the returned array is that of the specified array. The returned array elements are in no particular order. If the queue fits in the specified array, it is returned therein. Otherwise, a new array is allocated with the runtime type of the specified array and the size of this queue. If the queue fits in the specified array with room to spare (imethod_4., the array has more elements than the queue), the element in the array immediately following the end of the collection is set to null. Like the method_0 method, this method acts as bridge between array-based and collection-based APIs. Further, this method allows precise control over the runtime type of the output array, and may, under certain circumstances, be used to save allocation costs. Suppose x is a queue known to contain only strings. The following code can be used to dump the queue into a newly allocated array of String}:  {@code String[] y = method_1; Note that method_2 is identical in function to method_0.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "iterator()",
    "name": "iterator",
    "containingClass": {
      "qualifiedName": "java.util.PriorityQueue",
      "name": "PriorityQueue",
      "isArray": false
    },
    "targetClass": "java.util.PriorityQueue",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator<E>",
      "name": "java.util.Iterator<E>",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "iterator()",
      "comment": "Returns an iterator over the elements in this queue. The iterator does not return the elements in any particular order.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "size()",
    "name": "size",
    "containingClass": {
      "qualifiedName": "java.util.PriorityQueue",
      "name": "PriorityQueue",
      "isArray": false
    },
    "targetClass": "java.util.PriorityQueue",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "size()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "clear()",
    "name": "clear",
    "containingClass": {
      "qualifiedName": "java.util.PriorityQueue",
      "name": "PriorityQueue",
      "isArray": false
    },
    "targetClass": "java.util.PriorityQueue",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "clear()",
      "comment": "Removes all of the elements from this priority queue. The queue will be empty after this call returns.",
      "kind": "FreeText",
      "condition": "receiverObjectID.isEmpty()<-receiverObjectID.clear()"
    }
  },
  {
    "signature": "poll()",
    "name": "poll",
    "containingClass": {
      "qualifiedName": "java.util.PriorityQueue",
      "name": "PriorityQueue",
      "isArray": false
    },
    "targetClass": "java.util.PriorityQueue",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "E",
      "name": "E",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "poll()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "comparator()",
    "name": "comparator",
    "containingClass": {
      "qualifiedName": "java.util.PriorityQueue",
      "name": "PriorityQueue",
      "isArray": false
    },
    "targetClass": "java.util.PriorityQueue",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Comparator<? super E>",
      "name": "java.util.Comparator<? super E>",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "comparator()",
      "comment": "Returns the comparator used to order the elements in this queue, or null if this queue is sorted according to the Comparable natural ordering of its elements.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "spliterator()",
    "name": "spliterator",
    "containingClass": {
      "qualifiedName": "java.util.PriorityQueue",
      "name": "PriorityQueue",
      "isArray": false
    },
    "targetClass": "java.util.PriorityQueue",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Spliterator<E>",
      "name": "java.util.Spliterator<E>",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "spliterator()",
      "comment": "Creates a <a href=\"method_0method_1\">late-binding</a> and fail-fast Spliterator over the elements in this queue. The Spliterator reports method_2, method_3, and method_4. Overriding implementations should document the reporting of additional characteristic values.",
      "kind": "FreeText",
      "condition": ""
    }
  }
]