[
  {
    "signature": "globalInfo()",
    "name": "globalInfo",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "globalInfo()",
      "comment": "Returns a string describing classifier",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getTechnicalInformation()",
    "name": "getTechnicalInformation",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "weka.core.TechnicalInformation",
      "name": "weka.core.TechnicalInformation",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getTechnicalInformation()",
      "comment": "Returns an instance of a TechnicalInformation object, containing detailed information about the technical background of this class, emethod_0., paper reference or book this class is based on.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getCapabilities()",
    "name": "getCapabilities",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "weka.core.Capabilities",
      "name": "weka.core.Capabilities",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getCapabilities()",
      "comment": "Returns default capabilities of the classifier.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "buildClassifier(weka.core.Instances instances)",
    "name": "buildClassifier",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "weka.core.Instances",
          "name": "Instances",
          "isArray": false
        },
        "name": "instances"
      }
    ],
    "protocol": {
      "member": "buildClassifier(weka.core.Instances instances)",
      "comment": "Generates the classifier.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "classifyInstance(weka.core.Instance instance)",
    "name": "classifyInstance",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "weka.core.Instance",
          "name": "Instance",
          "isArray": false
        },
        "name": "instance"
      }
    ],
    "protocol": {
      "member": "classifyInstance(weka.core.Instance instance)",
      "comment": "Classifies an instance.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "distributionForInstance(weka.core.Instance instance)",
    "name": "distributionForInstance",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[]",
      "name": "double[]",
      "isArray": true
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "weka.core.Instance",
          "name": "Instance",
          "isArray": false
        },
        "name": "instance"
      }
    ],
    "protocol": {
      "member": "distributionForInstance(weka.core.Instance instance)",
      "comment": "Returns class probabilities for an instance.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "graphType()",
    "name": "graphType",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "graphType()",
      "comment": "Returns the type of graph this classifier represents.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "graph()",
    "name": "graph",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "graph()",
      "comment": "Returns graph describing the tree.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "prefix()",
    "name": "prefix",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "prefix()",
      "comment": "Returns tree in prefix order.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "toSource(java.lang.String className)",
    "name": "toSource",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "className"
      }
    ],
    "protocol": {
      "member": "toSource(java.lang.String className)",
      "comment": "Returns tree as an if-then statement.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "listOptions()",
    "name": "listOptions",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Enumeration<weka.core.Option>",
      "name": "java.util.Enumeration<weka.core.Option>",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "listOptions()",
      "comment": "Returns an enumeration describing the available options. Valid options are:  -U <br> Use unpruned tree.  -C confidence <br> Set confidence threshold for pruning. (Default: 0method_0)  -M number <br> Set minimum number of instances per leaf. (Default: 2)  -R <br> Use reduced error pruning. No subtree raising is performed.  -N number <br> Set number of folds for reduced error pruning. One fold is used as the pruning set. (Default: 3)  -B <br> Use binary splits for nominal attributes.  -S <br> Don't perform subtree raising.  -L <br> Do not clean up after the tree has been built. -A <br> If set, Laplace smoothing is used for predicted probabilites.  -Q <br> The seed for reduced-error pruning.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setOptions(java.lang.String[] options)",
    "name": "setOptions",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Ljava.lang.String;",
          "name": "String[]",
          "isArray": true
        },
        "name": "options"
      }
    ],
    "protocol": {
      "member": "setOptions(java.lang.String[] options)",
      "comment": "Parses a given list of options.   -U Use unpruned tree.   -O Do not collapse tree.   -C <pruning confidence> Set confidence threshold for pruning. (default 0method_0)   -M <minimum number of instances> Set minimum number of instances per leaf. (default 2)   -R Use reduced error pruning.   -N <number of folds> Set number of folds for reduced error pruning. One fold is used as pruning set. (default 3)   -B Use binary splits only.   -S Don't perform subtree raising.   -L Do not clean up after the tree has been built.   -A Laplace smoothing for predicted probabilities.   -J Do not use MDL correction for info gain on numeric attributes.   -Q <seed> Seed for random data shuffling (default 1).   -doNotMakeSplitPointActualValue Do not make split point actual value.  <!-- options-end -->",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getOptions()",
    "name": "getOptions",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String[]",
      "name": "java.lang.String[]",
      "isArray": true
    },
    "parameters": [],
    "protocol": {
      "member": "getOptions()",
      "comment": "Gets the current settings of the Classifier.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "seedTipText()",
    "name": "seedTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "seedTipText()",
      "comment": "Returns the tip text for this property",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getSeed()",
    "name": "getSeed",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getSeed()",
      "comment": "Get the value of Seed.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setSeed(int newSeed)",
    "name": "setSeed",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "newSeed"
      }
    ],
    "protocol": {
      "member": "setSeed(int newSeed)",
      "comment": "Set the value of Seed.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "useLaplaceTipText()",
    "name": "useLaplaceTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "useLaplaceTipText()",
      "comment": "Returns the tip text for this property",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getUseLaplace()",
    "name": "getUseLaplace",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getUseLaplace()",
      "comment": "Get the value of useLaplace.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setUseLaplace(boolean newuseLaplace)",
    "name": "setUseLaplace",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "newuseLaplace"
      }
    ],
    "protocol": {
      "member": "setUseLaplace(boolean newuseLaplace)",
      "comment": "Set the value of useLaplace.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "useMDLcorrectionTipText()",
    "name": "useMDLcorrectionTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "useMDLcorrectionTipText()",
      "comment": "Returns the tip text for this property",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getUseMDLcorrection()",
    "name": "getUseMDLcorrection",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getUseMDLcorrection()",
      "comment": "Get the value of useMDLcorrection.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setUseMDLcorrection(boolean newuseMDLcorrection)",
    "name": "setUseMDLcorrection",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "newuseMDLcorrection"
      }
    ],
    "protocol": {
      "member": "setUseMDLcorrection(boolean newuseMDLcorrection)",
      "comment": "Set the value of useMDLcorrection.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "toString()",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "toString()",
      "comment": "Returns a description of the classifier.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "toSummaryString()",
    "name": "toSummaryString",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "toSummaryString()",
      "comment": "Returns a superconcise version of the model",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "measureTreeSize()",
    "name": "measureTreeSize",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "measureTreeSize()",
      "comment": "Returns the size of the tree",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "measureNumLeaves()",
    "name": "measureNumLeaves",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "measureNumLeaves()",
      "comment": "Returns the number of leaves",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "measureNumRules()",
    "name": "measureNumRules",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "measureNumRules()",
      "comment": "Returns the number of rules (same as number of leaves)",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "enumerateMeasures()",
    "name": "enumerateMeasures",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Enumeration<java.lang.String>",
      "name": "java.util.Enumeration<java.lang.String>",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "enumerateMeasures()",
      "comment": "Returns an enumeration of the additional measure names",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getMeasure(java.lang.String additionalMeasureName)",
    "name": "getMeasure",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "additionalMeasureName"
      }
    ],
    "protocol": {
      "member": "getMeasure(java.lang.String additionalMeasureName)",
      "comment": "Returns the value of the named measure",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "unprunedTipText()",
    "name": "unprunedTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "unprunedTipText()",
      "comment": "Returns the tip text for this property",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getUnpruned()",
    "name": "getUnpruned",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getUnpruned()",
      "comment": "Get the value of unpruned.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setUnpruned(boolean v)",
    "name": "setUnpruned",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "v"
      }
    ],
    "protocol": {
      "member": "setUnpruned(boolean v)",
      "comment": "Set the value of unpruned. Turns reduced-error pruning off if set.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "collapseTreeTipText()",
    "name": "collapseTreeTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "collapseTreeTipText()",
      "comment": "Returns the tip text for this property",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getCollapseTree()",
    "name": "getCollapseTree",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getCollapseTree()",
      "comment": "Get the value of collapseTree.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setCollapseTree(boolean v)",
    "name": "setCollapseTree",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "v"
      }
    ],
    "protocol": {
      "member": "setCollapseTree(boolean v)",
      "comment": "Set the value of collapseTree.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "confidenceFactorTipText()",
    "name": "confidenceFactorTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "confidenceFactorTipText()",
      "comment": "Returns the tip text for this property",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getConfidenceFactor()",
    "name": "getConfidenceFactor",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "float",
      "name": "float",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getConfidenceFactor()",
      "comment": "Get the value of CF.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setConfidenceFactor(float v)",
    "name": "setConfidenceFactor",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "float",
          "name": "float",
          "isArray": false
        },
        "name": "v"
      }
    ],
    "protocol": {
      "member": "setConfidenceFactor(float v)",
      "comment": "Set the value of CF.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "minNumObjTipText()",
    "name": "minNumObjTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "minNumObjTipText()",
      "comment": "Returns the tip text for this property",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getMinNumObj()",
    "name": "getMinNumObj",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getMinNumObj()",
      "comment": "Get the value of minNumObj.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setMinNumObj(int v)",
    "name": "setMinNumObj",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "v"
      }
    ],
    "protocol": {
      "member": "setMinNumObj(int v)",
      "comment": "Set the value of minNumObj.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "reducedErrorPruningTipText()",
    "name": "reducedErrorPruningTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "reducedErrorPruningTipText()",
      "comment": "Returns the tip text for this property",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getReducedErrorPruning()",
    "name": "getReducedErrorPruning",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getReducedErrorPruning()",
      "comment": "Get the value of reducedErrorPruning.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setReducedErrorPruning(boolean v)",
    "name": "setReducedErrorPruning",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "v"
      }
    ],
    "protocol": {
      "member": "setReducedErrorPruning(boolean v)",
      "comment": "Set the value of reducedErrorPruning. Turns unpruned trees off if set.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "numFoldsTipText()",
    "name": "numFoldsTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "numFoldsTipText()",
      "comment": "Returns the tip text for this property",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getNumFolds()",
    "name": "getNumFolds",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getNumFolds()",
      "comment": "Get the value of numFolds.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setNumFolds(int v)",
    "name": "setNumFolds",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "v"
      }
    ],
    "protocol": {
      "member": "setNumFolds(int v)",
      "comment": "Set the value of numFolds.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "binarySplitsTipText()",
    "name": "binarySplitsTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "binarySplitsTipText()",
      "comment": "Returns the tip text for this property",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getBinarySplits()",
    "name": "getBinarySplits",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getBinarySplits()",
      "comment": "Get the value of binarySplits.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setBinarySplits(boolean v)",
    "name": "setBinarySplits",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "v"
      }
    ],
    "protocol": {
      "member": "setBinarySplits(boolean v)",
      "comment": "Set the value of binarySplits.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "subtreeRaisingTipText()",
    "name": "subtreeRaisingTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "subtreeRaisingTipText()",
      "comment": "Returns the tip text for this property",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getSubtreeRaising()",
    "name": "getSubtreeRaising",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getSubtreeRaising()",
      "comment": "Get the value of subtreeRaising.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setSubtreeRaising(boolean v)",
    "name": "setSubtreeRaising",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "v"
      }
    ],
    "protocol": {
      "member": "setSubtreeRaising(boolean v)",
      "comment": "Set the value of subtreeRaising.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "saveInstanceDataTipText()",
    "name": "saveInstanceDataTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "saveInstanceDataTipText()",
      "comment": "Returns the tip text for this property",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getSaveInstanceData()",
    "name": "getSaveInstanceData",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getSaveInstanceData()",
      "comment": "Check whether instance data is to be saved.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setSaveInstanceData(boolean v)",
    "name": "setSaveInstanceData",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "v"
      }
    ],
    "protocol": {
      "member": "setSaveInstanceData(boolean v)",
      "comment": "Set whether instance data is to be saved.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "doNotMakeSplitPointActualValueTipText()",
    "name": "doNotMakeSplitPointActualValueTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "doNotMakeSplitPointActualValueTipText()",
      "comment": "Returns the tip text for this property",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getDoNotMakeSplitPointActualValue()",
    "name": "getDoNotMakeSplitPointActualValue",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getDoNotMakeSplitPointActualValue()",
      "comment": "Gets the value of doNotMakeSplitPointActualValue.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setDoNotMakeSplitPointActualValue(boolean m_doNotMakeSplitPointActualValue)",
    "name": "setDoNotMakeSplitPointActualValue",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "m_doNotMakeSplitPointActualValue"
      }
    ],
    "protocol": {
      "member": "setDoNotMakeSplitPointActualValue(boolean m_doNotMakeSplitPointActualValue)",
      "comment": "Sets the value of doNotMakeSplitPointActualValue.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getRevision()",
    "name": "getRevision",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getRevision()",
      "comment": "Returns the revision string.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "generatePartition(weka.core.Instances data)",
    "name": "generatePartition",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "weka.core.Instances",
          "name": "Instances",
          "isArray": false
        },
        "name": "data"
      }
    ],
    "protocol": {
      "member": "generatePartition(weka.core.Instances data)",
      "comment": "Builds the classifier to generate a partition.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getMembershipValues(weka.core.Instance inst)",
    "name": "getMembershipValues",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[]",
      "name": "double[]",
      "isArray": true
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "weka.core.Instance",
          "name": "Instance",
          "isArray": false
        },
        "name": "inst"
      }
    ],
    "protocol": {
      "member": "getMembershipValues(weka.core.Instance inst)",
      "comment": "Computes an array that indicates node membership.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "numElements()",
    "name": "numElements",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "numElements()",
      "comment": "Returns the number of elements in the partition.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "main(java.lang.String[] argv)",
    "name": "main",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.J48",
      "name": "J48",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.J48",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Ljava.lang.String;",
          "name": "String[]",
          "isArray": true
        },
        "name": "argv"
      }
    ],
    "protocol": {
      "member": "main(java.lang.String[] argv)",
      "comment": "Main method for testing this class",
      "kind": "FreeText",
      "condition": ""
    }
  }
]