[
  {
    "signature": "globalInfo()",
    "name": "globalInfo",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.REPTree",
      "name": "REPTree",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.REPTree",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "globalInfo()",
      "comment": "Returns a string describing classifier",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "noPruningTipText()",
    "name": "noPruningTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.REPTree",
      "name": "REPTree",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.REPTree",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "noPruningTipText()",
      "comment": "Returns the tip text for this property",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getNoPruning()",
    "name": "getNoPruning",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.REPTree",
      "name": "REPTree",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.REPTree",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getNoPruning()",
      "comment": "Get the value of NoPruning.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setNoPruning(boolean newNoPruning)",
    "name": "setNoPruning",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.REPTree",
      "name": "REPTree",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.REPTree",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "newNoPruning"
      }
    ],
    "protocol": {
      "member": "setNoPruning(boolean newNoPruning)",
      "comment": "Set the value of NoPruning.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "minNumTipText()",
    "name": "minNumTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.REPTree",
      "name": "REPTree",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.REPTree",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "minNumTipText()",
      "comment": "Returns the tip text for this property",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getMinNum()",
    "name": "getMinNum",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.REPTree",
      "name": "REPTree",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.REPTree",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getMinNum()",
      "comment": "Get the value of MinNum.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setMinNum(double newMinNum)",
    "name": "setMinNum",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.REPTree",
      "name": "REPTree",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.REPTree",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "newMinNum"
      }
    ],
    "protocol": {
      "member": "setMinNum(double newMinNum)",
      "comment": "Set the value of MinNum.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "minVariancePropTipText()",
    "name": "minVariancePropTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.REPTree",
      "name": "REPTree",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.REPTree",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "minVariancePropTipText()",
      "comment": "Returns the tip text for this property",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getMinVarianceProp()",
    "name": "getMinVarianceProp",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.REPTree",
      "name": "REPTree",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.REPTree",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getMinVarianceProp()",
      "comment": "Get the value of MinVarianceProp.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setMinVarianceProp(double newMinVarianceProp)",
    "name": "setMinVarianceProp",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.REPTree",
      "name": "REPTree",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.REPTree",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "newMinVarianceProp"
      }
    ],
    "protocol": {
      "member": "setMinVarianceProp(double newMinVarianceProp)",
      "comment": "Set the value of MinVarianceProp.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "seedTipText()",
    "name": "seedTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.REPTree",
      "name": "REPTree",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.REPTree",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "seedTipText()",
      "comment": "Returns the tip text for this property",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getSeed()",
    "name": "getSeed",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.REPTree",
      "name": "REPTree",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.REPTree",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getSeed()",
      "comment": "Get the value of Seed.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setSeed(int newSeed)",
    "name": "setSeed",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.REPTree",
      "name": "REPTree",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.REPTree",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "newSeed"
      }
    ],
    "protocol": {
      "member": "setSeed(int newSeed)",
      "comment": "Set the value of Seed.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "numFoldsTipText()",
    "name": "numFoldsTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.REPTree",
      "name": "REPTree",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.REPTree",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "numFoldsTipText()",
      "comment": "Returns the tip text for this property",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getNumFolds()",
    "name": "getNumFolds",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.REPTree",
      "name": "REPTree",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.REPTree",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getNumFolds()",
      "comment": "Get the value of NumFolds.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setNumFolds(int newNumFolds)",
    "name": "setNumFolds",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.REPTree",
      "name": "REPTree",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.REPTree",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "newNumFolds"
      }
    ],
    "protocol": {
      "member": "setNumFolds(int newNumFolds)",
      "comment": "Set the value of NumFolds.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "maxDepthTipText()",
    "name": "maxDepthTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.REPTree",
      "name": "REPTree",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.REPTree",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "maxDepthTipText()",
      "comment": "Returns the tip text for this property",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getMaxDepth()",
    "name": "getMaxDepth",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.REPTree",
      "name": "REPTree",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.REPTree",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getMaxDepth()",
      "comment": "Get the value of MaxDepth.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setMaxDepth(int newMaxDepth)",
    "name": "setMaxDepth",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.REPTree",
      "name": "REPTree",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.REPTree",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "newMaxDepth"
      }
    ],
    "protocol": {
      "member": "setMaxDepth(int newMaxDepth)",
      "comment": "Set the value of MaxDepth.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "initialCountTipText()",
    "name": "initialCountTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.REPTree",
      "name": "REPTree",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.REPTree",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "initialCountTipText()",
      "comment": "Returns the tip text for this property",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getInitialCount()",
    "name": "getInitialCount",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.REPTree",
      "name": "REPTree",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.REPTree",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getInitialCount()",
      "comment": "Get the value of InitialCount.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setInitialCount(double newInitialCount)",
    "name": "setInitialCount",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.REPTree",
      "name": "REPTree",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.REPTree",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "newInitialCount"
      }
    ],
    "protocol": {
      "member": "setInitialCount(double newInitialCount)",
      "comment": "Set the value of InitialCount.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "spreadInitialCountTipText()",
    "name": "spreadInitialCountTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.REPTree",
      "name": "REPTree",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.REPTree",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "spreadInitialCountTipText()",
      "comment": "Returns the tip text for this property",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getSpreadInitialCount()",
    "name": "getSpreadInitialCount",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.REPTree",
      "name": "REPTree",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.REPTree",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getSpreadInitialCount()",
      "comment": "Get the value of SpreadInitialCount.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setSpreadInitialCount(boolean newSpreadInitialCount)",
    "name": "setSpreadInitialCount",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.REPTree",
      "name": "REPTree",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.REPTree",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "newSpreadInitialCount"
      }
    ],
    "protocol": {
      "member": "setSpreadInitialCount(boolean newSpreadInitialCount)",
      "comment": "Set the value of SpreadInitialCount.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "listOptions()",
    "name": "listOptions",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.REPTree",
      "name": "REPTree",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.REPTree",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Enumeration<weka.core.Option>",
      "name": "java.util.Enumeration<weka.core.Option>",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "listOptions()",
      "comment": "Lists the command-line options for this classifier.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getOptions()",
    "name": "getOptions",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.REPTree",
      "name": "REPTree",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.REPTree",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String[]",
      "name": "java.lang.String[]",
      "isArray": true
    },
    "parameters": [],
    "protocol": {
      "member": "getOptions()",
      "comment": "Gets options from this classifier.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setOptions(java.lang.String[] options)",
    "name": "setOptions",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.REPTree",
      "name": "REPTree",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.REPTree",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Ljava.lang.String;",
          "name": "String[]",
          "isArray": true
        },
        "name": "options"
      }
    ],
    "protocol": {
      "member": "setOptions(java.lang.String[] options)",
      "comment": "Parses a given list of options.   -M <minimum number of instances> Set minimum number of instances per leaf (default 2).   -V <minimum variance for split> Set minimum numeric class variance proportion of train variance for split (default 1e-3).   -N <number of folds> Number of folds for reduced error pruning (default 3).   -S <seed> Seed for random data shuffling (default 1).   -P No pruning.   -L Maximum tree depth (default -1, no maximum)  <!-- options-end -->",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "numNodes()",
    "name": "numNodes",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.REPTree",
      "name": "REPTree",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.REPTree",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "numNodes()",
      "comment": "Computes size of the tree.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "enumerateMeasures()",
    "name": "enumerateMeasures",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.REPTree",
      "name": "REPTree",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.REPTree",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Enumeration<java.lang.String>",
      "name": "java.util.Enumeration<java.lang.String>",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "enumerateMeasures()",
      "comment": "Returns an enumeration of the additional measure names.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getMeasure(java.lang.String additionalMeasureName)",
    "name": "getMeasure",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.REPTree",
      "name": "REPTree",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.REPTree",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "additionalMeasureName"
      }
    ],
    "protocol": {
      "member": "getMeasure(java.lang.String additionalMeasureName)",
      "comment": "Returns the value of the named measure.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getCapabilities()",
    "name": "getCapabilities",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.REPTree",
      "name": "REPTree",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.REPTree",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "weka.core.Capabilities",
      "name": "weka.core.Capabilities",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getCapabilities()",
      "comment": "Returns default capabilities of the classifier.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "buildClassifier(weka.core.Instances data)",
    "name": "buildClassifier",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.REPTree",
      "name": "REPTree",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.REPTree",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "weka.core.Instances",
          "name": "Instances",
          "isArray": false
        },
        "name": "data"
      }
    ],
    "protocol": {
      "member": "buildClassifier(weka.core.Instances data)",
      "comment": "Builds classifier.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "distributionForInstance(weka.core.Instance instance)",
    "name": "distributionForInstance",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.REPTree",
      "name": "REPTree",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.REPTree",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[]",
      "name": "double[]",
      "isArray": true
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "weka.core.Instance",
          "name": "Instance",
          "isArray": false
        },
        "name": "instance"
      }
    ],
    "protocol": {
      "member": "distributionForInstance(weka.core.Instance instance)",
      "comment": "Computes class distribution of an instance using the tree.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "nextID()",
    "name": "nextID",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.REPTree",
      "name": "REPTree",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.REPTree",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long",
      "name": "long",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "nextID()",
      "comment": "Gets the next unique node ID.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "resetID()",
    "name": "resetID",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.REPTree",
      "name": "REPTree",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.REPTree",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "resetID()",
      "comment": "resets the counter for the nodes",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "toSource(java.lang.String className)",
    "name": "toSource",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.REPTree",
      "name": "REPTree",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.REPTree",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "className"
      }
    ],
    "protocol": {
      "member": "toSource(java.lang.String className)",
      "comment": "Returns the tree as if-then statements.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "graphType()",
    "name": "graphType",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.REPTree",
      "name": "REPTree",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.REPTree",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "graphType()",
      "comment": "Returns the type of graph this classifier represents.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "graph()",
    "name": "graph",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.REPTree",
      "name": "REPTree",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.REPTree",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "graph()",
      "comment": "Outputs the decision tree as a graph",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "toString()",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.REPTree",
      "name": "REPTree",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.REPTree",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "toString()",
      "comment": "Outputs the decision tree.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "generatePartition(weka.core.Instances data)",
    "name": "generatePartition",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.REPTree",
      "name": "REPTree",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.REPTree",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "weka.core.Instances",
          "name": "Instances",
          "isArray": false
        },
        "name": "data"
      }
    ],
    "protocol": {
      "member": "generatePartition(weka.core.Instances data)",
      "comment": "Builds the classifier to generate a partition.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getMembershipValues(weka.core.Instance instance)",
    "name": "getMembershipValues",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.REPTree",
      "name": "REPTree",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.REPTree",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[]",
      "name": "double[]",
      "isArray": true
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "weka.core.Instance",
          "name": "Instance",
          "isArray": false
        },
        "name": "instance"
      }
    ],
    "protocol": {
      "member": "getMembershipValues(weka.core.Instance instance)",
      "comment": "Computes array that indicates node membership. Array locations are allocated based on breadth-first exploration of the tree.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "numElements()",
    "name": "numElements",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.REPTree",
      "name": "REPTree",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.REPTree",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "numElements()",
      "comment": "Returns the number of elements in the partition.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getRevision()",
    "name": "getRevision",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.REPTree",
      "name": "REPTree",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.REPTree",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getRevision()",
      "comment": "Returns the revision string.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "main(java.lang.String[] argv)",
    "name": "main",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.REPTree",
      "name": "REPTree",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.REPTree",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Ljava.lang.String;",
          "name": "String[]",
          "isArray": true
        },
        "name": "argv"
      }
    ],
    "protocol": {
      "member": "main(java.lang.String[] argv)",
      "comment": "Main method for this class.",
      "kind": "FreeText",
      "condition": ""
    }
  }
]