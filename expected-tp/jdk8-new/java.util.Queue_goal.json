[
  {
    "signature": "add(E e)",
    "name": "add",
    "containingClass": {
      "qualifiedName": "java.util.Queue",
      "name": "Queue",
      "isArray": false
    },
    "targetClass": "java.util.Queue",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "e"
      }
    ],
    "protocol": {
      "member": "add(E e)",
      "comment": "Inserts the specified element into this queue if it is possible to do so immediately without violating capacity restrictions, returning true upon success and throwing an IllegalStateException if no space is currently available.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "offer(E e)",
    "name": "offer",
    "containingClass": {
      "qualifiedName": "java.util.Queue",
      "name": "Queue",
      "isArray": false
    },
    "targetClass": "java.util.Queue",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "e"
      }
    ],
    "protocol": {
      "member": "offer(E e)",
      "comment": "Inserts the specified element into this queue if it is possible to do so immediately without violating capacity restrictions. When using a capacity-restricted queue, this method is generally preferable to method_0, which can fail to insert an element only by throwing an exception.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "remove()",
    "name": "remove",
    "containingClass": {
      "qualifiedName": "java.util.Queue",
      "name": "Queue",
      "isArray": false
    },
    "targetClass": "java.util.Queue",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "E",
      "name": "E",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "remove()",
      "comment": "Retrieves and removes the head of this queue. This method differs from method_0 poll only in that it throws an exception if this queue is empty.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "poll()",
    "name": "poll",
    "containingClass": {
      "qualifiedName": "java.util.Queue",
      "name": "Queue",
      "isArray": false
    },
    "targetClass": "java.util.Queue",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "E",
      "name": "E",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "poll()",
      "comment": "Retrieves and removes the head of this queue, or returns null if this queue is empty.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "element()",
    "name": "element",
    "containingClass": {
      "qualifiedName": "java.util.Queue",
      "name": "Queue",
      "isArray": false
    },
    "targetClass": "java.util.Queue",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "E",
      "name": "E",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "element()",
      "comment": "Retrieves, but does not remove, the head of this queue. This method differs from method_0 peek only in that it throws an exception if this queue is empty.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "peek()",
    "name": "peek",
    "containingClass": {
      "qualifiedName": "java.util.Queue",
      "name": "Queue",
      "isArray": false
    },
    "targetClass": "java.util.Queue",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "E",
      "name": "E",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "peek()",
      "comment": "Retrieves, but does not remove, the head of this queue, or returns null if this queue is empty.",
      "kind": "FreeText",
      "condition": ""
    }
  }
]