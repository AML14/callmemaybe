[
  {
    "signature": "nodePosition(org.graphstream.graph.Graph graph, java.lang.String id)",
    "name": "nodePosition",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.graphicGraph.GraphPosLengthUtils",
      "name": "GraphPosLengthUtils",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.graphicGraph.GraphPosLengthUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[]",
      "name": "double[]",
      "isArray": true
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.graphstream.graph.Graph",
          "name": "Graph",
          "isArray": false
        },
        "name": "graph"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "protocol": {
      "member": "nodePosition(org.graphstream.graph.Graph graph, java.lang.String id)",
      "comment": "Retrieve a node position from its attributes (\"x\", \"y\", \"z\", or \"xy\", or \"xyz\").",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "nodePointPosition(org.graphstream.graph.Graph graph, java.lang.String id)",
    "name": "nodePointPosition",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.graphicGraph.GraphPosLengthUtils",
      "name": "GraphPosLengthUtils",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.graphicGraph.GraphPosLengthUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.graphstream.ui.geom.Point3",
      "name": "org.graphstream.ui.geom.Point3",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.graphstream.graph.Graph",
          "name": "Graph",
          "isArray": false
        },
        "name": "graph"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "protocol": {
      "member": "nodePointPosition(org.graphstream.graph.Graph graph, java.lang.String id)",
      "comment": "Retrieve a node position from its attributes (\"x\", \"y\", \"z\", or \"xy\", or \"xyz\").",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "nodePosition(org.graphstream.graph.Node node)",
    "name": "nodePosition",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.graphicGraph.GraphPosLengthUtils",
      "name": "GraphPosLengthUtils",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.graphicGraph.GraphPosLengthUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[]",
      "name": "double[]",
      "isArray": true
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.graphstream.graph.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "node"
      }
    ],
    "protocol": {
      "member": "nodePosition(org.graphstream.graph.Node node)",
      "comment": "Like method_0 but use an existing node as argument.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "nodePointPosition(org.graphstream.graph.Node node)",
    "name": "nodePointPosition",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.graphicGraph.GraphPosLengthUtils",
      "name": "GraphPosLengthUtils",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.graphicGraph.GraphPosLengthUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.graphstream.ui.geom.Point3",
      "name": "org.graphstream.ui.geom.Point3",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.graphstream.graph.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "node"
      }
    ],
    "protocol": {
      "member": "nodePointPosition(org.graphstream.graph.Node node)",
      "comment": "Like method_0 but use an existing node as argument.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "nodePosition(org.graphstream.graph.Graph graph, java.lang.String id, double[] xyz)",
    "name": "nodePosition",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.graphicGraph.GraphPosLengthUtils",
      "name": "GraphPosLengthUtils",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.graphicGraph.GraphPosLengthUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.graphstream.graph.Graph",
          "name": "Graph",
          "isArray": false
        },
        "name": "graph"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      },
      {
        "type": {
          "qualifiedName": "[D",
          "name": "double[]",
          "isArray": true
        },
        "name": "xyz"
      }
    ],
    "protocol": {
      "member": "nodePosition(org.graphstream.graph.Graph graph, java.lang.String id, double[] xyz)",
      "comment": "Like method_0, but instead of returning a newly allocated array, fill up the array given as parameter. This array must have at least three cells.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "nodePosition(org.graphstream.graph.Graph graph, java.lang.String id, org.graphstream.ui.geom.Point3 pos)",
    "name": "nodePosition",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.graphicGraph.GraphPosLengthUtils",
      "name": "GraphPosLengthUtils",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.graphicGraph.GraphPosLengthUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.graphstream.graph.Graph",
          "name": "Graph",
          "isArray": false
        },
        "name": "graph"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      },
      {
        "type": {
          "qualifiedName": "org.graphstream.ui.geom.Point3",
          "name": "Point3",
          "isArray": false
        },
        "name": "pos"
      }
    ],
    "protocol": {
      "member": "nodePosition(org.graphstream.graph.Graph graph, java.lang.String id, org.graphstream.ui.geom.Point3 pos)",
      "comment": "Like method_0, but instead of returning a newly allocated array, fill up the array given as parameter. This array must have at least three cells.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "nodePosition(org.graphstream.graph.Node node, double[] xyz)",
    "name": "nodePosition",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.graphicGraph.GraphPosLengthUtils",
      "name": "GraphPosLengthUtils",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.graphicGraph.GraphPosLengthUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.graphstream.graph.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "node"
      },
      {
        "type": {
          "qualifiedName": "[D",
          "name": "double[]",
          "isArray": true
        },
        "name": "xyz"
      }
    ],
    "protocol": {
      "member": "nodePosition(org.graphstream.graph.Node node, double[] xyz)",
      "comment": "Like method_0 but use an existing node as argument.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "nodePosition(org.graphstream.graph.Node node, org.graphstream.ui.geom.Point3 pos)",
    "name": "nodePosition",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.graphicGraph.GraphPosLengthUtils",
      "name": "GraphPosLengthUtils",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.graphicGraph.GraphPosLengthUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.graphstream.graph.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "node"
      },
      {
        "type": {
          "qualifiedName": "org.graphstream.ui.geom.Point3",
          "name": "Point3",
          "isArray": false
        },
        "name": "pos"
      }
    ],
    "protocol": {
      "member": "nodePosition(org.graphstream.graph.Node node, org.graphstream.ui.geom.Point3 pos)",
      "comment": "Like method_0 but use an existing node as argument.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "positionFromObject(java.lang.Object o, double[] xyz)",
    "name": "positionFromObject",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.graphicGraph.GraphPosLengthUtils",
      "name": "GraphPosLengthUtils",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.graphicGraph.GraphPosLengthUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "o"
      },
      {
        "type": {
          "qualifiedName": "[D",
          "name": "double[]",
          "isArray": true
        },
        "name": "xyz"
      }
    ],
    "protocol": {
      "member": "positionFromObject(java.lang.Object o, double[] xyz)",
      "comment": "Try to convert an object to a position. The object can be an array of numbers, an array of base numeric types or their object counterparts.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "positionFromObject(java.lang.Object o, org.graphstream.ui.geom.Point3 pos)",
    "name": "positionFromObject",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.graphicGraph.GraphPosLengthUtils",
      "name": "GraphPosLengthUtils",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.graphicGraph.GraphPosLengthUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "o"
      },
      {
        "type": {
          "qualifiedName": "org.graphstream.ui.geom.Point3",
          "name": "Point3",
          "isArray": false
        },
        "name": "pos"
      }
    ],
    "protocol": {
      "member": "positionFromObject(java.lang.Object o, org.graphstream.ui.geom.Point3 pos)",
      "comment": "Try to convert an object to a position. The object can be an array of numbers, an array of base numeric types or their object counterparts.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "edgeLength(org.graphstream.graph.Graph graph, java.lang.String id)",
    "name": "edgeLength",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.graphicGraph.GraphPosLengthUtils",
      "name": "GraphPosLengthUtils",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.graphicGraph.GraphPosLengthUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.graphstream.graph.Graph",
          "name": "Graph",
          "isArray": false
        },
        "name": "graph"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "protocol": {
      "member": "edgeLength(org.graphstream.graph.Graph graph, java.lang.String id)",
      "comment": "Compute the edge length of the given edge according to its two nodes positions.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "edgeLength(org.graphstream.graph.Edge edge)",
    "name": "edgeLength",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.graphicGraph.GraphPosLengthUtils",
      "name": "GraphPosLengthUtils",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.graphicGraph.GraphPosLengthUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.graphstream.graph.Edge",
          "name": "Edge",
          "isArray": false
        },
        "name": "edge"
      }
    ],
    "protocol": {
      "member": "edgeLength(org.graphstream.graph.Edge edge)",
      "comment": "Like method_0 but use an existing edge as argument.",
      "kind": "FreeText",
      "condition": ""
    }
  }
]