[
  {
    "signature": "globalInfo()",
    "name": "globalInfo",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.DecisionStump",
      "name": "DecisionStump",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.DecisionStump",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "globalInfo()",
      "comment": "Returns a string describing classifier",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getCapabilities()",
    "name": "getCapabilities",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.DecisionStump",
      "name": "DecisionStump",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.DecisionStump",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "weka.core.Capabilities",
      "name": "weka.core.Capabilities",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getCapabilities()",
      "comment": "Returns default capabilities of the classifier.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "buildClassifier(weka.core.Instances instances)",
    "name": "buildClassifier",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.DecisionStump",
      "name": "DecisionStump",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.DecisionStump",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "weka.core.Instances",
          "name": "Instances",
          "isArray": false
        },
        "name": "instances"
      }
    ],
    "protocol": {
      "member": "buildClassifier(weka.core.Instances instances)",
      "comment": "Generates the classifier.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "distributionForInstance(weka.core.Instance instance)",
    "name": "distributionForInstance",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.DecisionStump",
      "name": "DecisionStump",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.DecisionStump",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[]",
      "name": "double[]",
      "isArray": true
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "weka.core.Instance",
          "name": "Instance",
          "isArray": false
        },
        "name": "instance"
      }
    ],
    "protocol": {
      "member": "distributionForInstance(weka.core.Instance instance)",
      "comment": "Calculates the class membership probabilities for the given test instance.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "toSource(java.lang.String className)",
    "name": "toSource",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.DecisionStump",
      "name": "DecisionStump",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.DecisionStump",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "className"
      }
    ],
    "protocol": {
      "member": "toSource(java.lang.String className)",
      "comment": "Returns the decision tree as Java source code.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "sourceClass(weka.core.Attribute c, double[] dist)",
    "name": "sourceClass",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.DecisionStump",
      "name": "DecisionStump",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.DecisionStump",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "weka.core.Attribute",
          "name": "Attribute",
          "isArray": false
        },
        "name": "c"
      },
      {
        "type": {
          "qualifiedName": "[D",
          "name": "double[]",
          "isArray": true
        },
        "name": "dist"
      }
    ],
    "protocol": {
      "member": "sourceClass(weka.core.Attribute c, double[] dist)",
      "comment": "Returns the value as string out of the given distribution",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "toString()",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.DecisionStump",
      "name": "DecisionStump",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.DecisionStump",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "toString()",
      "comment": "Returns a description of the classifier.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "printDist(double[] dist)",
    "name": "printDist",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.DecisionStump",
      "name": "DecisionStump",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.DecisionStump",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[D",
          "name": "double[]",
          "isArray": true
        },
        "name": "dist"
      }
    ],
    "protocol": {
      "member": "printDist(double[] dist)",
      "comment": "Prints a class distribution.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "printClass(double[] dist)",
    "name": "printClass",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.DecisionStump",
      "name": "DecisionStump",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.DecisionStump",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[D",
          "name": "double[]",
          "isArray": true
        },
        "name": "dist"
      }
    ],
    "protocol": {
      "member": "printClass(double[] dist)",
      "comment": "Prints a classification.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "findSplitNominal(int index)",
    "name": "findSplitNominal",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.DecisionStump",
      "name": "DecisionStump",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.DecisionStump",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      }
    ],
    "protocol": {
      "member": "findSplitNominal(int index)",
      "comment": "Finds best split for nominal attribute and returns value.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "findSplitNominalNominal(int index)",
    "name": "findSplitNominalNominal",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.DecisionStump",
      "name": "DecisionStump",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.DecisionStump",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      }
    ],
    "protocol": {
      "member": "findSplitNominalNominal(int index)",
      "comment": "Finds best split for nominal attribute and nominal class and returns value.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "findSplitNominalNumeric(int index)",
    "name": "findSplitNominalNumeric",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.DecisionStump",
      "name": "DecisionStump",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.DecisionStump",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      }
    ],
    "protocol": {
      "member": "findSplitNominalNumeric(int index)",
      "comment": "Finds best split for nominal attribute and numeric class and returns value.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "findSplitNumeric(int index)",
    "name": "findSplitNumeric",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.DecisionStump",
      "name": "DecisionStump",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.DecisionStump",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      }
    ],
    "protocol": {
      "member": "findSplitNumeric(int index)",
      "comment": "Finds best split for numeric attribute and returns value.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "findSplitNumericNominal(int index)",
    "name": "findSplitNumericNominal",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.DecisionStump",
      "name": "DecisionStump",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.DecisionStump",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      }
    ],
    "protocol": {
      "member": "findSplitNumericNominal(int index)",
      "comment": "Finds best split for numeric attribute and nominal class and returns value.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "findSplitNumericNumeric(int index)",
    "name": "findSplitNumericNumeric",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.DecisionStump",
      "name": "DecisionStump",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.DecisionStump",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      }
    ],
    "protocol": {
      "member": "findSplitNumericNumeric(int index)",
      "comment": "Finds best split for numeric attribute and numeric class and returns value.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "variance(double[][] s, double[] sS, double[] sumOfWeights)",
    "name": "variance",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.DecisionStump",
      "name": "DecisionStump",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.DecisionStump",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[[D",
          "name": "double[][]",
          "isArray": true
        },
        "name": "s"
      },
      {
        "type": {
          "qualifiedName": "[D",
          "name": "double[]",
          "isArray": true
        },
        "name": "sS"
      },
      {
        "type": {
          "qualifiedName": "[D",
          "name": "double[]",
          "isArray": true
        },
        "name": "sumOfWeights"
      }
    ],
    "protocol": {
      "member": "variance(double[][] s, double[] sS, double[] sumOfWeights)",
      "comment": "Computes variance for subsets.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "whichSubset(weka.core.Instance instance)",
    "name": "whichSubset",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.DecisionStump",
      "name": "DecisionStump",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.DecisionStump",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "weka.core.Instance",
          "name": "Instance",
          "isArray": false
        },
        "name": "instance"
      }
    ],
    "protocol": {
      "member": "whichSubset(weka.core.Instance instance)",
      "comment": "Returns the subset an instance falls into.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getRevision()",
    "name": "getRevision",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.DecisionStump",
      "name": "DecisionStump",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.DecisionStump",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getRevision()",
      "comment": "Returns the revision string.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "main(java.lang.String[] argv)",
    "name": "main",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.DecisionStump",
      "name": "DecisionStump",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.DecisionStump",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Ljava.lang.String;",
          "name": "String[]",
          "isArray": true
        },
        "name": "argv"
      }
    ],
    "protocol": {
      "member": "main(java.lang.String[] argv)",
      "comment": "Main method for testing this class.",
      "kind": "FreeText",
      "condition": ""
    }
  }
]