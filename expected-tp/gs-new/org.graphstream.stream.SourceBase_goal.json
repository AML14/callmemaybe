[
  {
    "signature": "org.graphstream.stream.SourceBase()",
    "name": "org.graphstream.stream.SourceBase",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.SourceBase",
      "name": "SourceBase",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.SourceBase",
    "isVarArgs": false,
    "parameters": [],
    "protocol": {
      "member": "org.graphstream.stream.SourceBase()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "org.graphstream.stream.SourceBase(java.lang.String sourceId)",
    "name": "org.graphstream.stream.SourceBase",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.SourceBase",
      "name": "SourceBase",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.SourceBase",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "sourceId"
      }
    ],
    "protocol": {
      "member": "org.graphstream.stream.SourceBase(java.lang.String sourceId)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "attributeSinks()",
    "name": "attributeSinks",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.SourceBase",
      "name": "SourceBase",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.SourceBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Iterable<org.graphstream.stream.AttributeSink>",
      "name": "java.lang.Iterable<org.graphstream.stream.AttributeSink>",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "attributeSinks()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "elementSinks()",
    "name": "elementSinks",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.SourceBase",
      "name": "SourceBase",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.SourceBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Iterable<org.graphstream.stream.ElementSink>",
      "name": "java.lang.Iterable<org.graphstream.stream.ElementSink>",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "elementSinks()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "addSink(org.graphstream.stream.Sink sink)",
    "name": "addSink",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.SourceBase",
      "name": "SourceBase",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.SourceBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.graphstream.stream.Sink",
          "name": "Sink",
          "isArray": false
        },
        "name": "sink"
      }
    ],
    "protocol": {
      "member": "addSink(org.graphstream.stream.Sink sink)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "addAttributeSink(org.graphstream.stream.AttributeSink sink)",
    "name": "addAttributeSink",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.SourceBase",
      "name": "SourceBase",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.SourceBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.graphstream.stream.AttributeSink",
          "name": "AttributeSink",
          "isArray": false
        },
        "name": "sink"
      }
    ],
    "protocol": {
      "member": "addAttributeSink(org.graphstream.stream.AttributeSink sink)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "addElementSink(org.graphstream.stream.ElementSink sink)",
    "name": "addElementSink",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.SourceBase",
      "name": "SourceBase",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.SourceBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.graphstream.stream.ElementSink",
          "name": "ElementSink",
          "isArray": false
        },
        "name": "sink"
      }
    ],
    "protocol": {
      "member": "addElementSink(org.graphstream.stream.ElementSink sink)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "clearSinks()",
    "name": "clearSinks",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.SourceBase",
      "name": "SourceBase",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.SourceBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "clearSinks()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "clearElementSinks()",
    "name": "clearElementSinks",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.SourceBase",
      "name": "SourceBase",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.SourceBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "clearElementSinks()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "clearAttributeSinks()",
    "name": "clearAttributeSinks",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.SourceBase",
      "name": "SourceBase",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.SourceBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "clearAttributeSinks()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "removeSink(org.graphstream.stream.Sink sink)",
    "name": "removeSink",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.SourceBase",
      "name": "SourceBase",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.SourceBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.graphstream.stream.Sink",
          "name": "Sink",
          "isArray": false
        },
        "name": "sink"
      }
    ],
    "protocol": {
      "member": "removeSink(org.graphstream.stream.Sink sink)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "removeAttributeSink(org.graphstream.stream.AttributeSink sink)",
    "name": "removeAttributeSink",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.SourceBase",
      "name": "SourceBase",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.SourceBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.graphstream.stream.AttributeSink",
          "name": "AttributeSink",
          "isArray": false
        },
        "name": "sink"
      }
    ],
    "protocol": {
      "member": "removeAttributeSink(org.graphstream.stream.AttributeSink sink)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "removeElementSink(org.graphstream.stream.ElementSink sink)",
    "name": "removeElementSink",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.SourceBase",
      "name": "SourceBase",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.SourceBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.graphstream.stream.ElementSink",
          "name": "ElementSink",
          "isArray": false
        },
        "name": "sink"
      }
    ],
    "protocol": {
      "member": "removeElementSink(org.graphstream.stream.ElementSink sink)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "sendGraphCleared(java.lang.String sourceId)",
    "name": "sendGraphCleared",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.SourceBase",
      "name": "SourceBase",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.SourceBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "sourceId"
      }
    ],
    "protocol": {
      "member": "sendGraphCleared(java.lang.String sourceId)",
      "comment": "Send a \"graph cleared\" event to all element sinks.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "sendGraphCleared(java.lang.String sourceId, long timeId)",
    "name": "sendGraphCleared",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.SourceBase",
      "name": "SourceBase",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.SourceBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "sourceId"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "timeId"
      }
    ],
    "protocol": {
      "member": "sendGraphCleared(java.lang.String sourceId, long timeId)",
      "comment": "Send a \"graph cleared\" event to all element sinks.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "sendStepBegins(java.lang.String sourceId, double step)",
    "name": "sendStepBegins",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.SourceBase",
      "name": "SourceBase",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.SourceBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "sourceId"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "step"
      }
    ],
    "protocol": {
      "member": "sendStepBegins(java.lang.String sourceId, double step)",
      "comment": "Send a \"step begins\" event to all element sinks.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "sendStepBegins(java.lang.String sourceId, long timeId, double step)",
    "name": "sendStepBegins",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.SourceBase",
      "name": "SourceBase",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.SourceBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "sourceId"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "timeId"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "step"
      }
    ],
    "protocol": {
      "member": "sendStepBegins(java.lang.String sourceId, long timeId, double step)",
      "comment": "Send a \"step begins\" event to all element sinks.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "sendNodeAdded(java.lang.String sourceId, java.lang.String nodeId)",
    "name": "sendNodeAdded",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.SourceBase",
      "name": "SourceBase",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.SourceBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "sourceId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "nodeId"
      }
    ],
    "protocol": {
      "member": "sendNodeAdded(java.lang.String sourceId, java.lang.String nodeId)",
      "comment": "Send a \"node added\" event to all element sinks.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "sendNodeAdded(java.lang.String sourceId, long timeId, java.lang.String nodeId)",
    "name": "sendNodeAdded",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.SourceBase",
      "name": "SourceBase",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.SourceBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "sourceId"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "timeId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "nodeId"
      }
    ],
    "protocol": {
      "member": "sendNodeAdded(java.lang.String sourceId, long timeId, java.lang.String nodeId)",
      "comment": "Send a \"node added\" event to all element sinks.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "sendNodeRemoved(java.lang.String sourceId, java.lang.String nodeId)",
    "name": "sendNodeRemoved",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.SourceBase",
      "name": "SourceBase",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.SourceBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "sourceId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "nodeId"
      }
    ],
    "protocol": {
      "member": "sendNodeRemoved(java.lang.String sourceId, java.lang.String nodeId)",
      "comment": "Send a \"node removed\" event to all element sinks.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "sendNodeRemoved(java.lang.String sourceId, long timeId, java.lang.String nodeId)",
    "name": "sendNodeRemoved",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.SourceBase",
      "name": "SourceBase",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.SourceBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "sourceId"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "timeId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "nodeId"
      }
    ],
    "protocol": {
      "member": "sendNodeRemoved(java.lang.String sourceId, long timeId, java.lang.String nodeId)",
      "comment": "Send a \"node removed\" event to all element sinks.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "sendEdgeAdded(java.lang.String sourceId, java.lang.String edgeId, java.lang.String fromNodeId, java.lang.String toNodeId, boolean directed)",
    "name": "sendEdgeAdded",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.SourceBase",
      "name": "SourceBase",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.SourceBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "sourceId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "edgeId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "fromNodeId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "toNodeId"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "directed"
      }
    ],
    "protocol": {
      "member": "sendEdgeAdded(java.lang.String sourceId, java.lang.String edgeId, java.lang.String fromNodeId, java.lang.String toNodeId, boolean directed)",
      "comment": "Send an \"edge added\" event to all element sinks.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "sendEdgeAdded(java.lang.String sourceId, long timeId, java.lang.String edgeId, java.lang.String fromNodeId, java.lang.String toNodeId, boolean directed)",
    "name": "sendEdgeAdded",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.SourceBase",
      "name": "SourceBase",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.SourceBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "sourceId"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "timeId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "edgeId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "fromNodeId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "toNodeId"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "directed"
      }
    ],
    "protocol": {
      "member": "sendEdgeAdded(java.lang.String sourceId, long timeId, java.lang.String edgeId, java.lang.String fromNodeId, java.lang.String toNodeId, boolean directed)",
      "comment": "Send an \"edge added\" event to all element sinks.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "sendEdgeRemoved(java.lang.String sourceId, java.lang.String edgeId)",
    "name": "sendEdgeRemoved",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.SourceBase",
      "name": "SourceBase",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.SourceBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "sourceId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "edgeId"
      }
    ],
    "protocol": {
      "member": "sendEdgeRemoved(java.lang.String sourceId, java.lang.String edgeId)",
      "comment": "Send a \"edge removed\" event to all element sinks.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "sendEdgeRemoved(java.lang.String sourceId, long timeId, java.lang.String edgeId)",
    "name": "sendEdgeRemoved",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.SourceBase",
      "name": "SourceBase",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.SourceBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "sourceId"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "timeId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "edgeId"
      }
    ],
    "protocol": {
      "member": "sendEdgeRemoved(java.lang.String sourceId, long timeId, java.lang.String edgeId)",
      "comment": "Send a \"edge removed\" event to all element sinks.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "sendEdgeAttributeAdded(java.lang.String sourceId, java.lang.String edgeId, java.lang.String attribute, java.lang.Object value)",
    "name": "sendEdgeAttributeAdded",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.SourceBase",
      "name": "SourceBase",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.SourceBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "sourceId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "edgeId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "attribute"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "protocol": {
      "member": "sendEdgeAttributeAdded(java.lang.String sourceId, java.lang.String edgeId, java.lang.String attribute, java.lang.Object value)",
      "comment": "Send a \"edge attribute added\" event to all attribute sinks.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "sendEdgeAttributeAdded(java.lang.String sourceId, long timeId, java.lang.String edgeId, java.lang.String attribute, java.lang.Object value)",
    "name": "sendEdgeAttributeAdded",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.SourceBase",
      "name": "SourceBase",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.SourceBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "sourceId"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "timeId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "edgeId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "attribute"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "protocol": {
      "member": "sendEdgeAttributeAdded(java.lang.String sourceId, long timeId, java.lang.String edgeId, java.lang.String attribute, java.lang.Object value)",
      "comment": "Send a \"edge attribute added\" event to all attribute sinks.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "sendEdgeAttributeChanged(java.lang.String sourceId, java.lang.String edgeId, java.lang.String attribute, java.lang.Object oldValue, java.lang.Object newValue)",
    "name": "sendEdgeAttributeChanged",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.SourceBase",
      "name": "SourceBase",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.SourceBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "sourceId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "edgeId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "attribute"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "oldValue"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "newValue"
      }
    ],
    "protocol": {
      "member": "sendEdgeAttributeChanged(java.lang.String sourceId, java.lang.String edgeId, java.lang.String attribute, java.lang.Object oldValue, java.lang.Object newValue)",
      "comment": "Send a \"edge attribute changed\" event to all attribute sinks.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "sendEdgeAttributeChanged(java.lang.String sourceId, long timeId, java.lang.String edgeId, java.lang.String attribute, java.lang.Object oldValue, java.lang.Object newValue)",
    "name": "sendEdgeAttributeChanged",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.SourceBase",
      "name": "SourceBase",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.SourceBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "sourceId"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "timeId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "edgeId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "attribute"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "oldValue"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "newValue"
      }
    ],
    "protocol": {
      "member": "sendEdgeAttributeChanged(java.lang.String sourceId, long timeId, java.lang.String edgeId, java.lang.String attribute, java.lang.Object oldValue, java.lang.Object newValue)",
      "comment": "Send a \"edge attribute changed\" event to all attribute sinks.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "sendEdgeAttributeRemoved(java.lang.String sourceId, java.lang.String edgeId, java.lang.String attribute)",
    "name": "sendEdgeAttributeRemoved",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.SourceBase",
      "name": "SourceBase",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.SourceBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "sourceId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "edgeId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "attribute"
      }
    ],
    "protocol": {
      "member": "sendEdgeAttributeRemoved(java.lang.String sourceId, java.lang.String edgeId, java.lang.String attribute)",
      "comment": "Send a \"edge attribute removed\" event to all attribute sinks.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "sendEdgeAttributeRemoved(java.lang.String sourceId, long timeId, java.lang.String edgeId, java.lang.String attribute)",
    "name": "sendEdgeAttributeRemoved",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.SourceBase",
      "name": "SourceBase",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.SourceBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "sourceId"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "timeId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "edgeId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "attribute"
      }
    ],
    "protocol": {
      "member": "sendEdgeAttributeRemoved(java.lang.String sourceId, long timeId, java.lang.String edgeId, java.lang.String attribute)",
      "comment": "Send a \"edge attribute removed\" event to all attribute sinks.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "sendGraphAttributeAdded(java.lang.String sourceId, java.lang.String attribute, java.lang.Object value)",
    "name": "sendGraphAttributeAdded",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.SourceBase",
      "name": "SourceBase",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.SourceBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "sourceId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "attribute"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "protocol": {
      "member": "sendGraphAttributeAdded(java.lang.String sourceId, java.lang.String attribute, java.lang.Object value)",
      "comment": "Send a \"graph attribute added\" event to all attribute sinks.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "sendGraphAttributeAdded(java.lang.String sourceId, long timeId, java.lang.String attribute, java.lang.Object value)",
    "name": "sendGraphAttributeAdded",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.SourceBase",
      "name": "SourceBase",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.SourceBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "sourceId"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "timeId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "attribute"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "protocol": {
      "member": "sendGraphAttributeAdded(java.lang.String sourceId, long timeId, java.lang.String attribute, java.lang.Object value)",
      "comment": "Send a \"graph attribute added\" event to all attribute sinks.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "sendGraphAttributeChanged(java.lang.String sourceId, java.lang.String attribute, java.lang.Object oldValue, java.lang.Object newValue)",
    "name": "sendGraphAttributeChanged",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.SourceBase",
      "name": "SourceBase",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.SourceBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "sourceId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "attribute"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "oldValue"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "newValue"
      }
    ],
    "protocol": {
      "member": "sendGraphAttributeChanged(java.lang.String sourceId, java.lang.String attribute, java.lang.Object oldValue, java.lang.Object newValue)",
      "comment": "Send a \"graph attribute changed\" event to all attribute sinks.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "sendGraphAttributeChanged(java.lang.String sourceId, long timeId, java.lang.String attribute, java.lang.Object oldValue, java.lang.Object newValue)",
    "name": "sendGraphAttributeChanged",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.SourceBase",
      "name": "SourceBase",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.SourceBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "sourceId"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "timeId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "attribute"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "oldValue"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "newValue"
      }
    ],
    "protocol": {
      "member": "sendGraphAttributeChanged(java.lang.String sourceId, long timeId, java.lang.String attribute, java.lang.Object oldValue, java.lang.Object newValue)",
      "comment": "Send a \"graph attribute changed\" event to all attribute sinks.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "sendGraphAttributeRemoved(java.lang.String sourceId, java.lang.String attribute)",
    "name": "sendGraphAttributeRemoved",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.SourceBase",
      "name": "SourceBase",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.SourceBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "sourceId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "attribute"
      }
    ],
    "protocol": {
      "member": "sendGraphAttributeRemoved(java.lang.String sourceId, java.lang.String attribute)",
      "comment": "Send a \"graph attribute removed\" event to all attribute sinks.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "sendGraphAttributeRemoved(java.lang.String sourceId, long timeId, java.lang.String attribute)",
    "name": "sendGraphAttributeRemoved",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.SourceBase",
      "name": "SourceBase",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.SourceBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "sourceId"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "timeId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "attribute"
      }
    ],
    "protocol": {
      "member": "sendGraphAttributeRemoved(java.lang.String sourceId, long timeId, java.lang.String attribute)",
      "comment": "Send a \"graph attribute removed\" event to all attribute sinks.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "sendNodeAttributeAdded(java.lang.String sourceId, java.lang.String nodeId, java.lang.String attribute, java.lang.Object value)",
    "name": "sendNodeAttributeAdded",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.SourceBase",
      "name": "SourceBase",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.SourceBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "sourceId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "nodeId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "attribute"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "protocol": {
      "member": "sendNodeAttributeAdded(java.lang.String sourceId, java.lang.String nodeId, java.lang.String attribute, java.lang.Object value)",
      "comment": "Send a \"node attribute added\" event to all attribute sinks.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "sendNodeAttributeAdded(java.lang.String sourceId, long timeId, java.lang.String nodeId, java.lang.String attribute, java.lang.Object value)",
    "name": "sendNodeAttributeAdded",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.SourceBase",
      "name": "SourceBase",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.SourceBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "sourceId"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "timeId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "nodeId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "attribute"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "protocol": {
      "member": "sendNodeAttributeAdded(java.lang.String sourceId, long timeId, java.lang.String nodeId, java.lang.String attribute, java.lang.Object value)",
      "comment": "Send a \"node attribute added\" event to all attribute sinks.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "sendNodeAttributeChanged(java.lang.String sourceId, java.lang.String nodeId, java.lang.String attribute, java.lang.Object oldValue, java.lang.Object newValue)",
    "name": "sendNodeAttributeChanged",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.SourceBase",
      "name": "SourceBase",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.SourceBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "sourceId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "nodeId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "attribute"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "oldValue"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "newValue"
      }
    ],
    "protocol": {
      "member": "sendNodeAttributeChanged(java.lang.String sourceId, java.lang.String nodeId, java.lang.String attribute, java.lang.Object oldValue, java.lang.Object newValue)",
      "comment": "Send a \"node attribute changed\" event to all attribute sinks.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "sendNodeAttributeChanged(java.lang.String sourceId, long timeId, java.lang.String nodeId, java.lang.String attribute, java.lang.Object oldValue, java.lang.Object newValue)",
    "name": "sendNodeAttributeChanged",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.SourceBase",
      "name": "SourceBase",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.SourceBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "sourceId"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "timeId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "nodeId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "attribute"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "oldValue"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "newValue"
      }
    ],
    "protocol": {
      "member": "sendNodeAttributeChanged(java.lang.String sourceId, long timeId, java.lang.String nodeId, java.lang.String attribute, java.lang.Object oldValue, java.lang.Object newValue)",
      "comment": "Send a \"node attribute changed\" event to all attribute sinks.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "sendNodeAttributeRemoved(java.lang.String sourceId, java.lang.String nodeId, java.lang.String attribute)",
    "name": "sendNodeAttributeRemoved",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.SourceBase",
      "name": "SourceBase",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.SourceBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "sourceId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "nodeId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "attribute"
      }
    ],
    "protocol": {
      "member": "sendNodeAttributeRemoved(java.lang.String sourceId, java.lang.String nodeId, java.lang.String attribute)",
      "comment": "Send a \"node attribute removed\" event to all attribute sinks.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "sendNodeAttributeRemoved(java.lang.String sourceId, long timeId, java.lang.String nodeId, java.lang.String attribute)",
    "name": "sendNodeAttributeRemoved",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.SourceBase",
      "name": "SourceBase",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.SourceBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "sourceId"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "timeId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "nodeId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "attribute"
      }
    ],
    "protocol": {
      "member": "sendNodeAttributeRemoved(java.lang.String sourceId, long timeId, java.lang.String nodeId, java.lang.String attribute)",
      "comment": "Send a \"node attribute removed\" event to all attribute sinks.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "sendAttributeChangedEvent(java.lang.String sourceId, java.lang.String eltId, org.graphstream.stream.SourceBase$ElementType eltType, java.lang.String attribute, org.graphstream.graph.implementations.AbstractElement$AttributeChangeEvent event, java.lang.Object oldValue, java.lang.Object newValue)",
    "name": "sendAttributeChangedEvent",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.SourceBase",
      "name": "SourceBase",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.SourceBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "sourceId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "eltId"
      },
      {
        "type": {
          "qualifiedName": "org.graphstream.stream.SourceBase$ElementType",
          "name": "ElementType",
          "isArray": false
        },
        "name": "eltType"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "attribute"
      },
      {
        "type": {
          "qualifiedName": "org.graphstream.graph.implementations.AbstractElement$AttributeChangeEvent",
          "name": "AttributeChangeEvent",
          "isArray": false
        },
        "name": "event"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "oldValue"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "newValue"
      }
    ],
    "protocol": {
      "member": "sendAttributeChangedEvent(java.lang.String sourceId, java.lang.String eltId, org.graphstream.stream.SourceBase$ElementType eltType, java.lang.String attribute, org.graphstream.graph.implementations.AbstractElement$AttributeChangeEvent event, java.lang.Object oldValue, java.lang.Object newValue)",
      "comment": "Send a add/change/remove attribute event on an element. This method is a generic way of notifying of an attribute change and is equivalent to individual send*Attribute*() methods.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "sendAttributeChangedEvent(java.lang.String sourceId, long timeId, java.lang.String eltId, org.graphstream.stream.SourceBase$ElementType eltType, java.lang.String attribute, org.graphstream.graph.implementations.AbstractElement$AttributeChangeEvent event, java.lang.Object oldValue, java.lang.Object newValue)",
    "name": "sendAttributeChangedEvent",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.SourceBase",
      "name": "SourceBase",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.SourceBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "sourceId"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "timeId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "eltId"
      },
      {
        "type": {
          "qualifiedName": "org.graphstream.stream.SourceBase$ElementType",
          "name": "ElementType",
          "isArray": false
        },
        "name": "eltType"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "attribute"
      },
      {
        "type": {
          "qualifiedName": "org.graphstream.graph.implementations.AbstractElement$AttributeChangeEvent",
          "name": "AttributeChangeEvent",
          "isArray": false
        },
        "name": "event"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "oldValue"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "newValue"
      }
    ],
    "protocol": {
      "member": "sendAttributeChangedEvent(java.lang.String sourceId, long timeId, java.lang.String eltId, org.graphstream.stream.SourceBase$ElementType eltType, java.lang.String attribute, org.graphstream.graph.implementations.AbstractElement$AttributeChangeEvent event, java.lang.Object oldValue, java.lang.Object newValue)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "manageEvents()",
    "name": "manageEvents",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.SourceBase",
      "name": "SourceBase",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.SourceBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "manageEvents()",
      "comment": "If in \"event processing mode\", ensure all pending events are processed.",
      "kind": "FreeText",
      "condition": ""
    }
  }
]